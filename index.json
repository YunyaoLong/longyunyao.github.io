[{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/","section":"","tags":null,"title":""},{"body":"长期工作在软件工程一线~\n码奴，对一切软件技术感兴趣，做过的项目包括但不限于：云划网设工具、会员中台、AI客服、人群打标\u0026amp;判定平台、资金中台、数据分析中台等等。\n擅长方向：\n基于 Spring体系 + 各种阿里系中间件 实现商业能力云化； 商业项目的架构设计； 高可用项目搭建； 系统安全及可信方案； ","link":"https://yunyaolong.github.io/longyunyao.github.io/about/","section":"","tags":null,"title":"About"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/categories/","section":"categories","tags":null,"title":"Categories"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/docker/","section":"tags","tags":null,"title":"Docker"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/index/","section":"tags","tags":null,"title":"Index"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/m1/","section":"tags","tags":null,"title":"M1"},{"body":"有了Docker之后，就可以在电脑上干很多事情，就比如搭建一个参数不大的LLM为我们提供服务~~\n我已经在github上创建了一个仓库，方便大家使用，如需交流学习，可以clone到本地：https://github.com/YunyaoLong/qwen-coder\n安装Ollama 为了能够在本地直接运行大模型，最简单和常见的方式就是使用Ollama。\nWarning Ollama支持运行在Docker中，安装的时候需要留意一下自己的内存大小是否满足你所选取的模型需求。\n例如我的 16G 内存可以运行 qwen2.5-coder:1.5b-instruct-q5_K_M 和 qwen3:1.7b-q4_K_M，运行更大参数的模型时，会直接提示内存不足，Ollama启动失败。\n下面是我的docker-compose.yml文件，可以参考：\n1# docker-compose.yml 2services: 3 ollama: 4 image: ollama/ollama:latest 5 ports: 6 - \u0026#34;11434:11434\u0026#34; # 端口映射 7 volumes: 8 - ./models:/root/.ollama/models # 指定Ollama的卷目录，这样就不需要频繁拉取LLM的二进制文件了 9 environment: 10 - OLLAMA_HOST=0.0.0.0 11 - OLLAMA_MAX_LOADED_MODELS=1 # 只加载一个模型，防止内存占用过多导致Ollama启动失败 12 - OLLAMA_KEEP_ALIVE=5m # 模型常驻内存，避免反复加载 13 deploy: 14 resources: 15 limits: 16 memory: 12G # 显式限制，防止超用 17 restart: unless-stopped 18 # 设置 entrypoint 为 shell，并传入命令 19 entrypoint: [\u0026#34;/bin/sh\u0026#34;, \u0026#34;-c\u0026#34;] 20 command: | 21 \u0026#34; 22 # 启动 Ollama 服务（后台） 23 ollama serve \u0026amp; 24 25 # 等待服务启动 26 sleep 5 27 28 # 拉取模型 29 echo \u0026#39;📥 开始下载 qwen:7b-chat-q4_K_M...\u0026#39; 30 ollama pull qwen:7b-chat-q4_K_M || echo \u0026#39;⚠️ 下载失败\u0026#39; 31 32 echo \u0026#39;📥 开始下载 qwen3:4b-instruct-2507-q4_K_M...\u0026#39; 33 ollama pull qwen3:4b-instruct-2507-q4_K_M || echo \u0026#39;⚠️ 下载失败\u0026#39; 34 35 echo \u0026#39;📥 开始下载 qwen3:4b-instruct...\u0026#39; 36 ollama pull qwen3:4b-instruct || echo \u0026#39;⚠️ 下载失败\u0026#39; 37 38 echo \u0026#39;📥 开始下载 qwen2.5-coder:3b...\u0026#39; 39 ollama pull qwen2.5-coder:3b || echo \u0026#39;⚠️ 下载失败\u0026#39; 40 41 echo \u0026#39;📥 开始下载 qwen3:1.7b-fp16...\u0026#39; 42 ollama pull qwen3:1.7b-fp16 || echo \u0026#39;⚠️ 下载失败\u0026#39; 43 44 echo \u0026#39;📥 开始下载 qwen3:1.7b-q4_K_M...\u0026#39; 45 ollama pull qwen3:1.7b-q4_K_M || echo \u0026#39;⚠️ 下载失败\u0026#39; 46 47 echo \u0026#39;📥 开始下载 qwen2.5-coder:1.5b-instruct-q5_K_M...\u0026#39; 48 ollama pull qwen2.5-coder:1.5b-instruct-q5_K_M || echo \u0026#39;⚠️ 下载失败\u0026#39; 49 50 echo \u0026#39;✅ 所有模型下载完成！服务持续运行中...\u0026#39; 51 52 # 保持容器不退出（等待 Ollama serve） 53 wait 54 \u0026#34; 启动方式1 接着在 docker-compose.yml 所在的工作目录启动：\ndocker-compose up -d\n启动方式2 或者也可以直接调用我的 start.sh 脚本（for CI/CD）\n运行检查 查看模型列表 查看方式1：通过命令行直接查看 docker-compose exec ollama ollama list\n这行命令可以查看运行中的 Ollama 中，所有已下载的模型。（列表中的模型不一定真的被加载）\n查看方式2：通过Ollama服务API接口查看 或者通过Ollama服务的API接口进行查询：\ncurl http://localhost:11434/api/tags\n这里说一个背景知识：Ollama在运行过程中，是不会默认加载模型，需要调用模型时才会加载。所以我们不用担心下载了很多个模型之后，内存占用是否足够的问题。\n测试模型 调用方式1：基于Rest接口访问大模型 尝试访问Ollama服务的rest接口。\n1curl http://localhost:11434/api/generate -d \u0026#39;{ 2 \u0026#34;model\u0026#34;: \u0026#34;qwen2.5-coder:1.5b-instruct-q5_K_M\u0026#34;, 3 \u0026#34;prompt\u0026#34;: \u0026#34;Hello, how are you?\u0026#34;, 4 \u0026#34;stream\u0026#34;: false 5}\u0026#39; Note 通过Rest接口访问大模型时，是无状态的，每次调用都会生成新的结果。\n调用方式2：基于shell命令调用大模型 例如我想直接在命令行中访问我已经下载好的 qwen3:4b-instruct 模型。\ndocker-compose exec ollama ollama run qwen3:4b-instruct\nNote 通过命令行访问大模型时，Ollama帮我们管理了会话信息，因此支持连续对话。\n日志查看方式1：直接从Docker-desktop中查看 如果Ollama成功加载模型，你可以在Docker容器中查看输出结果:\n日志查看方式2：通过命令行查看 或者通过如下命令行查看日志也能看到上图日志的输出：\ndocker-compose logs ollama\n同时在间隔一段时间之后，你会在控制台中看到响应结果：\n以及，此时如果你执行ps命令，你就能够看到 qwen2.5-coder:1.5b-instruct-q5_K_M 已经被加载了：\ndocker-compose exec ollama ollama ps\nOllama 背景知识 Ollama 加载大模型的机制 模型拉取与存储 当执行 Ollama pull 命令时，模型会被下载并存储在本地（例如我的配置中定义的位置是 ./models:/root/.ollama/models）\n这些模型文件会持久化保存在磁盘上；\n模型加载机制 Ollama 默认不会在启动时自动加载所有已下载的模型到内存； 模型通常是在首次被调用（如 Ollama run 或 API 请求）时才加载到内存； 如果我在配置中设置了 OLLAMA_KEEP_ALIVE=5m，意味着模型在5分钟无活动后会从内存中卸载； 我在配置中定义了 OLLAMA_MAX_LOADED_MODELS=1，意味着统一时间只会有一个模型被加载到内存中； 运行模型 如前文所说，通过 curl http://localhost:11434/api/tags 看到所有模型的问题：\n这个 API 只是列出所有已下载的模型，而不是已加载的模型； 列出模型标签并不意味着它们都被加载到内存中； 实际的内存消耗发生在模型真正被加载时（首次使用时）； 注意，Ollama不只能够运行本地大模型，还支持通过 指定host + apiKey 运行远程模型，比如 OpenAI 的模型。\n一个简单的Ollama混合加载大模型的架构示意图如下：\nOllama 相关文档 Ollama官方F\u0026amp;Q 深入解析 Ollama 原理：从源码看本地 AI 引擎的设计 ","link":"https://yunyaolong.github.io/longyunyao.github.io/post/2025/%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B/","section":"post","tags":["M1","MacBook","Docker","容器"],"title":"M1芯片MacBook搭建本地大模型"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/macbook/","section":"tags","tags":null,"title":"MacBook"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/post/","section":"post","tags":["index"],"title":"Posts"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/series/","section":"series","tags":null,"title":"Series"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/","section":"tags","tags":null,"title":"Tags"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/series/%E5%9F%BA%E7%A1%80%E6%90%AD%E5%BB%BA/","section":"series","tags":null,"title":"基础搭建"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E5%AE%B9%E5%99%A8/","section":"tags","tags":null,"title":"容器"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/","section":"categories","tags":null,"title":"技术分享"},{"body":"这里我就不做Docker的介绍了，网上有很多相关的文章，这里直接上干货。\nDocker安装 直接安装docker desktop，个人免费且几乎不挑芯片和系统。\nWarning Docker的安装和镜像拉取更行过程中，通常需要一些魔力，否则会出现登录不上或者网络连接失败，网络问题请自行解决，也可以自行寻找国内镜像源进行拉取； 由于Docker的商业版权问题，我的文档仅适用于个人学习使用，非常不建议用于商业用途； Docker只是一个平台，他可以帮你方便的管理和部署容器，但是底层任然依赖于操作系统内核和内核功能，所以有不同的解决方案能够平替Docker来帮你运行镜像、管理容器资源； 尝试在Docker中运行一个镜像 这里我直接使用MySQL为例。\nNote 虽然现在直接在容器中运行MySQL已经很常见，但是考虑到容器回收后所有数据会被清除的问题，一般不建议把核心数据放在容器中，建议还是运行在物理主机或者云服务；\nSTEP1: 拉取并且运行镜像 直接在命令行中执行如下命令：\ndocker run -itd --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql\n-itd 参数 -i：保持容器的标准输入（STDIN）打开，即使没有连接（interactive 模式）； -t：分配一个伪终端（pseudo-TTY），让你可以像操作本地终端一样与容器交互； -d：以“守护进程”模式运行容器（detached mode），即后台运行； 组合起来 -itd 表示：以后台方式运行一个可交互的容器。这算是我们运行镜像的起手式了。\n--name 参数 给这个启动的容器起一个名字，方便后续管理。\n-p 参数 给这个容器设置端口映射，让物理机的3306端口（左边）映射到容器中3306端口（右边）；\n这样你的其他本地服务，例如IDE就可以无感知的连接上容器中的MySQL服务了。\n-e 参数 启动过程中，设置环境变量传递给容器。\nMYSQL_ROOT_PASSWORD=123456 是MySQL镜像识别的关键变量，用于设置root用户的密码； 其他管理用户可以后续使用root创建； 新建数据库、表也建议启动后在MySQL控制台中进行操作；\n命令最后的 mysql 表示我要拉取的镜像名叫做 mysql。并且拉取默认的最新版本。\n如果需要执行版本，可以在命令中指定，例如: mysql:8.0\nSTEP12 查看是否运行成功 docker-desktop中查看 如果我们的容器已经成功运行起来的话，我们能够在我们的 docker-desktop 中的 containers 查看到我们的容器实例，样例如下：\n命令行中查看 执行如下命令查看所有运行中的容器列表。\ndocker ps\n登录mysql容器 命令行登录 mysql 由于我们的mysql是运行在容器中的，所以是不能直接在宿主机中执行mysql命令的。\n所以我们登录路径应该是：物理机登录容器；然后在容器中登录mysql；\n首先登录容器 docker exec -it mysql /bin/bash\n结合上面的解释：\n首先 -it 表示分配一个 伪终端 并且 支持标准输入（键盘输入命令）； mysql 表示准备登录的容器名称/容器id； /bin/bash 打开shell，用于执行命令； 此时你应该能看到如下界面：\n此时意味着你已经成功进入了运行着mysql的容器了（你可以简单理解成一个独立的Linux环境）。\n在容器中执行命令登录mysql 输入mysql的登录命令\nmysql -u root -p\n输入你在上文所设置的密码，成功登录你的mysql实例了。\n退出mysql实例 MacBook命令式 control + z;\n退出容器 容器执行如下命令即可退出；\nexit\n结语 好了，至此本地运行Docker管理自己的各种服务已经初步搞定，后续就是根据自己的需求，找到各种服务镜像，或者自己搭建镜像即可。\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/2025/m1%E8%8A%AF%E7%89%87macbook%E5%AE%89%E8%A3%85docker/","section":"post","tags":["M1","MacBook","Docker","容器"],"title":"M1芯片MacBook安装Docker"},{"body":"背景 在互联网大厂打工几年来，攒下了工作经验。最近重新找回自己的移动硬盘，翻到了自己的博客存档，准备重新把自己的一些经验和教训记录一些，也算是一个阶段性沉淀。\n封笔5年，大抵原因也不过如下几点：\n**时间匆忙：**有些是工作上事情比较多，没办法经常抽出时间来整理自己的思路写博客； **内容冲突：**架构设计、经验沉淀、故障处理、项目复盘等等文档，基本都是积累在在公司内网的团队文档中，涉及到公司信息也不方便公布在个人博客中； **仍在学习：**第一家公司的技术栈偏传统单应用，进互联网之后发现自己的技术栈要补足的东西非常多，所以大多时间都是在不停的学习； **自觉不够：**总觉得自己不够成熟，每次学到什么新东西，了解什么新方向的时候，打开我的个人博客，却不知道从什么地方罗比，没有写下去的欲望； **懒：**还是有一些懒的成分在自己身上 规划 说完背景，接下来我说一下自己的未来一段时间内的 《技术分享系列》 博客方向：\n经验沉淀：主要包含工作中摸到的用到的技术栈、项目经验、架构设计、工作心得等等做一个经验沉淀； 技术沉淀：预计会针对 工作中 或者 自己感兴趣的方向 做一个技术沉淀，包含但不限于 容器化、微服务、大数据、AI 等等； ","link":"https://yunyaolong.github.io/longyunyao.github.io/post/2025/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB-%E5%89%8D%E7%9E%BB/","section":"post","tags":["随笔"],"title":"技术分享-前瞻"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E9%9A%8F%E7%AC%94/","section":"tags","tags":null,"title":"随笔"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/hugo/","section":"tags","tags":null,"title":"Hugo"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/categories/syntax/","section":"categories","tags":null,"title":"Syntax"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/series/themes-guide/","section":"series","tags":null,"title":"Themes Guide"},{"body":"Page bundles are an optional way to organize page resources within Hugo.\nYou can opt-in to using page bundles in Hugo Clarity with usePageBundles in your site configuration or in a page's front matter. Read more about usePageBundles.\nWith page bundles, resources for a page or section, like images or attached files, live in the same directory as the content itself rather than in your static directory.\nHugo Clarity supports the use of leaf bundles, which are any directories within the content directory that contain an index.md file. Hugo's documentation gives this example:\n1content 2├── about 3│ ├── index.md 4├── posts 5│ ├── my-post 6│ │ ├── content1.md 7│ │ ├── content2.md 8│ │ ├── image1.jpg 9│ │ ├── image2.png 10│ │ └── index.md 11│ └── my-other-post 12│ └── index.md 13│ 14└── another-section 15 ├── .. 16 └── not-a-leaf-bundle 17 ├── .. 18 └── another-leaf-bundle 19 └── index.md In the above example `content` directory, there are four leaf bundles: about: This leaf bundle is at the root level (directly under content directory) and has only the index.md.\nmy-post: This leaf bundle has the index.md, two other content Markdown files and two image files. image1 is a page resource of my-post and only available in my-post/index.md resources. image2 is a page resource of my-post and only available in my-post/index.md resources.\nmy-other-post: This leaf bundle has only the index.md.\nanother-leaf-bundle: This leaf bundle is nested under couple of directories. This bundle also has only the index.md.\nThe hierarchy depth at which a leaf bundle is created does not matter, as long as it is not inside another leaf bundle.\nAdvantages to using page bundles The image below is part of the bundle of this page, and is located at content/post/bundle/building.png. Because it's within this page's bundle, the markup for the image only has to specify the image's filename, building.png.\nIf you ever change the name of the directory in which this Markdown file and the image reside, the reference to the image would not need to be updated.\nIn addition to more cleanly organizing your content and related assets, when using page bundles, Hugo Clarity will automatically generate markup for modern image formats, which are smaller in file size.\nFor instance, when you reference an image like building.png, Hugo Clarity will check to see if the same image (based on filename) exists in WebP, AVIF or JXL formats. If you inspect the image above, you'll see a \u0026lt;source\u0026gt; element for building.webp, because that file is also present. Hugo Clarity will only include the markup if these images exist.\nBrowsers that support these formats and the \u0026lt;picture\u0026gt; element will load them, while browsers that do not will fall-back to the default image. Read more about this process.\nFinally, note that page assets can be further managed and refined within the page's front matter if you wish, and are not limited to images alone.\nDisadvantages to using page bundles Page resources in a bundle are only available to the page with which they are bundled — that means you can't include an image with one page and then reference it from another.\nImages that are being used in multiple places are more appropriate for your Hugo assets directory. Unlike files in the Hugo static directory, files in the assets directory can be run through Hugo Pipes, which includes image processing.\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/bundle/","section":"post","tags":["Hugo"],"title":"Using Hugo page bundles"},{"body":"\r","link":"https://yunyaolong.github.io/longyunyao.github.io/post/map/","section":"post","tags":null,"title":"Using OpenStreetMap"},{"body":"The \u0026quot;Notices\u0026quot; shortcode enables you to call out pieces of information - sidebars, warnings, tips, etc.\nTo create a notice on a page, you can use the notice shortcode.\nYou use the notice shortcode, with the first parameter being one of note, info, tip, and warning. Then add a title for your note in quotes as the second parameter. The inner body of the note can be whatever markdown you want to create.\nThe following shortcode syntax within a markdown doc:\n1{{% notice note \u0026#34;Note\u0026#34; %}} 2This is a standard \u0026#34;note\u0026#34; style. 3{{% /notice %}} will render as:\nNote This is a standard \u0026quot;note\u0026quot; style.\nThe other three variants follow.\nInfo Here is the \u0026quot;info\u0026quot; style.\nTip Here is a \u0026quot;tip\u0026quot; variant of a notice.\nWarning Here is the \u0026quot;warning\u0026quot; flavor of a notice.\nAlso note that the content of a notice can contain anything you could put on a normal page - as shown below:\nComplex Notices are Possible! This is a notice that has a lot of various kinds of content in it.\nHere is a bulleted list With more than one bullet And even more than one level Code blocks are fine here, too....\n1public void SayHello() 2{ 3 Console.WriteLine(\u0026#34;Hello, world!\u0026#34;); 4} Productivity Booster! If you're using VS Code for your editing, copy the .vscode\\clarity.code-snippets file into a .vscode root folder on your repo. This will enable you to type note then \u0026lt;tab\u0026gt; then choose with up/down arrows which flavor notice you want, then \u0026lt;tab\u0026gt; again to provide a title, then \u0026lt;tab\u0026gt; to add your content!\nTo use the snippet, you need to first enable quickSuggestions for Markdown (one time only):\nGo to Preferences-\u0026gt;Settings then search for quickSuggestions Follow the link to Edit in settings.json Toward the bottom of the file, paste in the following JSON: 1\u0026#34;[markdown]\u0026#34;: { 2 \u0026#34;editor.quickSuggestions\u0026#34;: true 3 } Close and save the settings. ","link":"https://yunyaolong.github.io/longyunyao.github.io/post/notices/","section":"post","tags":null,"title":"Using Notices"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/categories/%E6%9D%82%E8%B0%88/","section":"categories","tags":null,"title":"杂谈"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E6%9D%82%E8%B0%88/","section":"tags","tags":null,"title":"杂谈"},{"body":"近况 比较明显的能感觉到，自己的心态处于一个颓废又失落的状态，与我自身的康复和发展并不好，10月份的手术和休假，需要重新把自己的状态调整回来。\n前两个月的面试和准备，让自己已经无心在集成部门的工作，既然短时间内比较再难出去，不如好好保住自己的今年绩效。与自己与将来的绩效都会有所帮助。\n庆幸的是，身体上的警告让我不得不重视自己的作息和饮食，尤其回想入职之后的生活与作息，完全保留了学校时期的熬夜，饮食上又是重油盐脖子后面的脂肪瘤 + 甲状腺恶性肿瘤，就是曾经矗立在我面前的灰犀牛，与我自身而言，既然当时会选择这种生活方式，就该有去战胜它们的勇气。\n同时，又是在面试过程中，才会开始意识到自己的知识面之狭窄，之前经常会觉得，自己所了解的知识已经很宽泛，也会经常觉得自己已经开始了将书读薄的过程。这算是一种自视甚高的表现了吧。所幸字节和鹅厂的面试能够即使将我从温床中唤醒。道阻且长，要学的东西还很多，需要自己重新拾起自己的初衷，按照技术栈中的方向，持续学习和记述。\n后继计划 工作 · 生活 · 作息 首要的还是把身体照顾好，尽量保证12点之前能够自然入睡。这就意味着我将不能再将平时工作上的事务推托到晚上进行时候处理，因此白天需要能够更加专注的将事情作毕。虽然这个从小到大都没克服的坏毛病与我而言，会给我带来不小压力，但是很明显这个坏习惯现在已经是阻碍我持续往前发展的最大阻力。\n将自己的晚上时间，从工作中抽离，保持学习和生活，保持正常的平衡。\n学习 最近的面试过程中，自己其实已经慢慢了解到自己的不足。在已有的学习栈中，继续向前吧。\n生活 原以为自己能够顺利从华为提前毕业并且进入鹅厂，现今因为身体状态被迫终止，与自己先修养好，做好知识储备，等15级之后再做打算。\n这件事情与小宝宝而言，会有不少压力，近期不能给她太多压力，另外她在广州的落脚，也有很多需要继续考虑和帮助。\n写在最后 Stay Hungry, Stay Foolish.\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/2020-07-18-%E9%9A%8F%E7%AC%942020.10.02/","section":"post","tags":["杂谈","随笔"],"title":"随笔(2020.10.02)"},{"body":"近况 已经很久没有时间好好整理一下个人的知识经验总结，加上事业的压力和个人状态调整问题，让自己一直兜兜转转在工作和会议中。\n前段时间两年一次的压力测试结果显示我工作压力从入职的4提升到了现在的16，加之上上周照彩超发现后颈长了一小块脂肪瘤（良性观察半年），心理和身体上的预警对我这种天性比较闲散、不喜欢给自己压力、又喜欢瞎吃零食的人来说，想来不是什么好事。\n昨晚趁着稍微闲下来，折腾了半夜把自己的小角落修修补补，重新打扫装修一下，也算磕磕绊绊重新开张了（ps，下次更新这种杂谈类的文章，不知道又要多久之后了）。\n后继计划 工作量方面要开始释放压力出去，过去一年周边同事一直在流失，新入职同事能力也没有补齐，导致一个人承担了刚入职的时候2-3个人的工作量，超负荷运转让身体每况愈下。\n接下来很长一段时间的都准备投资自己，看看理财和软件相关的书籍，没事读读源代码，多陪陪女票，少打游戏少氪金。\n毕业那年自己的三年之约还有一年，这里再给自己立个小小的flag——苟过接下来几年国际形势变化~~\n写在最后 这几天因为疫情的影响，女票准备了几个月的新疆计划泡汤了。十月之前尽量把手头的工作搞完，十一陪她再出去走走，算补偿一下对她的亏欠。\n-- 2020.07.18 于松山湖畔 by WriterP\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/%E9%9A%8F%E7%AC%942020.07.18/","section":"post","tags":["杂谈","随笔"],"title":"随笔(2020.07.18)"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/categories/java/","section":"categories","tags":null,"title":"Java"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/java/","section":"tags","tags":null,"title":"Java"},{"body":"设计模式-观察者模式 使用Observer和Observable组合实现观察者 1public class DataCenter extends Observable { 2 3 private String data = \u0026#34;Initial DataCenter\u0026#34;; 4 5 public void change() { 6 data = \u0026#34;DataCenter has changed\u0026#34;; 7 } 8 9 public void changeSomething() { 10 change(); 11 setChanged(); // 需要首先改变自身的状态，才能提醒观察者自己的状态已经改变了 12 notifyObservers(); // 表明这是一个拉取的方式，让观察者自己从被观察者中获取数据 13 } 14 public String getData() { 15 return data; 16 } 17 18 public void setData(String data) { 19 this.data = data; 20 } 21} 22 23public class DigitalDisplay implements Observer { 24 private List\u0026lt;? extends Observable\u0026gt; observables; 25 26 public DigitalDisplay(List\u0026lt;? extends Observable\u0026gt; observables) { 27 this.observables = observables; 28 for (Observable obs : observables) { 29 obs.addObserver(this); 30 } 31 } 32 33 @Override 34 public void update(Observable o, Object arg) { 35 if (o instanceof DataCenter) { 36 DataCenter dataCenter = (DataCenter) o; 37 display(dataCenter.getData()); 38 } 39 } 40 41 private void display(String data) { 42 System.out.println(\u0026#34;Observed data: \u0026#34; + data); 43 } 44} 优点 优点显而意见，现成的Observable类已经装箱了注册、注销、主动推送消息以及提示观察者获取消息等基础功能，让使用者能够迅速上手完成观察者模式。\n缺点 最首要的缺点是由于Observable是一个class而不是abstract，同时在Observable中是否修改被定义成了protect，这就导致我们在代码实现过程中，如果使用util中的观察者，就必须被迫选择继承Observable或者选择自己实现一个类似于Observable的被观察者。这一点违背了设计原则中的“多用组合，少用继承。”\n其次，由于被观察者默认的addObserver是无序的，不能保证顺序通知观察者。\n以及多线程场景下县城安全问题。\n因此java.util中的观察者模型已经从java9开始被标记为Deprecated（不推荐使用的）\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/","section":"post","tags":["Java","设计模式","观察者模式"],"title":"Lambda表达式与函数式接口"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/","section":"tags","tags":null,"title":"观察者模式"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/","section":"tags","tags":null,"title":"设计模式"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/uml/","section":"tags","tags":null,"title":"UML"},{"body":"UML类图绘制实例 下面将使用如属官的借阅管理系统做一个图书馆管理系统的UML类图。参考自*Library Domain Model*\n最终的绘制结果大致如下：\n前期建模 对于图书馆的借阅系统的建模，首先我们把所有需要定义的基础类定义出来。分别是Book(书籍)、Library(图书馆)、Patron(顾客)、Librarian(图书管理员)四个基础的对象。\n我们尝试将四个基础类进行关系连接，最后的到的关系图如下（注，就算没有图书，图书馆也不会消失，因此使用空心的关联关系：\n业务扩展 增加用户账号管理 由于客户借还书籍过程中，图书馆里系统的后台会希望能够查看该顾客的曾借用书籍，已借阅待还书籍，以及当前客户是否有权限进行新书的借阅。\n因此我们需要在图书馆管理系统中，引入**Account（账户系统）**作为代理，用于方便关联借阅的顾客和馆中的书籍。\n该UML中，图书馆持有多个账号，这个不难理解；每个账号代理以前每一个借书者去依赖书，也不难理解；账号有指向Partron的关联关系我们也不难理解，毕竟账户作为代理方，肯定需要有被代理的人的信息；但是可能存在的困惑点在于Account和Patron之间的聚合关系，这里我理解是因为在本项目设计中，账号被设计成了可以回收利用的号码，因此如果该账号闲置的时候，是可以不关联任何用户的，直到账号被下一次利用重新分发给新人。\n增加书籍借阅信息 管理好了借书的人，我们的图书馆管理系统还需要增加书籍管理系统，用来标记每本书籍自身的状态，比如该书籍的条码、RFID中的信息、是否允许借出图书馆、图书的类别、图书的借出时间、图书的借阅周期（时长）、图书的应归还时期等等信息。这些都是图书馆自身作图书管理所需要信息而非书籍本身的信息。\n因此我们需要在原始图书的基础之上扩展一个图书馆的书目实体Book Item，里面除了书籍自身的信息之外，还包含了该书管理过程中的信息。\n更新之后的UML如下：\n增加检索和管理功能 随着图书馆书籍越来越多，图书馆管理员需要对这些书籍进行分类有序放置、对特定的书目进行查找，顾客需要根据条件检索自己需要的书目。因此我们需要继续扩展我们的Book Item类，给其更多的信息便于分类：比如定义其书籍语言、书籍名称、总页数、书目类别等等信息。\n此外我们扩展了原始书籍的作者信息，虽然作者通常是在书籍分类时才会使用，但是其本身作为书籍的通识信息，因此在类设计时，将其关联Book而非Book Item。\n同时我们需要对图书馆内所有的图书都进行完整的归档管理，所以需要新增一个Catalog类来统一管理。\n这里，因为我们现在已经完成了Book Item的属性扩展，同时建立了Catalog用于专门的图书管理机制，Catalog本身虽然不受是否有书的影响，但是图书馆的管理和检索的规则，是一定建立在我们的Catalog之上的，因此这里使用组合关系。\n由于赋予了顾客检索的功能，也赋予了图书馆管理员检索和管理图书的功能。这里我们不难发现两种不同的角色都有一个重复的操作——查找search。同时因为这个Search其实仅仅只和图书馆的目录Catalog相关，无论谁来这个图书馆，他们其实只关心能不能找到自己需要的书，至于怎么从Catalog中找到这本书，以及Catalog是怎么维护所有数目的，对于查找的人来说其实并不需要关心。\n因此外部的调用方（比如Patron、Librarian）其实只需要调用这个系统提供的API（也即接口）即可，这个API是一个大家对齐过的统一的规范，比如search就是查找本座图书馆有没有某本书，manage就是管理这本书。外部只需要直到调用这个api可以达到这个目的，而至于怎么达到这个目的则由图书馆的Catalog自行决定和具体实现。\n因此最终的类图如下：\n结语 至此一个比较清晰的图书馆的UML类图已经绘制完成。这次在准备继续阅读Spring源码过程中，发现自己不能老是单纯只看实现，而应该从中吸取架构设计经验的时候，发现自己在设计模式层面，知其然而不知其所以然，遂这里先把自己的底子打好，然后再继续我的源码阅读之路。\n抬头仰望星空而非滞于三尺之地，方才知道自己有多渺小～～\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/uml%E7%B1%BB%E5%9B%BE%E7%BB%98%E5%88%B6%E5%AE%9E%E4%BE%8B/","section":"post","tags":["UML","设计","架构"],"title":"UML类图绘制实例"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/categories/%E6%9E%B6%E6%9E%84/","section":"categories","tags":null,"title":"架构"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E6%9E%B6%E6%9E%84/","section":"tags","tags":null,"title":"架构"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E8%AE%BE%E8%AE%A1/","section":"tags","tags":null,"title":"设计"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/bean%E7%AE%A1%E7%90%86/","section":"tags","tags":null,"title":"Bean管理"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/spring/","section":"tags","tags":null,"title":"Spring"},{"body":"目录 [toc]\nSpring的Bean管理 本博客基于SpringSourceCodeTest仓库中【SpringDemo1.0】tag进行的编写。\n基于配置文件进行bean管理的方案是Spring初期推行的方式，在历史比较悠久的Spring项目中比较常见。\n基于扫描的方式装载bean 一个比较典型的配置文件通常包含\u0026lt;context\u0026gt;标签， \u0026lt;context\u0026gt;用来表示该项目中哪些包中的bean需要被进行生命周期管理。\n默认情况下，使用\u0026lt;context\u0026gt;后，Spring会默认扫描定义的带有如下注解的bean：\n@Component @Repository @Service @Controller @RestController @ControllerAdvice @Configuration 参考项目src/main/resources/beans.xml，一个典型的\u0026lt;context\u0026gt;文件如下：\n1\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; 2\u0026lt;beans xmlns=\u0026#34;http://www.springframework.org/schema/beans\u0026#34; 3 xmlns:context=\u0026#34;http://www.springframework.org/schema/context\u0026#34; 4 xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34; 5 xsi:schemaLocation=\u0026#34;http://www.springframework.org/schema/beans 6 http://www.springframework.org/schema/beans/spring-beans.xsd 7 http://www.springframework.org/schema/context 8 http://www.springframework.org/schema/context/spring-context.xsd\u0026#34;\u0026gt; 9 10 \u0026lt;!--默认会扫描包文件下的@Controller, @Service, @Repository, @Component等常见注解--\u0026gt; 11 \u0026lt;context:component-scan base-package=\u0026#34;com.springtest.demo\u0026#34;\u0026gt;\u0026lt;/context:component-scan\u0026gt; 12\u0026lt;/beans\u0026gt; XML格式解读 在这份xml中，我们可以稍微简单说明都是做了一些什么事情。\n首先我们定义了一个\u0026lt;beans\u0026gt;的大标签，用于生命这个配置文件是用于Spring的生命周期管理，因此我们使用Spring-bean提供的命名空间，\u0026quot;xmlns=\u0026quot;http://www.springframework.org/schema/beans\u0026quot;； 在下文中需要使用\u0026lt;context\u0026gt;标签，因此我们定义context所使用的命名空间xmlns:context=\u0026quot;http://www.springframework.org/schema/context\u0026quot;； 然后我们定义我们需要扫描的包的位置\u0026lt;context:component-scan base-package=\u0026quot;com.springtest.demo\u0026quot;\u0026gt;\u0026lt;/context:component-scan\u0026gt;； 至此我们的xml其实就已经不会报错了，说明此事我们的xml从结构上已经没有明显问题； 但是此时启动Spring启动依然会失败并且报错Cannot find the declaration of element 'beans'.，因此我们需要继续补充这份这份xml的schema文件，用来描述我们的xml中的标签行为； 此时我们就需要引入我们的xsi:schemaLocation属性，为此我们首先需要引入xsi的前缀命名空间xmlns:xsi=\u0026quot;http://www.w3.org/2001/XMLSchema-instance\u0026quot; 最后我们补充完整的xsi:schemaLocation解析我们所引用的两个命名空间\u0026quot;http://www.springframework.org/schema/beans\u0026quot;和\u0026quot;http://www.springframework.org/schema/context\u0026quot;即可。 附：xmlns即xml namespace的缩写; xsi即xml schema instance的缩写; xsd即xml schema definition的缩写 1\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; 2\u0026lt;beans 3 \u0026lt;!-- 表明整个beans标签使用的是xmlns所指向的命名空间 --\u0026gt; 4 xmlns=\u0026#34;http://www.springframework.org/schema/beans\u0026#34; 5 \u0026lt;!-- 表明子节点中context标签使用的是xmlns:contex所指向的命名空间 --\u0026gt; 6 xmlns:context=\u0026#34;http://www.springframework.org/schema/context\u0026#34; 7 \u0026lt;!-- 表明xsi属性标签使用的是xmlns:xsi所指向的命名空间 --\u0026gt; 8 xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34; 9 \u0026lt;!-- 表明每一个命名空间具体指向的描述文件(xsd文件) --\u0026gt; 10 xsi:schemaLocation=\u0026#34;http://www.springframework.org/schema/beans 11 http://www.springframework.org/schema/beans/spring-beans.xsd 12 http://www.springframework.org/schema/context 13 http://www.springframework.org/schema/context/spring-context.xsd\u0026#34;\u0026gt; 14 15 \u0026lt;!--默认会扫描包文件下的@Controller, @Service, @Repository, @Component等常见注解--\u0026gt; 16 \u0026lt;context:component-scan base-package=\u0026#34;com.springtest.demo\u0026#34;\u0026gt;\u0026lt;/context:component-scan\u0026gt; 17\u0026lt;/beans\u0026gt; XML内容解读 这里context:component-scan定义了我们的组件扫描的范围，我们直接定义到整个项目的根节点com.springtest.demo，这样这个包内所有的组件都会被扫描并且组装到上下文中供我们使用。\n这里我们暂时不深究，留在将来“模仿”Spring的时候再来。\n本部分主要测试文件以及相关文件清单为：\ntest.ConfigurationTest#test1 -- 测试函数 src/main/resources/beans.xml -- 配置文件 基于定义的方式装载bean 第二种方式和第一种方式很像，两者可以在同一个xml中同时使用。\n\u0026lt;bean\u0026gt;用来表示该项目中context初始化完成后，有哪些bean需要被补充加载，同时这些bean被装载过程中，以及被销毁时，要指定哪些动作，都是在这里定义的。其内部可使用的参数列表如下图所示(我的项目中Spring版本为5.2.2)：\n其中我们常用的属性为:\nname: 用于标记bean的名字 class: 用于标记需要被实例化的class scope: singleton表示单例; prototype表示每次getBean会获得一个实例; request表示每次请求获得一个实例; session表示每次灰化获得一个实例 lazy-init: 表示装载时间，如果为false表示Spring启动时装载，如果为true表示getBean时装载; 默认是false init-method: 当bean构造完成并且属性赋值完成之后，装载进context之前被执行的方法，不能带参数，可以抛出异常。 也可以通过实现Spring的InitializingBean接口; 或者使用标准的@PostConstruct实现该功能 destroy-method: 当bean被销毁时，需要被执行的方法，不能带参数，可以抛出异常。 也可以通过实现Spring的DisposableBean接口; 或者实现Java的Closeable/AutoCloseable接口; 或者使用标准的@PreDestroy注解实现该功能 factory-method: 定义实例化对象时调用的函数 一个比较常见的纯使用bean标签定义需要被装载的组件的配置文件如下:\n1\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; 2\u0026lt;beans xmlns=\u0026#34;http://www.springframework.org/schema/beans\u0026#34; 3 xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34; 4 xsi:schemaLocation=\u0026#34;http://www.springframework.org/schema/beans 5 http://www.springframework.org/schema/beans/spring-beans.xsd\u0026gt; 6 7 \u0026lt;bean id=\u0026#34;person\u0026#34; class=\u0026#34;com.springtest.demo.entity.Person\u0026#34; name=\u0026#34;person\u0026#34; scope=\u0026#34;prototype\u0026#34; \u0026gt; 8 \u0026lt;/bean\u0026gt; 9\u0026lt;/beans\u0026gt; 不难发现，这种方式定义上下文装载bean时，我们不需要对我们的类做任何注解(不需要@Component等)。\n本部分主要测试文件以及相关文件清单为：\ntest.ConfigurationTest#test1 -- 测试函数 src/main/resources/beans.xml -- 配置文件 com.springtest.demo.entity.Person -- 被实例化的类 基于注解的方式装载bean 废话不多说，直接上源码。相关详细测试需要在项目中运行才能直观感受到（ConfigurationTest.test3)，这里只做粗略解释。相关内容需要阅读注释和各个注解的源码。\n1package com.springtest.demo.config; 2 3import com.springtest.demo.config.typefilter.PersonTypeFilter; 4import com.springtest.demo.entity.Person; 5import com.springtest.demo.service.PersonService; 6import org.springframework.context.annotation.Bean; 7import org.springframework.context.annotation.ComponentScan; 8import org.springframework.context.annotation.ComponentScan.Filter; 9import org.springframework.context.annotation.Configuration; 10import org.springframework.context.annotation.FilterType; 11import org.springframework.stereotype.Controller; 12import org.springframework.stereotype.Service; 13 14// 配置类等效配置文件 15@Configuration(value = \u0026#34;beansConfig2\u0026#34;) // 表示这是一个配置类 16//@ComponentScan(value = \u0026#34;com.springtest.demo\u0026#34; ) // 表示需要扫描的包，可以尝试注释该行然后运行ConfigurationTest.test3查看区别 17@ComponentScan(value = \u0026#34;com.springtest.demo\u0026#34;, 18 // 定制扫描规则，默认扫描@Controller, @Service, @Repository, @Component，控制排除哪些组件不需要被包含 19 //excludeFilters = @Filter(type = FilterType.ANNOTATION, classes = Controller.class), 20 useDefaultFilters = false, 21 includeFilters = {// 定制扫描规则，控制只扫描哪些组件，需要关闭默认Filter 22 // @Filter(type = FilterType.ANNOTATION, classes = {Controller.class}), // FilterType.ANNOTATION 按照注解方式进行操作 23 //@Filter(type = FilterType.ASSIGNABLE_TYPE,classes = {PersonService.class}), // FilterType.ASSIGNABLE_TYPE 按照指定类型的方式进行组件扫描 24 // FilterType.ASPECTJ 比较不常用，指定AspectJ表达式进行组件扫描 25 // FilterType.REGEX 指定符合正则的包进行扫描 26 // FilterType.CUSTOM // 使用自定义规则 27 @Filter(type = FilterType.CUSTOM,classes = {PersonTypeFilter.class}) // 使用自定义规则 28 } 29) 30 31// Component是一个可重复定义组件: @Repeatable 32//@ComponentScan 33public class BeansConfig { 34 @Bean(name = \u0026#34;person3\u0026#34;) 35 public Person person01() { 36 Person person = new Person(); 37 person.setAge(20); 38 person.setName(\u0026#34;lisi\u0026#34;); 39 return person; 40 } 41} 上述代码中对@ComponentScan中各种扫描规则以及扫描过程中过滤器@Filter的用法做了一些demo。详细实现需要再运行源码体会一下。主要使用内容如下：\nComponentScan注解： includeFilters需要包含的扫描范围定义 excludeFilters 不需要包含的扫描范围定义 @Filte注解：用于上述两种扫描规则的具体过滤规则定义，其Filterype分为如下几种过滤规则： FilterType.ANNOTATION：对不同的注解进行扫描 FilterType.ASSIGNABLE_TYPE：对不同的类名进行规则扫描 FilterType.ASPECTJ ： 比较不常用，指定AspectJ表达式进行组件扫描 FilterType.REGEX： 指定符合正则的包进行扫描 FilterType.CUSTOM：使用自定义规则，上述集中规则应该均由该方式实现 注1： 由于Config自身首先需要进行注册然后才能进行相关的执行，因此Config类本身是肯定会被注册的。\n本部分主要测试文件以及相关文件清单为：\ntest.ConfigurationTest#test2 -- 测试函数 com.springtest.demo.config.BeansConfig -- 注解扫描的定义类 com.springtest.demo.entity.Person -- 被实例化的类 ","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/spring%E7%9A%84bean%E7%AE%A1%E7%90%86/","section":"post","tags":["Java","Spring","源码","Bean管理"],"title":"Spring的Bean管理"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E6%BA%90%E7%A0%81/","section":"tags","tags":null,"title":"源码"},{"body":"目录 [toc]\n一点点手写Spring 一直有一个小小的计划，做一个完整的系列，从使用Spring，到模拟Spring，到“抄袭”Spring，一点点理解Spring的内在和机制，同时加深自己对Java机制以及设计模式等内在的理解。\n因为Spring很大，模块很多，这里我计划只关注Spring的core包、bean包和context包，分别对应核心、bean的生命周期管理和Spring上下文的。\n首先从Spring的基础配置开始，我们现在最经常使用Spring的Bean管理有两种方式：①通过配置文件管理bean; ②通过注解配置类进行bean的扫描管理。\n我将尝试两种扫描方式都用一次，然后尝试各自复现。基于此来对Spring 使用-模拟-“抄袭”。\n关于仓库和分支 相关demo发布在我个人仓库的《SpringSourceCodeTest》 中，当前已经完成了对Spring的初步使用和模拟。\n每次有重大特性变动，或者有较大的刷新的时候，我都会打上tag，以此尽可能与博客描述的内容对齐。\n注：当前博客对应的仓库中的tag为，可以切换到这个tag同步阅读博客\n关于博客分布 本次更新计划按照系列更新的方式进行更新，因此这篇文章只是作为综述，详细点在各个文章中更新。\n相关文章：\n《自定义注解并且进行扫描解析》\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/%E4%B8%80%E7%82%B9%E7%82%B9%E6%89%8B%E5%86%99spring/","section":"post","tags":["Java","Spring","源码"],"title":"一点点手写Spring"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E6%B3%A8%E8%A7%A3/","section":"tags","tags":null,"title":"注解"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E6%B3%A8%E8%A7%A3%E6%89%AB%E6%8F%8F/","section":"tags","tags":null,"title":"注解扫描"},{"body":"[toc]\n注解背景 首先我们要知道背景知识：\n每一个注解其实就是一个特殊的接口(带着@符号，其实是语法糖，会被编译器自动编译成继承自Annotation接口)。我们反编译一下class文件就能看出来。 注解只是一个标记位，标记了某一个类，某一个字段或者某一个函数之后，我们就可以对被标记的属性进行我们期望的行为——比如运行时动态获取和修改被标记的属性，动态执行被标记的函数等等 基于第二点，我们在定义了自己的注解之后，还要定义自己注解的解析类，这样我们才能真正让注解发挥起作用（只标记而不做任何动作就和没标记没任何区别了） 源码解析 废话不说上我自己定义的代码，然后一个一个说明。\n1package com.springtest.demo.annotation; 2 3import java.lang.annotation.Documented; 4import java.lang.annotation.ElementType; 5import java.lang.annotation.Retention; 6import java.lang.annotation.RetentionPolicy; 7import java.lang.annotation.Target; 8 9@Target(ElementType.FIELD) 10@Retention(RetentionPolicy.RUNTIME) 11@Documented 12public @interface Fruit { 13 String value() default \u0026#34;\u0026#34;; 14 15 String name() default \u0026#34;\u0026#34;; 16 17 enum FruitType { 18 APPLE, PEACH, PEAR, WATERMELON 19 } 20 21 FruitType type() default FruitType.APPLE; 22} 1package com.springtest.demo.entity.fruit; 2 3import com.springtest.demo.annotation.Fruit; 4import com.springtest.demo.annotation.Scope; 5 6@Scope(Scope.SCOPE_PROTOTYPE) 7public class Pear { 8 @Fruit(value = \u0026#34;pear\u0026#34;) 9 private String name; 10 11 @Fruit(type = Fruit.FruitType.PEAR) 12 private String type; 13} 1 2package com.springtest.demo.entity.fruit; 3 4import com.springtest.demo.annotation.Fruit; 5import com.springtest.demo.annotation.Scope; 6 7@Scope(Scope.SCOPE_PROTOTYPE) 8public class Apple { 9 @Fruit(value = \u0026#34;apple\u0026#34;) 10 private String name; 11 12 @Fruit(type = Fruit.FruitType.APPLE) 13 private String type; 14} 以上就是我做的最简单的demo，定义并应用了一个注解。我们来看看Fruit注解反编译的结果是什么就能大概知道这故事背后的作用。\n1public interface Fruit 2 extends Annotation 3{ 4 public static final class FruitType extends Enum 5 { 6 7 public static final FruitType APPLE; 8 public static final FruitType PEACH; 9 public static final FruitType PEAR; 10 public static final FruitType WATERMELON; 11 private static final FruitType $VALUES[]; 12 13 public static FruitType[] values() 14 { 15 return (FruitType[])$VALUES.clone(); 16 } 17 18 public static FruitType valueOf(String name) 19 { 20 return (FruitType)Enum.valueOf(com/springtest/demo/annotation/Fruit$FruitType, name); 21 } 22 23 static 24 { 25 APPLE = new FruitType(\u0026#34;APPLE\u0026#34;, 0); 26 PEACH = new FruitType(\u0026#34;PEACH\u0026#34;, 1); 27 PEAR = new FruitType(\u0026#34;PEAR\u0026#34;, 2); 28 WATERMELON = new FruitType(\u0026#34;WATERMELON\u0026#34;, 3); 29 $VALUES = (new FruitType[] { 30 APPLE, PEACH, PEAR, WATERMELON 31 }); 32 } 33 34 private FruitType(String s, int i) 35 { 36 super(s, i); 37 } 38 } 39 40 41 public abstract String value(); 42 43 public abstract String name(); 44 45 public abstract FruitType type(); 46} 查看代码我们发现所谓注解的本质还是很简单的其实就是一个继承了Annotation的接口，然后内部定义了一些默认的抽象类而已。\nRetention注解 由于因为我们知道其实一个注解本质上就只是一个标记，这个标记要怎么使用，什么时候使用是我们的编译器和jvm决定的，也就意味着一个注解通常会有一个目的，或者我们叫作用域。通常分为三类：\n仅在编码时生效 @RetentionPolicy .SOURCE 仅在编译时生效 @RetentionPolicy .CLASS 仅在运行时生效 @RetentionPolicy .RUNTIME 1@Documented 2@Retention(RetentionPolicy.RUNTIME) 3@Target(ElementType.ANNOTATION_TYPE) 4public @interface Retention { 5 /** 6 * Returns the retention policy. 7 * @return the retention policy 8 */ 9 RetentionPolicy value(); 10} 11 12/** 13 * Annotation retention policy. The constants of this enumerated type 14 * describe the various policies for retaining annotations. They are used 15 * in conjunction with the {@link Retention} meta-annotation type to specify 16 * how long annotations are to be retained. 17 * 18 * @author Joshua Bloch 19 * @since 1.5 20 */ 21public enum RetentionPolicy { 22 /** 23 * Annotations are to be discarded by the compiler. 24 */ 25 SOURCE, 26 27 /** 28 * Annotations are to be recorded in the class file by the compiler 29 * but need not be retained by the VM at run time. This is the default 30 * behavior. 31 */ 32 CLASS, 33 34 /** 35 * Annotations are to be recorded in the class file by the compiler and 36 * retained by the VM at run time, so they may be read reflectively. 37 * 38 * @see java.lang.reflect.AnnotatedElement 39 */ 40 RUNTIME 41} Target 注解 同时由于我们的注解是可能被写在各种地方的，因此我们需要定义我们这个参数的作用域。\n1@Documented 2@Retention(RetentionPolicy.RUNTIME) 3@Target(ElementType.ANNOTATION_TYPE) 4public @interface Target { 5 /** 6 * Returns an array of the kinds of elements an annotation type 7 * can be applied to. 8 * @return an array of the kinds of elements an annotation type 9 * can be applied to 10 */ 11 ElementType[] value(); 12} 13 14public enum ElementType { 15 /** Class, interface (including annotation type), or enum declaration */ 16 TYPE, 17 18 /** Field declaration (includes enum constants) */ 19 FIELD, 20 21 /** Method declaration */ 22 METHOD, 23 24 /** Formal parameter declaration */ 25 PARAMETER, 26 27 /** Constructor declaration */ 28 CONSTRUCTOR, 29 30 /** Local variable declaration */ 31 LOCAL_VARIABLE, 32 33 /** Annotation type declaration */ 34 ANNOTATION_TYPE, 35 36 /** Package declaration */ 37 PACKAGE, 38 39 /** 40 * Type parameter declaration 41 * 42 * @since 1.8 43 */ 44 TYPE_PARAMETER, 45 46 /** 47 * Use of a type 48 * 49 * @since 1.8 50 */ 51 TYPE_USE 52} Documented注解 最后就是一个是否需要被Javadoc记录的标记位@Documented。\n小结 基于遇上三点，也就是为什么我们常见的注解，头上都会有这三个标记的原因。因此，我们再手动实现另一个注解，可以再理解一下：\n1package com.springtest.demo.annotation; 2 3import java.lang.annotation.Documented; 4import java.lang.annotation.ElementType; 5import java.lang.annotation.Retention; 6import java.lang.annotation.RetentionPolicy; 7import java.lang.annotation.Target; 8 9@Target({ElementType.FIELD, ElementType.TYPE}) 10@Retention(RetentionPolicy.RUNTIME) 11@Documented 12public @interface Scope { 13 String SCOPE_SINGLETON = \u0026#34;singleton\u0026#34;; 14 15 String SCOPE_PROTOTYPE = \u0026#34;prototype\u0026#34;; 16 17 // 默认是单例 18 String value() default Scope.SCOPE_SINGLETON; 19} 看看上面这个注解，是不是很眼熟？~~\n没错，就是我们在Spring中常用的@Scope注解的照搬版~试试分析看这个注解是怎么表达的。\n接下来开始进行注解的解析，这里因为我们直接定义成运行时，所以可以在运行中通过类的反射机制，找到我们这个注解对应的作用域，如果被我们注解了，并且注解内的条件达到了，我们就对这个作用域内的对象进行某些我们想要的操作就行了。下面附上我的源代码以及编译器编译后的class的反编译结果。\n1package com.springtest.demo.annotation; 2 3import com.springtest.demo.config.YunyaoBeanPostProcessor; 4 5import javax.annotation.PostConstruct; 6import java.lang.reflect.Field; 7 8/** 9 * 注解驱动 10 */ 11@Scope(Scope.SCOPE_PROTOTYPE) 12public class FruitInfoUtil { 13 public static void getFruitInfo(Object obj) { 14 String strFruitName = \u0026#34; 水果名称：\u0026#34;; 15 16 Field[] fields = obj.getClass().getDeclaredFields(); 17 18 for (Field field : fields) { 19 if (field.isAnnotationPresent(Fruit.class)) { 20 Fruit fruit = field.getAnnotation(Fruit.class); 21 strFruitName = strFruitName + fruit.value() + fruit.type().name(); 22 System.out.println(strFruitName); 23 } 24 } 25 } 26 27 // 注：同一个对象，被实力出多个不同value的单例时，PostConstruct只会被执行一次 28 @PostConstruct 29 public void postConstruct() { 30 System.out.println(\u0026#34;PostConstruct被执行...\u0026#34; + this.getClass().getName()); 31 } 32} 1 2 3 public static void getFruitInfo(Object obj) 4 { 5 String strFruitName = \u0026#34; \\u6C34\\u679C\\u540D\\u79F0\\uFF1A\u0026#34;; 6 Field fields[] = obj.getClass().getDeclaredFields(); 7 Field afield[] = fields; 8 int i = afield.length; 9 for(int j = 0; j \u0026lt; i; j++) 10 { 11 Field field = afield[j]; 12 if(field.isAnnotationPresent(com/springtest/demo/annotation/Fruit)) 13 { 14 Fruit fruit = (Fruit)field.getAnnotation(com/springtest/demo/annotation/Fruit); 15 strFruitName = (new StringBuilder()).append(strFruitName).append(fruit.value()).append(fruit.type().name()).toString(); 16 System.out.println(strFruitName); 17 } 18 } 19 } 20 21 public void postConstruct() 22 { 23 System.out.println((new StringBuilder()).append(\u0026#34;PostConstruct\\u88AB\\u6267\\u884C...\u0026#34;).append(getClass().getName()).toString()); 24 } 总结 其实说到最后，注解真的很容易，而且很简单易用，只要我们搞清楚：\n注解的本质是什么 -- 本质上注解就是一个JDK提供给我们的标记位，我们需要自己定义这个标记会会在什么条件下触发什么动作 基于第一点，我们甚至可以自己定义执行函数，来对其他三方组件或者JDK提供的注解进行自定义补充解析。 基于第二点，我们就可以知道，注解的灵魂不在注解本身，而在于谁来解析这个注解（所谓一千个...） ","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E8%A7%A3%E5%B9%B6%E4%B8%94%E8%BF%9B%E8%A1%8C%E6%89%AB%E6%8F%8F%E8%A7%A3%E6%9E%90/","section":"post","tags":["Java","注解","注解扫描"],"title":"自定义注解并且进行扫描解析"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/","section":"tags","tags":null,"title":"Lambda表达式"},{"body":"目录 [toc]\nLambda表达式Java函数式接口 都9012年了，这篇博文代码看看5000年前4012年发布的Java 8新引入的Lambda表达式到底是个什么鬼。\n简述Lambda表达式 Lambda表达式并不是Java 8特有的特性，其设计初衷是用于一些特定代码中，已知固定入参和固定返回值的时候，动态生成的一种函数。\n举个栗子：\n1public Var3 func(Var1 var1, Var2 var2) { 2Var3 var3 = doSomeThing(var1, var2); 3return var3; 4} 上述代码是我们常见的Java代码格式，假如说我们已经设定这个函数只会被在特定位置被调用，或者换种说法，我们假设func函数仅仅只会作为func2(Var3 var3)的入参。同时如果我们把func这个函数的声明放到func2的入参时声明，那此时我们此时调用时，其实这个函数是叫func还是叫funcA还是叫ABCD已经无所谓了。\n因此我们就可以省略这个函数名，将其替换成-\u0026gt;，由此将上述函数省略为：\n1Var3 (Var1 var1, Var2 var2) -\u0026gt; { 2Var3 var3 = doSomeThing(var1, var2); 3return var3; 4} 接下来由于我们已知func2(Var3 var3)的入参肯定为Var3类型，所以上述代码又可以进一步省略：\n1(Var1 var1, Var2 var2) -\u0026gt; { 2Var3 var3 = doSomeThing(var1, var2); 3return var3; 4} 同理由于我们已知func的入参类型肯定为Var1和Var2，于是我们继续省略：\n1(var1, var2) -\u0026gt; { 2Var3 var3 = doSomeThing(var1, var2); 3return var3; 4} 然后由于我们如果整个函数内部只有一行操作的话，则可以知道这个操作的返回值肯定是这一行的操作结果，因此我们继续省略：\n1(var1, var2) -\u0026gt; doSomeThing(var1, var2); 最后，假如我们初始函数是：\n1Var3 (Var1 var1) -\u0026gt; { 2return var1.doSomeThing(); 3} 在我们简写成上述常见的表达式之后：\n1var1 -\u0026gt; var1.doSomeThing(); 由于我们知道入参只有一个，并且操作就是调用这个参数的一个子方法，而且这个入参叫做var1还是ABCD都无所谓，这个时候我们就可以极致缩写：\n1Var1::doSomeThing() 意味着对这个表达式的入参直接调用Var1类的doSomeThing，然后将结果返回。\n到此，整个Lambda写法的产生原因我们就已经知道了，不理解的可以重新回看整个缩写过程。\n注意这里的推理过程是所有支持Lambda表达式的开发语言通用的精简思路，之后切换语言遇到Lambda表达式，我们需要用同样的思路面对。\n实不相瞒，上述简化过程我就是在Python教程中知道的。\nJava中Lambda表达式的好处 在我们Java 8之前，我们可能暂时还没有体会到Lambda表达式的好处，但是Java 8新引入的Stream和Optional这两个类，让Java 8引入Lambda表达式成为一种趋势。\n继续举个栗子，假如我们现在有一个多层级的对象，我们需要获取其最底层的一个字段时，使用Optional类可以比较方便的判定，相关教程见我另一个帖子《Optional工具类》。\n这里我们先不要发散，假如我们使用Optional取一个中间可能存在null的多层级对象时，假设我们现在还不知道Lambda表达式这个东西，而是单纯使用Optional所有方法提供的入参直接暴力实现，那么最后的代码如下：\n1 2package com.main; 3 4import org.junit.Test; 5 6import java.util.ArrayList; 7import java.util.List; 8import java.util.Optional; 9import java.util.function.Consumer; 10import java.util.function.Function; 11 12public class MainFunc { 13 14 public class Test1 { 15 private Test2 test2; 16 17 public Test2 getTest2() { 18 return test2; 19 } 20 21 public void setTest2(Test2 test2) { 22 this.test2 = test2; 23 } 24 } 25 26 public class Test2 { 27 private List\u0026lt;Test3\u0026gt; test3; 28 29 public List\u0026lt;Test3\u0026gt; getTest3() { 30 return test3; 31 } 32 33 public void setTest3(List\u0026lt;Test3\u0026gt; test3) { 34 this.test3 = test3; 35 } 36 } 37 38 public class Test3 { 39 private String str; 40 41 public String getStr() { 42 return str; 43 } 44 45 public void setStr(String str) { 46 this.str = str; 47 } 48 } 49 50 @Test 51 public void test4() { 52 Test1 test1 = new Test1(); 53 Test2 test2 = new Test2(); 54 test1.setTest2(test2); 55 List\u0026lt;Test3\u0026gt; list = new ArrayList\u0026lt;\u0026gt;(); 56 list.add(new Test3()); 57 test2.setTest3(list); 58 String str = \u0026#34;123\u0026#34;; 59 str.concat(\u0026#34;456\u0026#34;); 60 list.get(0).setStr(str); 61 Optional\u0026lt;String\u0026gt; opt = Optional.ofNullable(test1).map(new Function\u0026lt;Test1, Test2\u0026gt;() { 62 @Override 63 public Test2 apply(Test1 test1) { 64 return test1.getTest2(); 65 } 66 }).map(new Function\u0026lt;Test2, List\u0026lt;Test3\u0026gt;\u0026gt;() { 67 @Override 68 public List\u0026lt;Test3\u0026gt; apply(Test2 test2) { 69 return test2.getTest3(); 70 } 71 }).map(new Function\u0026lt;List\u0026lt;Test3\u0026gt;, Test3\u0026gt;() { 72 @Override 73 public Test3 apply(List\u0026lt;Test3\u0026gt; list) { 74 return list != null \u0026amp;\u0026amp; list.size() \u0026gt; 0 ? list.get(0) : null; 75 } 76 }).map(new Function\u0026lt;Test3, String\u0026gt;() { 77 @Override 78 public String apply(Test3 test3) { 79 return test3.getStr(); 80 } 81 }); 82 if (opt.isPresent()) { 83 System.out.println(opt.get()); 84 } 85 } 86} 整段代码中，由于我们按照Optional.map的要求，通过实现Fuction接口函数，并且重写其apply函数，从而实现业务诉求。但是这种实现方式阅读费力，并且撰写辛苦，而所有map中实质的操作却仅仅只有一行，这种代码既不优雅，也不是我们引入Optional的初衷。\n在这种情况下，我们使用Lambda表达式替代上述代码中test4的实现：\n1 @Test 2 public void test4() { 3 Test1 test1 = new Test1(); 4 Test2 test2 = new Test2(); 5 test1.setTest2(test2); 6 List\u0026lt;Test3\u0026gt; list = new ArrayList\u0026lt;\u0026gt;(); 7 list.add(new Test3()); 8 test2.setTest3(list); 9 String str = \u0026#34;123\u0026#34;; 10 str.concat(\u0026#34;456\u0026#34;); 11 list.get(0).setStr(str); 12 if (opt.isPresent()) { 13 System.out.println(opt.get()); 14 } 15 Optional\u0026lt;String\u0026gt; opt = Optional.ofNullable(test1) 16 .map(t1 -\u0026gt; t1.getTest2()) 17 .map(t2 -\u0026gt; t2.getTest3()) 18 .map(t3List -\u0026gt; t3List != null \u0026amp;\u0026amp; t3List.size() \u0026gt; 0 ? t3List.get(0) : null) 19 .map(t3 -\u0026gt; t3.getStr()); 20 if (opt.isPresent()) { 21 System.out.println(opt.get()); 22 } 23 } 最后是极致简写方法：\n1 @Test 2 public void test4() { 3 Test1 test1 = new Test1(); 4 Test2 test2 = new Test2(); 5 test1.setTest2(test2); 6 List\u0026lt;Test3\u0026gt; list = new ArrayList\u0026lt;\u0026gt;(); 7 list.add(new Test3()); 8 test2.setTest3(list); 9 String str = \u0026#34;123\u0026#34;; 10 str.concat(\u0026#34;456\u0026#34;); 11 list.get(0).setStr(str); 12 if (opt.isPresent()) { 13 System.out.println(opt.get()); 14 } 15 Optional\u0026lt;String\u0026gt; opt = Optional.ofNullable(test1) 16 .map(Test1::getTest2) 17 .map(Test2::getTest3) 18 .map(test3 -\u0026gt; test3 != null \u0026amp;\u0026amp; test3.size() \u0026gt; 0 ? test3.get(0) : null) 19 .map(Test3::getStr); 20 if (opt.isPresent()) { 21 System.out.println(opt.get()); 22 } 23 } 整个实现上瞬间清爽很多，并且代码量非常少。\nJava中Lambda的实现原理 其实在上述代码优化过程中，从最开始直接在map方法中实现函数接口，到直接替换成Lambda表达式，我们省略了一个推导步骤：\n首先尝试将函数接口的实现抽出去：\n1 @Test 2 public void test4() { 3 Test1 test1 = new Test1(); 4 Test2 test2 = new Test2(); 5 test1.setTest2(test2); 6 List\u0026lt;Test3\u0026gt; list = new ArrayList\u0026lt;\u0026gt;(); 7 list.add(new Test3()); 8 test2.setTest3(list); 9 String str = \u0026#34;123\u0026#34;; 10 str.concat(\u0026#34;456\u0026#34;); 11 list.get(0).setStr(str); 12 Function\u0026lt;Test1, Test2\u0026gt; func1 = new Function\u0026lt;Test1, Test2\u0026gt;() { 13 @Override 14 public Test2 apply(Test1 test1) { 15 return test1.getTest2(); 16 } 17 }; 18 Function\u0026lt;Test2, List\u0026lt;Test3\u0026gt;\u0026gt; func2 = new Function\u0026lt;Test2, List\u0026lt;Test3\u0026gt;\u0026gt;() { 19 @Override 20 public List\u0026lt;Test3\u0026gt; apply(Test2 test2) { 21 return test2.getTest3(); 22 } 23 }; 24 Function\u0026lt;List\u0026lt;Test3\u0026gt;, Test3\u0026gt; func3 = new Function\u0026lt;List\u0026lt;Test3\u0026gt;, Test3\u0026gt;() { 25 @Override 26 public Test3 apply(List\u0026lt;Test3\u0026gt; list) { 27 return list != null \u0026amp;\u0026amp; list.size() \u0026gt; 0 ? list.get(0) : null; 28 } 29 }; 30 Function\u0026lt;Test3, String\u0026gt; func4 = new Function\u0026lt;Test3, String\u0026gt;() { 31 @Override 32 public String apply(Test3 test3) { 33 return test3.getStr(); 34 } 35 }; 36 Optional\u0026lt;String\u0026gt; opt = Optional.ofNullable(test1).map(func1).map(func2).map(func3).map(func4); 37 if (opt.isPresent()) { 38 System.out.println(opt.get()); 39 } 40 } 然后我们有已经知道map中实际是可以直接填Lambda表达式的，这里我们尝试将Lambda表达式赋值给func1、func2、func3、func4：\n1 @Test 2 public void test4() { 3 Test1 test1 = new Test1(); 4 Test2 test2 = new Test2(); 5 test1.setTest2(test2); 6 List\u0026lt;Test3\u0026gt; list = new ArrayList\u0026lt;\u0026gt;(); 7 list.add(new Test3()); 8 test2.setTest3(list); 9 String str = \u0026#34;123\u0026#34;; 10 str.concat(\u0026#34;456\u0026#34;); 11 list.get(0).setStr(str); 12 Function\u0026lt;Test1, Test2\u0026gt; func1 = Test1::getTest2; 13 Function\u0026lt;Test2, List\u0026lt;Test3\u0026gt;\u0026gt; func2 = Test2::getTest3; 14 Function\u0026lt;List\u0026lt;Test3\u0026gt;, Test3\u0026gt; func3 = (l) -\u0026gt; l != null \u0026amp;\u0026amp; l.size() \u0026gt; 0 ? l.get(0) : null; 15 Function\u0026lt;Test3, String\u0026gt; func4 = Test3::getStr; 16 Optional\u0026lt;String\u0026gt; opt = Optional.ofNullable(test1).map(func1).map(func2).map(func3).map(func4); 17 if (opt.isPresent()) { 18 System.out.println(opt.get()); 19 } 20 } OK，到这里，我们可以发现发现所谓Lambda表达式，实际上就是自己帮你实现了一个函数式接口而已，这部分实现过程由Java 8之前你来完成，优化到了编译器自己完成，从而实现了代码上的优雅。\n这里我们引申一下，在Java中，函数接口有 3 条重要法则：\n一个函数接口只有一个抽象方法。 在 Object 类中属于公共方法的抽象方法不会被视为单一抽象方法。 函数接口可以有默认方法和静态方法。 任何满足单一抽象方法法则的接口，都会被自动视为函数接口。这包括 Runnable 和 Callable 等传统接口，以及您自己构建的自定义接口。\n上述三原则引用自《Java 8 习惯用语，第 7 部分 —— 函数接口》\n接下来，让我开始尝试看看Java编译器（JDK）再给我们编译Lambda表达式时做了哪些优化动作。\nJava1.8引入的新函数式接口 所有函数式接口见java.util.function包，这里只挑取几个典型的。\nConsumer接口：提供一个void accept(T t);函数，一般我们的函数只有一个入参，没有返回值时，可以实现该接口\nFunction接口：提供一个R apply(T t);函数，一般我们只有一个入参，同时有返回值时，可以实现该接口，标准的最常用的函数式接口\nPredicate接口：提供一个boolean test(T t);函数，一般我们需要对入参做一些判断时，可以实现该接口，Stream.filter的入参就是该接口的实现类。\nSupplier接口：提供一个T get();函数，如果函数没有入参，只有返回值，譬如我们的JavaBean中的get方法，可以实现该接口。\nJava编译器自动优化实现函数接口 由上我们已知，其实Java 8中带来的Lambda表达式，就是一种能够减少我们实现接口函数的语法糖，Java能够通过我们的返回值，讲一个Lambda表达式合理的转换成一个函数接口的实现。\n在了解其本质之后，我们甚至可以自己定义一个接口函数用于接收一个Lambda表达式：\n1package com.main; 2 3import org.junit.Test; 4 5public class MainFunc { 6 7 @FunctionalInterface 8 private interface FI\u0026lt;N\u0026gt; { 9 void run(N n); 10 }; 11 12 private void showFi(FI\u0026lt;String\u0026gt; n) { 13 n.run(\u0026#34;showFi\u0026#34;); 14 } 15 16 @Test 17 public void test4() { 18 showFi(s -\u0026gt; System.out.println(s)); 19 } 20} java编译器的实现是一种动态实现，不受函数接口的接口名或者其抽象方法的名称的限制，由此我们也说java中的Lambda表达式是一种动态语言类型。\nJava编译器对动态函数的优化 如果我们希望一窥JDK8在编译过程中，如何实现通过阅读反编译之后的class的代码进行查阅，指令为javap -v -p YourClass.class \u0026gt; yourRecordFile，整个函数的编译结果如下：\n1public void test4(); 2descriptor: ()V 3flags: ACC_PUBLIC 4RuntimeVisibleAnnotations: 50: #16() 6Code: 7stack=4, locals=6, args_size=1 80: new #17 // class com/main/MainFunc$Test1 93: dup 104: aload_0 115: invokespecial #19 // Method com/main/MainFunc$Test1.\u0026#34;\u0026lt;init\u0026gt;\u0026#34;:(Lcom/main/MainFunc;)V 128: astore_1 139: new #22 // class com/main/MainFunc$Test2 1412: dup 1513: aload_0 1614: invokespecial #24 // Method com/main/MainFunc$Test2.\u0026#34;\u0026lt;init\u0026gt;\u0026#34;:(Lcom/main/MainFunc;)V 1717: astore_2 1818: aload_1 1919: aload_2 2020: invokevirtual #25 // Method com/main/MainFunc$Test1.setTest2:(Lcom/main/MainFunc$Test2;)V 2123: new #29 // class java/util/ArrayList 2226: dup 2327: invokespecial #31 // Method java/util/ArrayList.\u0026#34;\u0026lt;init\u0026gt;\u0026#34;:()V 2430: astore_3 2531: aload_3 2632: new #32 // class com/main/MainFunc$Test3 2735: dup 2836: aload_0 2937: invokespecial #34 // Method com/main/MainFunc$Test3.\u0026#34;\u0026lt;init\u0026gt;\u0026#34;:(Lcom/main/MainFunc;)V 3040: invokeinterface #35, 2 // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z 3145: pop 3246: aload_2 3347: aload_3 3448: invokevirtual #41 // Method com/main/MainFunc$Test2.setTest3:(Ljava/util/List;)V 3551: ldc #45 // String 123 3653: astore 4 3755: aload 4 3857: ldc #47 // String 456 3959: invokevirtual #49 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String; 4062: pop 4163: aload_3 4264: iconst_0 4365: invokeinterface #55, 2 // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object; 4470: checkcast #32 // class com/main/MainFunc$Test3 4573: aload 4 4675: invokevirtual #59 // Method com/main/MainFunc$Test3.setStr:(Ljava/lang/String;)V 4778: aload_1 4879: invokestatic #63 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional; 4982: invokedynamic #72, 0 // InvokeDynamic #0:apply:()Ljava/util/function/Function; 5087: invokevirtual #73 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional; 5190: invokedynamic #77, 0 // InvokeDynamic #1:apply:()Ljava/util/function/Function; 5295: invokevirtual #73 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional; 5398: invokedynamic #78, 0 // InvokeDynamic #2:apply:()Ljava/util/function/Function; 54103: invokevirtual #73 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional; 55106: invokedynamic #79, 0 // InvokeDynamic #3:apply:()Ljava/util/function/Function; 56111: invokevirtual #73 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional; 57114: astore 5 58116: aload 5 59118: invokevirtual #80 // Method java/util/Optional.isPresent:()Z 60121: ifeq 138 61124: getstatic #84 // Field java/lang/System.out:Ljava/io/PrintStream; 62127: aload 5 63129: invokevirtual #90 // Method java/util/Optional.get:()Ljava/lang/Object; 64132: checkcast #50 // class java/lang/String 65135: invokevirtual #93 // Method java/io/PrintStream.println:(Ljava/lang/String;)V 66138: return 此时我们就不难发现，其实这里我们的4个lambda表达式编译结果对应的字节码指令为invokedynamic，这也就意味着在我们只有将lambda表达式的返回值赋值给一个函数接口的时候，他的类型才能够给动态识别，由此实现了lambda表达式的动态绑定。\n由此lambda的外衣也就扒的差不多了，如果文中有什么表达或者理解错误的，欢迎指正。\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B8%8E%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3/","section":"post","tags":["Java","Lambda表达式","函数式接口"],"title":"Lambda表达式与函数式接口"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3/","section":"tags","tags":null,"title":"函数式接口"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/integer/","section":"tags","tags":null,"title":"Integer"},{"body":"highestOneBit 获取一个int类型的二进制取整\n1public static int highestOneBit(int i) { 2\t// HD, Figure 3-1 3\ti |= (i \u0026gt;\u0026gt; 1); 4\ti |= (i \u0026gt;\u0026gt; 2); 5\ti |= (i \u0026gt;\u0026gt; 4); 6\ti |= (i \u0026gt;\u0026gt; 8); 7\ti |= (i \u0026gt;\u0026gt; 16); 8\treturn i - (i \u0026gt;\u0026gt;\u0026gt; 1); 9} 上述代码粗看会不理解实现原理，但是跟着推导一次就能理解算法的思想。假定一个int的二进制表达式是100001000，这个常数的迭代过程如下：\n第一次结束 100001000 -\u0026gt; 110001100 第二次结束 110001100 -\u0026gt; 111101111 第三次结束 111101111 -\u0026gt; 111111111 第四次结束 111111111 -\u0026gt; 111111111 第五次结束 111111111 -\u0026gt; 111111111 然后返回值为111111111-11111111 = 100000000。\n整个实现过程中，即为不停的将首位1和后续的位进行与操作，并且首位1第一次复制成2个，第二次2*2复制成4个，第三次复制成2*4 = 8个（如果这个int大于2^8)，以此类推，按照指数形式将首位1向后与之后，我们最后就能让所有位全部变成1。最后右移1位然后相减，去掉首位之后的所有的1即可。\n此种实现方式，简化了迭代次数，并且由于充分利用上一次的赋值结果，所以不用考虑第三位是否成功被赋值，第五位成功被赋值等（因为在(int)log2(n)+1)次会被赋值。\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/java%E7%9A%84integer%E7%B1%BB%E6%96%B9%E6%B3%95%E8%A7%A3%E8%AF%BB/","section":"post","tags":["Java","Integer","源代码"],"title":"Java的Integer类方法解读"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E6%BA%90%E4%BB%A3%E7%A0%81/","section":"tags","tags":null,"title":"源代码"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/archives/","section":"","tags":null,"title":""},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/css/","section":"tags","tags":null,"title":"Css"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/featured/","section":"tags","tags":null,"title":"Featured"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/html/","section":"tags","tags":null,"title":"Html"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/markdown/","section":"tags","tags":null,"title":"Markdown"},{"body":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nImages Local image, alt text as caption The following image is located within the Hugo site. Because it has alt text but no title text, the caption is generated by the alt text.\nRemote image, specified caption The following image is loaded from a remote URL. The alt text is the same (for screen readers and in cases when the image doesn't load) but because a separate title is provided, the title is used for the caption:\nThis is Jane Doe Image with alt text and no caption Alt text is always recommended for SEO, accessibility and in cases when images don't load. However, you don't necessarily always want an image to have a caption. In that case, use a title with one space:\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don't communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren't part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code Code Blocks Code block with backticks 1\u0026lt;!doctype html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3\u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; 5 \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8 \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; 9\u0026lt;/body\u0026gt; 10\u0026lt;!-- this line is extraneous 2Error from server (Forbidden): deployments.apps is forbidden: User \u0026#34;chiptest\u0026#34; cannot create resource \u0026#34;deployments\u0026#34; in API group \u0026#34;apps\u0026#34; in the namespace \u0026#34;default\u0026#34; --\u0026gt; 11\u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo's internal highlight shortcode 1\u0026lt;!doctype html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3\u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; 5 \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8 \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; 9\u0026lt;/body\u0026gt; 10\u0026lt;/html\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike's talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/markdown-syntax/","section":"post","tags":["markdown","css","html","themes","featured"],"title":"Markdown Syntax Guide"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/categories/themes/","section":"categories","tags":null,"title":"Themes"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/themes/","section":"tags","tags":null,"title":"Themes"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/privacy/","section":"tags","tags":null,"title":"Privacy"},{"body":"Hugo ships with several Embedded Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\nInstagram Simple Shortcode YouTube Privacy Enhanced Shortcode X Simple Shortcode See shortcode documentation for more details.\nVimeo Simple Shortcode","link":"https://yunyaolong.github.io/longyunyao.github.io/post/rich-content/","section":"post","tags":["shortcodes","privacy"],"title":"Rich Content"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/shortcodes/","section":"tags","tags":null,"title":"Shortcodes"},{"body":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/placeholder-text/","section":"post","tags":["markdown","text"],"title":"Placeholder Text"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/text/","section":"tags","tags":null,"title":"Text"},{"body":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/hooks/head-end.html Add these lines to the newly created partial: 1{{ if or .Params.math .Site.Params.math }} 2{{ partial \u0026#34;math.html\u0026#34; . }} 3{{ end }} To enable KaTeX globally set the parameter math to true in a project's configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/math-typesetting/","section":"post","tags":null,"title":"Math Typesetting"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/emoji/","section":"tags","tags":null,"title":"Emoji"},{"body":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site's configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1.emoji { 2 font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; 3}","link":"https://yunyaolong.github.io/longyunyao.github.io/post/emoji-support/","section":"post","tags":["emoji"],"title":"Emoji Support"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E6%97%85%E6%B8%B8/","section":"tags","tags":null,"title":"旅游"},{"body":"毕业旅行规划 15 MAY 2018\n景点总览 青海大环线 DAY1(6-7) 塔尔寺 住西宁 DAY2(6-8) 金沙湾 - （二郎剑景区(151基地)） - 黑马河日落 住黑马河 DAY3(6-9) 黑马河看日出 - 茶卡盐湖 - 可鲁克湖-托素湖自然保护区 - 大柴旦 - （水上雅丹，会绕路但是很好看） - （翡翠湖）住大柴旦 DAY4(6-10) 大柴旦 - 玉门关 - 汉长城、河仓城 - 雅丹地质公园（魔鬼城） - 敦煌 住敦煌 DAY5(6-11) 敦煌 - 敦煌莫高窟 - 鸣沙山月牙泉 - 敦煌 住敦煌 DAY6(6-12) 敦煌 - （瓜州稍作调整） - 嘉峪关关城 - 张掖七彩丹霞（日落） - 张掖 住张掖（如果七彩丹霞景区附近不贵的话，就住七彩丹霞景区附近） DAY7(6-13) 张掖 - 张掖七彩丹霞（日出） - 祁连山祁连大草原 - 门源油菜花（可能没开门） - 远眺岗什卡雪峰 - 西宁 住西宁 参考链接：在最美的时光遇见你——青海甘肃6日自驾游\n西安 DAY8(6-14) 城墙外的大小雁塔、陕西历史博物馆一带 DAY9(6-15) 兵马俑、华清池 DAY10(6-16) 城墙（南门）及城墙内景点（钟楼，鼓楼，回民街） 路线规划 DAY1(6-7) 塔尔寺 行程规划 早9点出机场，11点到市中心，吃饭然后去市中心找房间放行李。下午坐车去西塔寺，晚上7点半散场。回西宁市中心过夜。\n如果有时间可以去千姿湖(黄河清湿地公园)。（天下黄河贵德清）\n参考攻略： 西宁塔尔寺夏季营业时间下午几点不允许进入？\n公交路线 西宁曹家堡机场 -\u0026gt; (机场大巴市中心线) -\u0026gt; 银龙宾馆 -\u0026gt; (步行) -\u0026gt; 管理站公交站 -\u0026gt; 塔尔寺公交专线 -\u0026gt; 塔尔寺\n机场大巴市中心线路径：https://goo.gl/maps/rtx81pfSXgM2\n时间开销 早上9点出机场 机场 -\u0026gt; 管理站公交站： 2h 参考价 21 块 管理站公交站 -\u0026gt; 塔尔寺： 1h 参考价 5 块 晚上回西宁住一晚 参考攻略：在西宁，早起去塔尔寺玩半天够吗？只有半天时间\n经济开销 塔尔寺 80/人\n注意事项 面积比较大，自带水 许多地方不允许拍照 DAY2(6-8) 金沙湾 - （二郎剑景区(151基地)） - 黑马河日落 行程规划 上午提车，途径湟源县、海晏县进入抵达金沙湾景区；下午途径青海湖环线抵达黑马河看夕阳。（青海湖环线时间充裕的话可以考虑二郎剑景区(151基地)，但是据说这个景区一般，或者直接在环线路边拍拍拍）晚上在黑马河过夜。\n这段行程是不走日月山和倒淌河的！也不经过拉脊山！是另一条路线\n行驶路线 西宁 -\u0026gt; 湟源县 -\u0026gt; 海晏县 -\u0026gt; 金沙湾：https://goo.gl/maps/Q3BZBLonaPu\n金沙湾-\u0026gt;黑马河：https://goo.gl/maps/19Xw9DQwNB72\n时间开销 早上9点左右提车，回宾馆取行李退房 上午赶去金沙湾：2h 可能途径高速，参考价10块 下午经过青海湖环线到达黑马河：2.5h 可能途径高速，参考价未知 经济开销 金沙滩联票100元，里面所有的项目任玩，不联票就是30元一人 二郎剑景区（如果进去的话）旺季（4月-10月）：100元 黑马河不收费 注意事项 可以准备颜色鲜艳一点的衣服准备沙漠中的拍照 注意防晒（墨镜+披肩） 车上记得备水 黑马河可以考虑在湖边住一晚上帐篷，方便第二天看日出 黑马河那里一定一定一定要提前预定，提前预定100左右，现场预定500:) DAY3(6-9)黑马河看日出- 茶卡盐湖-可鲁克湖-托素湖自然保护区 - 大柴旦 - （水上雅丹，会绕路但是很好看） -（翡翠湖） 行程规划 早起看黑马河日出（剪影），中午茶卡盐湖拍+吃，下午去可鲁克湖-托素湖自然保护区，时间足够就去翡翠湖，晚上之前抵达大柴旦镇。晚上在大柴旦镇过夜。\n行车路线 黑马河 -\u0026gt; （途径橡皮山或G109） -\u0026gt; 茶卡盐湖：google地图没有路径，百度和高德有地图\n茶卡盐湖 -\u0026gt; （途径外星人遗址） -\u0026gt; 可鲁克湖\n可鲁克湖 -\u0026gt; 大柴旦：https://goo.gl/maps/4duciLsKjtE2\n时间开销 根据太阳升起时间决定起床时间，预计8点看完出发 早晨橡皮山或G109赶去茶卡盐湖，1.5h，可能收费，参考价15，停留至中午，吃饭 *下午去可鲁克湖-托素湖自然保护区，停留一段时间，去往大柴旦 如果时间充裕，下午可以去翡翠湖看一下 晚上回到大柴旦镇住宿 经济开销 门票70元/人 茶卡盐湖小火车单程50/人 可鲁克湖门票20元/人 翡翠湖不收费 注意事项 今天开车时间比较长 茶卡盐湖可以租硅胶鞋套，很便宜 中午反射效果最好，不过反射光线较强，一定要戴上墨镜并注意防晒。 茶卡盐湖中有一些小黑洞一定不能踩，否则会连鞋带脚一起陷下去 去托素湖一定要从外星人遗址的高速出口下，这边去托素湖的风景非常棒 翡翠湖其实也是盐湖，不过没有经过旅游开发 这条路线还有一种选择，跳过某些景点，转去水上雅丹！！！真的很好看，没开发过不收费 DAY4(6-10) 大柴旦 - 玉门关 - 汉长城、河仓城 - 雅丹地质公园（魔鬼城） - 敦煌 行程规划 早起沿G3011前往甘肃，在中午之前到达玉门关；然后一路到达雅丹地质公园；晚上回到敦煌市区，（夜市可以考虑月牙泉小镇，古代西北的文化+特色美食）\n行车路线 大柴旦镇 -\u0026gt; 白色戈壁公路（G3011） -\u0026gt; 党河口附近左转 -\u0026gt; 玉门关\n时间开销 早上8点左右开始赶车，大柴旦至玉门关预计4h45min， 中午1点左右到玉门关 玉门关(20分钟)，河仓城(15分钟) 驾车10分钟 汉长城遗址(20分钟) 驾车10分钟 雅丹国家地质公园（魔鬼城）(1小时) 下午4点左右离开魔鬼城驱车前往敦煌市 2h 晚上可以去月牙泉小镇 经济开销 玉门关、河仓城、汉长城的联票为40元 魔鬼城全价票120元/人（门票50元，车票70元），优惠票95元/人（门票25元/人，车票70元/人） 注意事项 出发前做好应急准备\n应急食物，尤其是要多买些巧克力，因为巧克力是高热量食物 水是必备的，特别是纯净水，不但人喝，车子有的时候也要使用。比如发动机冷却水缺乏，纯净水可以应急。长距离下坡刹车过热，可以使用纯净水降温等。 有条件的话，检查一下。常规检查机油、冷却液、助力油、玻璃水，重点检查轮胎、备胎胎压和轮胎磨损是不是正常，轮胎上有没有扎钉子。看看千斤顶和更换轮胎的工具是不是在车上，带一个轮胎充气泵也许有用处。有可能的话去4S店使用计算机检查一下发动机、刹车、ABS和电路情况。 无人区白色戈壁公路贼好看，可以停下来拍照片\n中途可以慢一点，在魔鬼城等日落会很好看\nDAY5(6-11) 敦煌 - 敦煌莫高窟 - 鸣沙山月牙泉 - 敦煌 行程规划 早上9点莫高窟 下午鸣沙山+月牙泉 行车路线 早上从驱车前往莫高窟，可能要稍微早起一点。 下午前往鸣沙山月牙泉 沙洲夜市或者月牙泉小镇夜市 时间开销 早上9点莫高窟 2h 回酒店休息，下午3点左右驱车鸣沙山，游玩两小时至18点等日落 步行至月牙泉看夜景 经济开销 莫高窟 100/人 （已购票） 鸣沙山月牙泉 旺季（5月1日—10月31日）120元/人，学生凭有效学生证件半价优惠 鸣沙山其他服务参考价：骆驼80元/匹；滑翔机160元-1600元/人，以飞行的路程决定；滑沙15元/人；租鞋套10元/副；挑选骑骆驼和滑沙时工作人员拍的照片，20元/张 注意事项 莫高窟景点记得记得记得带上身份证和学生证 月牙泉可以等到9点天黑闭馆，晚上开灯以后很好看 除了七彩丹霞的日落，七彩丹霞日出的景色也特别美。很多大环线的行程中都会安排看七彩丹霞的日落，住宿在七彩镇，出景区时可以办理第二天免费入场，不需要额外付费，因此，何不趁此机会看看不逊色于黑马河日出的七彩丹霞日出景象呢。 敦煌大街小巷的美食中，最出名的便是驴肉面黄与杏皮水，其他的可以在沙洲夜市或者其他地方搜罗一下（其实可以在其他地方找找，因为感觉沙洲夜市会比较载客而且会比较商业化） DAY6(6-12) 敦煌 - （瓜州稍作调整） - 嘉峪关关城 - 张掖七彩丹霞（日落） - 张掖 行程规划 主要任务是赶车，上午敦煌驾车至瓜州修整，再驾车至嘉峪关 下午参观嘉峪关（如果时间不够就可以考虑舍去，因为绑定的两个景点并不好看，本身关卡也很坑） 接着去七彩丹霞 行驶路线 敦煌市 -\u0026gt; （沿着G3011） -\u0026gt; 瓜州县：https://goo.gl/maps/F6fNxMt5YxH2 走高速，参考收费22元\n瓜州县 -\u0026gt; （沿着G312） -\u0026gt; 嘉峪关：https://goo.gl/maps/24kimp21DcR2 走高速，参考收费75元\n嘉峪关 -\u0026gt; （沿着G30） -\u0026gt; 临泽县 -\u0026gt; 张掖七彩丹霞：https://goo.gl/maps/ZDUkG31ueF92（仅包含部分线路） 参考收费56元\n时间开销 尽早爬起来准备赶车保证当天时间充沛 敦煌-\u0026gt;瓜州：2小时 瓜州-\u0026gt;嘉峪关:驾车 2.5小时 嘉峪关-\u0026gt;七彩丹霞：驾车 2.5小时 经济开销 嘉峪关门票(联票且只可买联票，包含长城博物馆、长城第一墩和悬臂长城)，旺季（5月1日-10月31日）120元/人，学生票半价 张掖的七彩丹霞地貌景区分为临泽县入口（西入口）和肃南县入口（东入口）两个入口，为统一购票，门票54元/人 注意事项 嘉峪关在一些游记中，给人留下的印象并不好，如果时间紧张可以不去或者只是在外城（外城据说不用票都可以进） 七彩丹霞景区好像有一些比较骚的操作：六月去张掖看丹霞哪个时间段最佳呢？ 七彩丹霞的日落和日出都很好看，可以尝试骚操作一下第二天早上爬起来看日出 DAY7(6-13) 张掖 - 张掖七彩丹霞（日出） - 祁连山祁连大草原 - 门源油菜花（可能没开门） - 远眺岗什卡雪峰 - 黑泉水库 - 西宁 行程规划 早起看日出（如果拿到允许第二天进入的票的话） 祁连山草原 门源油菜花 黑泉水库 赶回西宁 行车路线 张掖 -\u0026gt; （西张线） -\u0026gt; 祁连山草原\n祁连山草原 -\u0026gt; 门源油菜花\n门源油菜花 -\u0026gt; 黑泉水库\n时间开销 张掖丹霞地质公园(1.5小时) 张掖-\u0026gt;祁连 驾车3小时，大草原游玩45min左右 祁连-\u0026gt;门源油菜花 驾车1个钟。门源游玩45min左右 门源-\u0026gt;宁西 驾车1小时40分钟 途径黑泉水库(30分钟) 经济开销 祁连山草原 免费 门源油菜花 门票免费，观花台收费30元/人。 黑泉水库免费 注意事项 晚上9点之前感去机场还车 DAY8(6-14) 西安 大小雁塔（大慈恩寺、北广场）、陕西历史博物馆一带 行程规划 中午下机，先赶回市内，在城墙外部分景点玩一下，如大小雁塔（北广场、大慈恩寺）、陕西历史博物馆。具体游玩顺序根据酒店位置而定。\n路程规划 小雁塔：乘坐21路、402路等公交在小雁塔站下车即到。 西安博物馆：市内搭乘游7路、18路、21路或者地铁2号线在南稍门站下车，再往西走200米就可看到西安博物院。 大雁塔：乘坐21路 、521路等公交车在大雁塔站下车。\n时间开销 景点就在市内，交通工具时间应该在半小时以内。 小雁塔游玩时间在1-1.5h 西安博物馆时间在2h 大雁塔游玩时间在1-2h 经济开销 小雁塔免费不免票，凭身份证领取；登小雁塔30元。开放时间：8:00-17:30 西安博物馆限额领票参观（需携带身份证）；每天向社会公众发放免费参观券3000张，发票时间为每个开放日的9:00-16:00 大雁塔北广场免费，开放时间: 8:00-17:30 大慈恩寺50元，大雁塔登塔30元。开放时间：8:00-17:30 注意事项 ·大雁塔北广场的音乐喷泉在夜晚游客较多，最佳观景地点要提前占位,建议提前30分钟前往。 DAY9(6-15) 西安 华清池、兵马俑、（秦皇陵地宫）、（秦始皇陵） 行程规划 去往兵马俑时，沿途会经过华清池、秦皇陵地宫和始皇陵，可以考虑上午华清池，下午兵马俑。（兵马俑市内景点下午不会晒） 可以考虑美团参团买套票 时间开销 华清宫旅游时间预计1-2h 兵马俑博物馆旅游时间预计2-3h 经济开销 华清宫旺季150元/人次 兵马俑旺季150元/人次（包含始皇陵的套票） 秦陵地宫参考价35元/人次 注意事项 兵马俑可以请导游讲解或者选择自动讲解机，或者使用微信导游 今天旅游在当地的美团上报一个团，兵马俑+华清宫+地宫+半坡博物馆，导游和讲解都有了，80块费用，如果是学生，需要再付205的门票费（学生票半价），什么都包括了，比自己去方便些 秦陵地宫并不是真正的地宫，而是依据大量文献记载、考古发现和民间传说所提供的资料，运用声、光、电等技术和雕塑、美术、古建等多种手法，模拟而成的秦始皇帝陵地面陵区和地宫上下两层的形式，准确说来，秦陵地宫景区的全称应该是秦陵地宫展览馆。 秦始皇兵马俑博物馆和秦始皇陵门票实行淡、旺季浮动价格，“一票制”管理；观众往返秦始皇兵马俑博物馆和秦始皇帝陵两景区参观，可免费乘坐旅游专车 DAY10(6-16) 西安 城墙南门，钟楼，鼓楼，回民街 行程规划 城墙一共14km，可以骑车绕城墙一圈，但是会比较颠簸 半圈可以南门上，北门下（或者反向） 还可以从南门上，再选一个就近的门下 参考行程：陕西历史博物馆+古城墙+钟鼓楼/回民街+大雁塔喷泉广场西安深度一日游（ 精品小团 三环内接待 景点全涵盖）\n时间开销 相对自由，但是注意飞机晚上10点起飞，需要预留时间 经济开销 钟楼和鼓楼的门票均为35元/人 城墙成人54元，1.2-1.4米儿童、学生证(硕士学历以上学生证、国外院校学生证除外)和65-70岁老年人27元。 城墙上可租赁自行车骑行游览，单人自行车45元，双人自行车90元，押金200元。 注意事项 关于预算 这篇预算是根据第一篇参考自驾游计算的，实际会有出入，我已经懒得算钱了\n机票： 广州-西宁，来回1440/人 租车： 350*6=2100 住宿： 2000元/2人 （基本200左右一天，一般连锁酒店在网上订会便宜，民宿什么的我会直接打电话砍价或者到了再定。七月初我们去的时候住宿还好不是很紧张，七月中以后就要另当别论了。） 油费 ： 800 左右 （青海开车根本不用开空调超省油！） 过路费： 350 左右 （我们只有兰州到西宁和张掖到兰州开的高速，分别花了80和180的过路费，其他省道国道都是一次性收十块八块的过路费） 门票： 塔尔寺80/人，茶卡 50/人，玉门关、河仓城、汉长城的联票为40元/人，魔鬼城95元/人，卓尔山70/人，莫高窟 100/人 （已购票），嘉峪关60元/人，门源万亩油菜花60/人，张掖丹霞地质公园74/人，大慈恩寺50元/人，西安day2美团抱团285元/人，钟鼓楼70元/人，城墙54元/人。有地方用了学生证，总花费大概1000元。 餐饮： 1500左右/2人 （每天都起的挺晚的，一般是吃一天两顿的节奏） 其他 关于物资 买保险 证件：身份证，驾驶证，银行卡，信用卡，学生证，现金 手机，充电器，充电宝，耳机，相机，三脚架，手机支架，U盘，提前下载离线地图，墨镜 防晒，护肤，高反药 洗衣液√，沐浴露√，洗发露，刮胡刀，剃须啫喱，牙膏，牙刷，毛巾，睡袋，牙刷杯，马桶垫 睡衣，睡袋 棉衣*1+毛衣+夏装+帽子+披肩+墨镜+其他物理防晒，一次性内内 车上记得备水 ","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/%E6%AF%95%E4%B8%9A%E6%97%85%E8%A1%8C%E8%A7%84%E5%88%92/","section":"post","tags":["杂谈","随笔","旅游"],"title":"毕业旅行规划"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/categories/c++/","section":"categories","tags":null,"title":"C++"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/c++/","section":"tags","tags":null,"title":"C++"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/ubuntu/","section":"tags","tags":null,"title":"Ubuntu"},{"body":"因为项目开发需要, 我要在Ubuntu中使用多线程编程进行,以便能够在不影响主线程的情况下, 读写虚拟环境中的相关数据.\n强烈建议先阅读[C/C++ 多线程（程序猿面试重点）CodeBlocks-CB的pthreads使用]了解Ubuntu下使用多线程编程时的基本理论知识. 里面有很详细的解释说明\n初始代码 这里我首先参考了部分网上博客, 写了如下Read\u0026amp;Write的demo.\n1#include \u0026lt;pthread.h\u0026gt; 2#include \u0026lt;stdio.h\u0026gt; 3#include \u0026lt;sys/time.h\u0026gt; 4#include \u0026lt;string.h\u0026gt; 5#include \u0026lt;unistd.h\u0026gt; 6#define MAX 10 7int test_multiple_threads_R_and_S = 10; 8void *set_thread(void *) 9{ 10 int i; 11 for(;;){ 12 ++test_multiple_threads_R_and_S; 13 sleep(2); 14 if( test_multiple_threads_R_and_S \u0026gt;= 20){ 15 pthread_exit(NULL); // 测试退出子线程. 16 } 17 } 18} 19 20void *read_thread(void *) 21{ 22 int i; 23 for(;;){ 24 printf(\u0026#34;the value of test is %d\\n\u0026#34;, test_multiple_threads_R_and_S); 25 sleep(1); 26 } 27} 28 29int main(int argc, const char *argv[]) 30{ 31 int i = 0; 32 int ret = 0; 33 pthread_t id1,id2; 34 35 ret = pthread_create(\u0026amp;id1, NULL, set_thread, NULL); 36 if(ret) 37 { 38 printf(\u0026#34;Create pthread error!\\n\u0026#34;); 39 return 1; 40 } 41 42 ret = pthread_create(\u0026amp;id2, NULL, read_thread, NULL); 43 if(ret) 44 { 45 printf(\u0026#34;Create pthread error!\\n\u0026#34;); 46 return 1; 47 } 48 49 pthread_join(id1,NULL); 50 pthread_join(id2,NULL); 51 52 return 0; 53} 直接运行上述代码可能会出现报错对‘pthread_create’未定义的引用, 可以参考[codeblocks 多线程编程时出现：对pthread_create未定义的引用，解决方法]中的方法进行调试.\n如果上述程序运行理想的话, 运行结果应该如下.\n写入线程运行到将test变量增加到20之后, 被kill. 读线程正常运行直到主进程结束. (此时需要了解进程线程之间的关系, 以及程序中的线程进程的生命周期.\n到此测试结束, 运行成功.\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/ubuntu%E4%B8%8B%E4%BD%BF%E7%94%A8codeblocks%E8%BF%9B%E8%A1%8C%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/","section":"post","tags":["C++","Ubuntu","多线程"],"title":"Ubuntu下使用CodeBlocks进行多线程编程"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/","section":"tags","tags":null,"title":"多线程"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/apache/","section":"tags","tags":null,"title":"Apache"},{"body":"龙云尧个人博客，转载请注明出处。\nCSDN地址：http://blog.csdn.net/Michael753951/article/details/78861876\n个人blog地址：http://yaoyl.cn/guan-yu-apache-httpd-2-2-15-de-bu-fen-lou-dong-xiu-fu-jian-yi/\n修复Apache HTTP Server畸形Range和Range-Request选项处理远程拒绝服务漏洞 该漏洞有如下几种修补方法\n方式1： 升级Apache httpd至2.2.21及以上版本\n##方式2： 可以从官网下载补丁包，重新打包编译Apache。\n##方式3：\n修改httpd.conf文件（一般位于/usr/local/apache2/conf/httpd.conf，具体视安装Apache时的配置而定），相关配置参考Apache官方关于该漏洞的修复建议，（绿盟也有对官方建议的中文翻译 ，不过翻译并不准确，不建议参考），这里使用官方建议的修复方式2\nStep1. 引入mod_rewrite和mod_headers模块，这里去掉两个模块的默认的注释即可\nStep2. 在正文部分引入如下配置（配置说明：Range:标头中超过5个范围时即拒绝请求，并且总是丢弃Request-Range，因为是旧版的）\n1\u0026lt;IfModule rewrite_module\u0026gt; 2\u0026lt;IfModule mod_headers\u0026gt; 3 # Reject request when more than 5 ranges in the Range: header. 4 # CVE-2011-3192 5 # 6 RewriteEngine on 7 RewriteCond %{HTTP:range} !(^bytes=[^,]+(,[^,]+){0,4}$|^$) [NC] 8 RewriteRule .* - [F] 9 10 # We always drop Request-Range; as this is a legacy 11 # dating back to MSIE3 and Netscape 2 and 3. 12 # 13 RequestHeader unset Request-Range 14\u0026lt;/IfModule\u0026gt; 15\u0026lt;/IfModule\u0026gt; Step3： 重启Apache httpd\n修复目录遍历漏洞 通过修改conf目录下的httpd.conf文件来禁止使用目录索引。（参考自知乎专栏 《目录遍历漏洞》 ）\nStep1： 打开httpd.conf文件（一般位于/usr/local/apache2/conf/httpd.conf，具体视安装Apache时的配置而定）\nStep2： 将Options Indexes FollowSymLinks中的Indexes删除更改为Options FollowSymLinks，这样web目录下的所有目录都不再生成索引。\nStep3： 重启Apache httpd\n修复HTTP慢连接拒绝服务攻击漏洞 建议使用mod_reqtimeout和mod_qos两个模块相互配合来防护。这部分通过修改httpd.conf完成（一般位于/usr/local/apache2/conf/httpd.conf，具体视安装Apache时的配置而定）。参考自《缓慢的http拒绝服务攻击》\nStep1： mod_reqtimeout用于控制每个连接上请求发送的速率。配置如下：\nStep1.1 首先去掉引入默认注释的mod_reqtimeout\nStep1.2 在代码正文开始或者结束部分加入如下代码。（代码说明：请求头部分，设置超时时间初始为20秒，并在收到客户端发送的数据后，每接收到500字节数据就将超时时间延长1秒，但最长不超过40秒。可以防护slowloris型的慢速攻击。请求正文部分，设置超时时间初始为10秒，并在收到客户端发送的数据后，每接收到500字节数据就将超时时间延长1秒，但最长不超过40秒。可以防护slow message body型的慢速攻击。需注意，对于HTTPS站点，需要把初始超时时间上调，比如调整到20秒。）\n1\u0026lt;IfModule reqtimeout_module\u0026gt; 2 RequestReadTimeout header=20-40,MinRate=500 3 RequestReadTimeout body=10-40,minrate=500 4\u0026lt;/IfModule\u0026gt; Step2： mod_qos用于控制并发连接数。配置如下：\nStep2.1 首先检查modules目录下，是否有mod_qos.so文件，如果有，则去掉httpd.conf中对LoadModule qos_module modules/mod_qos.so行的注释，引入该模块，并且跳过Step2.2进入Step2.3。\nStep2.2 如果modules目录下没有mod_qos.so文件，则需要手动引入，指令如下（Linux环境下），参考《Apache mod_qos模块安装与配置》 。\n1# 1.下载qos模块（该指令中模块版本为文档撰写时的最新版本，实际操作可以稍作修改） 2wget http://jaist.dl.sourceforge.net/project/mod-qos/mod_qos-11.45.tar.gz 3# 2.解压 4tar -zxvf mod_qos-11.45.tar.gz 5# 3.安装 6cd mod_qos-11.45 7cd apache2/ 8/usr/local/apache2/bin/apxs -i -c mod_qos.c #编译指令，将.c文件编译成.so文件，具体文件路径请按照系统实际路径修改 9# 4.检查/usr/local/apache2/modules目录下面是否多了mod-qos.so文件 10# 5.回到apache2/conf修改httpd.conf，头文件中增加如下一行 11LoadModule qos_module modules/mod_qos.so 12引入qos_module模块。 Step2.3 在httpd.conf正文中添加一行，引入qos配置文件。\n1Include conf/extra/qos.conf Step2.4 进入apache2/conf/extra，新建qos.conf文件，输入以下配置信息。\n1 2# maximum number of active TCP connections is limited to 896 (limited 3# by the available memory, adjust the settings according to the used 4# hardware): 5MaxClients 400 6 7# idle timeout: 8Timeout 20 9 10# keep alive (for up to 85% of all connections): 11KeepAlive on 12MaxKeepAliveRequests 60 13KeepAliveTimeout 3 14QS_SrvMaxConnClose 85% 15 16# name of the HTTP response header which marks preferred clients (this 17# may be used to let the application decide which clients are \u0026#34;good\u0026#34; and 18# have higher privileges, e.g. authenticated users. you may also use 19# the QS_VipUser directive when using an Apache authentication module such 20# as mod_auth_basic or mod_auth_oid): 21QS_VipIPHeaderName mod-qos-login 22 23# enables the known client prefer mode (server allows new TCP connections 24# from known/good clients only when is has more than 716 open TCP connections): 25QS_ClientPrefer 80 26 27# minimum request/response speed (deny slow clients blocking the server, 28# e.g. defending slowloris) if the server has 500 or more open connections: 29QS_SrvMinDataRate 120 1500 500 30 31# and limit request line, header and body: 32LimitRequestLine 7168 33LimitRequestFields 30 34QS_LimitRequestBody 102400 35 36# don\u0026#39;t allow more than 30 TCP connections per client source address if 37# 500 connections are open to the server: 38QS_SrvMaxConnPerIP 30 500 39 40# block clients violating some basic rules frequently (don\u0026#39;t allows more than 20 41# violations within 5 minutes): 42QS_ClientEventBlockCount 20 300 43QS_SetEnvIfStatus 400 QS_Block 44QS_SetEnvIfStatus 401 QS_Block 45QS_SetEnvIfStatus 403 QS_Block 46QS_SetEnvIfStatus 404 QS_Block 47QS_SetEnvIfStatus 405 QS_Block 48QS_SetEnvIfStatus 406 QS_Block 49QS_SetEnvIfStatus 408 QS_Block 50QS_SetEnvIfStatus 411 QS_Block 51QS_SetEnvIfStatus 413 QS_Block 52QS_SetEnvIfStatus 414 QS_Block 53QS_SetEnvIfStatus 417 QS_Block 54QS_SetEnvIfStatus 500 QS_Block 55QS_SetEnvIfStatus 503 QS_Block 56QS_SetEnvIfStatus 505 QS_Block 57#QS_SetEnvIfStatus QS_SrvMinDataRate QS_Block 58QS_SetEnvIfStatus NullConnection QS_Block Step3： 重启Apache httpd\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/%E5%85%B3%E4%BA%8Eapache-httpd-2.2.15%E7%9A%84%E9%83%A8%E5%88%86%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E5%BB%BA%E8%AE%AE/","section":"post","tags":["运维","Apache"],"title":"关于Apache HTTPD 2.2.15的部分漏洞修复建议"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/categories/%E8%BF%90%E7%BB%B4/","section":"categories","tags":null,"title":"运维"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E8%BF%90%E7%BB%B4/","section":"tags","tags":null,"title":"运维"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E5%8D%8E%E4%B8%BA/","section":"tags","tags":null,"title":"华为"},{"body":"华为面试整体流程大致分为笔试，性格测试，面试，综合面试，回学校等结果。笔试来说，华为的难度较中等，选择题难度和网易腾讯差不多。最后的代码题，相比下来就简单很多，一共3道题目，前2题很容易就AC，题目已经记不太清楚，不过难度确实不大。最后一题最后提交的代码过了75%的样例，一直没有发现剩下的25%可能存在什么坑。\n笔试部分太久远，我就不怎么回忆了。直接将面试。\n面试 如果说腾讯的面试是挥金如土（毕竟每个面试官都配了一件单独的房间），那华为就是戒奢宁俭。两个大会议厅坐满了面试官，其中一个是初面面试区，另一边是综合面试区。初面区的面试官会来等待区一个一个叫我们过去面试。\n面试桌采取一对一的形式，技术岗的面试通知短信虽然没有通知说要带简历，但是仍然带了一份以免中途需要。（事实证明这是一个明智的选择）\n初面 初面面试官点到我的名字之后，我跟着面试官去他的那个位置。\n面试流程和大多数互联网公司流程差不多，首先让自己介绍一个比较满意的项目。（可能想通过这个项目了解我们的技能程度）在我面试准备时，其实我就纠结过这个问题。因为在我的项目中，有两个项目是我比较满意的，第一个主要做后台，第二个主要做虚拟环境和数据交互。\n“我有两个项目是比较满意的”，我先抛出这句话，希望面试官能够给机会让我将两个项目都讲一下，“我先讲一下第一个我们当时做的换课平台，当时本来是一个课程项目，但是我们在这个课程项目之上，结合当时校内急需换课这个需求，做出了这么一个换课平台”,（首先提出项目目的），“然后这个项目大概实现了一个怎样怎样的功能”（抛出产品功能），“我在项目中主要负责后台开发和数据库交互功能”（说下在项目中的角色），“整个项目的架构大致如下。。。。”（项目如何实现），我拿着纸笔在草稿上给面试官画着后台所有的系统架构和数据流动方式，同时将涉及到的重要点的技术点都说了下。\n按照之前整理过的描述流程，我将整个换课平台项目描述了一遍，中途偶尔面试官会问一下技术细节，不过都不是很难，可能因为我没有使用“SSH”三大框架，而是使用纯JSP进行的底层开发，所以面试官也不是太好提问。\n不过有意思的是，在我介绍到项目中实现了实时聊天的时候，面试官提了两个小问题，是我之前项目中没碰到，而实际生产产品中可能遇到的问题：第一，我们的实时聊天是直接P2P，这样需要双方在同一子网下，那如果现在双方不在同一子网下，外网某个移动端客户A可以访问后台服务器B，这时候某个web端C同时也可以访问服务器，这个时候A和C是互相不同的，现在如果我们仍然想让他们通信怎么办；第二，考虑大量用户同时访问后台服务器的时候，该如何处理。\n第一个我首先考虑到用服务器作为中介，但是当时老是想着可能打两个聊天信息会对服务器造成压力，所以一直很犹豫要不要用后台服务器作为中转，以及，作为中转该如何操作。不过面试官稍微提醒我可以用服务器作为中转，这时候我突然意识到只要服务器收到之后，立刻将消息转发出去就可以了，不用走数据库。这时候我也才一直到为什么我以前分析微信的聊天服务时，会将所有的文本消息和图片消息发送到微信的后台服务器，而且简单的直接P2P对话，主要还是为了克服网络问题\n第二个不难，考虑云计算中的负载均衡，我大致说了下思路，选取一台主机作为负载均衡调度机，其他的作为工作机即可。\n第一个项目大概讲了十分钟，不知道是因为刚开始面试还是我项目确实对面试官的胃口。\n第一个项目完了以后，面试官翻了下我的简历，“你要不说下你另一个项目？”我有blabla说了一通。\n“有什么难点？”“项目中遇到过哪些问题？”\n说完之后，初面基本也就结束了，整个过程十分和谐（可能我遇到的面试官比较nice）。最后让我提一个问题，我大概问了下投递的这个岗位今后具体会是什么工作，面试官大致给我讲了下。（我投递的云计算开发岗，PaaS方向）\n综合面试 初面完之后，面试官指引我去综合面试区等待综合面试。\n综合面试整体感觉和初面差不多，不过在综合面试阶段面试官首先问了我的籍贯，工作意向和理想的工作地点。\n这里我表示并不挑，因为作为一个外省人，自从一个人出省读书以后，就已经对在哪生活在哪上班没有太多顾虑。\n接着面试官问了我一些成绩怎样，家庭情况之类问题之后，开始问我的项目经验。（虽然我不太明白，为什么综合面试还会问初面中问过的关于项目经验的问题）这里我就不在重复了，何处是一样，我大致和面试官交流了一下我们的项目内容。\n这一块内容完成之后，感觉综合面试整个流程已经基本结束了，面试官开始跟我介绍他们项目组的工作地点（深圳），工作内容，以及平常的一些工作，同时还给我介绍了一些将来工作中需要了解的基本知识——比如docker容器，k8s，部分国内国外的公有云的运行原理，让我回去之后提前自学一下。（到这里我开始感觉有戏了）\n其实，综面和初面差别其实没有太大，不过感觉这还是和面试官有关系，因为在我同行的队友中，他们有的就被问到了一些比较底层的知识点比如Java有什么特点之类，也有被问及面向对象的优点等等（这些我都没被问到）。\n综述 总的来说，其实华为的面试并没有我想象中的困难（因为听说华为今年缩招，我还以为面试会故意很难）。简历准备很重要， 尤其是项目经历，个人blog，github这类容易加分的内容，最好能够写出来。两场面试相比较同伴更加顺利，有一定程度上就是简历给我加了分。\n因为我面试的是云计算开发岗，所以我在项目中重新添加了很多Java相关的项目经历，虽然不是很重要，但是至少能让面试官从中了解我在Java方面有不少经验。\n面试时候不用太紧张，在之前腾讯面试中我就明显很紧张，脑子一片发蒙，而这次华为面试就感觉稍微舒服很多，不知道是因为已经经历过几次面试，还是因为面试官带动的比较好。\n最后还挺重要的要能够及时清楚地描述自己想说的内容。毕竟将来工作岗位中，少不了和同事的交流。另外清晰的描诉对面试官了解你，了解你的项目会很有帮助。因此，不论是在给面试官讲述自己项目的时候，还是在回答面试官问题，亦或是想表达自己观点的时候，都需要清晰的表达。如果一时语塞，可以尝试停顿一下，整理下思路然后重新描述，只要面试官能够理解你的话，一般有些停顿是不会有什么大碍。\n最后的最后，希望能够收到华为的offer吧_(:зゝ∠)_目前正在“排队待录取”中。\n更新：\n10月10号面试 10月17日收到进入资源池通知 10月24日收到offer短信，通知27日签约（估计是两方协议）。 27日签约，同时决定结束持续了6个月的备考生活，准备工作。 ","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/%E5%8D%8E%E4%B8%BA%E5%88%9D%E9%9D%A2+%E7%BB%BC%E5%90%88%E9%9D%A2%E8%AF%95%E6%8A%80%E6%9C%AF%E9%9D%A2/","section":"post","tags":["面经","华为","校招"],"title":"华为初面+综合面试（技术面）"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E6%A0%A1%E6%8B%9B/","section":"tags","tags":null,"title":"校招"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E9%9D%A2%E7%BB%8F/","section":"tags","tags":null,"title":"面经"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/categories/%E9%9D%A2%E8%AF%95/","section":"categories","tags":null,"title":"面试"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E8%85%BE%E8%AE%AF/","section":"tags","tags":null,"title":"腾讯"},{"body":"腾讯笔试因为比较久远，而且最后的代码题没有成功AC，所以已经记不太清楚。这里主要讲一下面试经历吧。\n（听说鹅厂的简历关和笔试关都很松，几乎不卡人。这大概是我认为已经失败的情况下依然受到面试通知的原因吧。）\n面试 鹅厂的初试其实还是比较面向学生的，可能考虑到在校生没有接触太多工程项目，一般都是简单问一下项目经历，然后开始问智力题和简单编程题。\n面试之前我还是准备了挺久，看了不上网上关于腾讯面试的面经，看了很多以前的面试题，大致准备的内容如下吧。\n[外链图片转存中...(img-ACk3dKWt-1595021180397)]\n图片来自抱团面试小队。\n然而在我面试的时候，上面问题全部没有问到。。。可能是我最后花费的时间太长，表现的不好，面试官对我兴趣不大。也有可能是不同面试官问的问题不一样（因为小队里，有人面试鹅厂的被问到了该图中某几个问题）。\n项目经历 项目经历这一块，个人感觉其实还是很重要的。因为在面试官和你开始讲话之前，ta对你可以说没有一点了解，你擅长什么，你做过什么，你能做什么，你团队能力之类的怎样，这些都是需要通过你的项目经历来了解的。\n因为我在以前网易实习面试中，吃过项目经历删减太多，导致最后面试官已经没问题可问的尴尬。这次面试中我将大三之后，不是很水的项目经历，比赛经历，实验室项目经历都写在了简历上。一共一页半（本来是两页，不过删掉了半页感觉太水的项目）。\n到达酒店扫码签到之后，等待面试短信告知面试地点在哪（鹅厂还是挺壕的，一个面试官包了一个房间）。\n上去首先递上自己的简历。面试官开始询问我的项目经历，我投的是后台开发岗位，所以讲的是大三下的时候，和3个小伙伴做的一个换课系统。我大致讲述了一下整个项目的创建目的，实现的功能（这部分我拿笔在草稿上将设备的部署，设备之间的连接以及通信方式全部画出来，以便解释说明，个人觉得这是个好习惯），以及在整个项目中的难点和个人承担的角色。\n面试官一边听我讲诉，中途会偶尔插一两句话，比如某个功能是怎样实现，以及这个功能实现的时候是否有什么难点和在实现这个项目的时候担任了什么功能。不过总体不是很难。\n不知道是因为面试官对我的项目兴趣不大，或者对我负责的这一块不是很了解。这一部分面试官问的比较少。\n智力题 接下来是智力题。是我很不擅长的数字推理题。题目我在后来找到了原题，大致如下：\nAB两男士女奇问C女士年龄，C女士将给出11个可能答案，35，36，38，42，45，46，51，55，57，61，62。\nC女士将十位数告诉A，将个位数告诉B A男士说，我不知道C女士年龄，我想B也不知道。 B男士说，原本我不知道C女士年龄，但现在知道了。 A男士说现在我也知道了\n请问C女士年龄多少\n题目大致如此，我思考了一会，没有头绪，于是口头向面试官表示暂时可能解不出来，然后又大致讲了一下当前我已经思考到哪，以及我当前的推理逻辑。面试官听了一会，点了一下，然后开始让我做简单的代码实现题。\n这时候我开始有点紧张了，因为担心这一关是不是没有发挥好，或者是否哪里有逻辑漏洞。\n简单代码题 题目确实很简单。\n面试官从她的题库中挑选了两道题目，第一道题目是看代码让我描述这段代码的功能，以及生么样的输入会带来什么样的输出。感觉实在考验我们的代码阅读能力。整段代码不长，30行左右，大致功能是将一个long型十进制整数转成字符串，然后逐位取出，统计该位出现次数，如果为3就会有特定输出。就是一个简单的桶排思想，认真看懂的话不难。\n第二道题是编程题，面试官让我实现一个功能函数，输入一个字符数组的头指针，让我实现一个功能函数将字符数组中的空格全部去掉。\n很简单吧？然而我想复杂了。\n太久没有写这种很基础的功能函数，加上有些紧张，我当时想的越来越复杂，以至于最后想出来的方法是开辟一个bool型的标志数组标识当前位是否为空格，然后重新开辟一个数组空间，将传入的字符串一个一个字符数组遍历一次，如果是空格就跳过，如果不是就取出来放进新的数组空间，最后free掉指针指向的以前的数组空间，重新指向当前开辟的新空间。\n其实这是一种舍近求远的想法，这种思路直接让本来码代码就不是很快的我写了差不多十分钟才写完（感觉面试官已经等的有点不耐烦），最后实现的代码量也是很冗长，同时其实最后还是有bug。函数中new的数组空间在返回后是会被del掉了（这部分栈空间被回收掉了），这样我们操作完成的数组其实已经不存在了，原始数组也不存在了。但是当时我想法太乱，明明知道会有这种问题，但还是硬着头皮写了。\n写完面试官让我分析代码的时间复杂度和空间复杂度，然后问我还有什么问题想提问的，便让我回去等通知。\n回来的路上，我和朋友一起回学校的时候，才想起来，明明去空格可以很简单的实现，只需将原数组中非空格的字符向前移动，直到遍历完成，然后手动添加\\0结束就行了，只是我当时想的太复杂。\n1void del_blank_space(char* pStr){ 2\tchar *temp = pStr; 3\twhile(*temp){ 4\tif(*temp == \u0026#39; \u0026#39;) {++temp; continue;} 5\t*pStr++ = *temp++; 6\t} 7\t*pStr = \u0026#39;\\0\u0026#39;; 8} 就这么简单，然而我当时脑子蒙了。鹅厂面试也就只能草草收场。\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/%E8%85%BE%E8%AE%AF%E5%88%9D%E8%AF%95%E6%8A%80%E6%9C%AF%E9%9D%A2/","section":"post","tags":["面经","腾讯","校招"],"title":"腾讯初试（技术面）"},{"body":"由于之前准备不充分，没有做大量的编程练习，在实际编程过程中算法设计出现疏漏，最终导致结果没有AC。\n题目很简单，字符串编码问题。 一个长度不超过6的字符串，内部不会重复且所有字母已经按照字典序排好。接下来按照字典序从短到长对这些字符串进行编码，接下来让你输入一个字符串，输出对应的编码即可。 eg: a为1，z为26，ab为27，az为51，bc为52。。。\n思路和之前在牛客网做过的编码题类似，跳过某些的字符串，直到定位到该字符串为止。\n举个例子：\n字符串为forx。它跳过了所有的长度为1，长度为2，长度为3的字符串，以及所有长度为4的字符串中ae开头的，fgfn开头的，fop~foq开头的字符串。最后检查从fors到forx的序号就行了。\n刚开始思路出了点问题，跳过的过程中，我跳过了fa~fn这类包括了fa但是不可能出现的情况，结果导致最后的算法出来的结果并不如意，并且一直很异常。直到笔试结束，我也没及时跳出这个坑。\n笔试结束后我重新审查我的算法才发现了这个bug，并最终解决。最终的代码如下：\n1#include \u0026lt;iostream\u0026gt; 2using namespace std; 3int C_a_b(int a, int b){ 4\tif(b == 0) return 0; 5\tint result = 1, num = a; 6\twhile(num\u0026gt;(a-b)) 7\tresult *= num--; 8 9\tnum = b; 10 11\twhile(num\u0026gt;0) result /= num--; 12\treturn result; 13} 14int main() 15{ 16\tint N, len, number = 0; 17\tstring input_str; 18\tcin \u0026gt;\u0026gt; N; 19\twhile(N--){ 20\tnumber = 0; 21\tcin \u0026gt;\u0026gt; input_str; 22\tlen = input_str.length(); 23 24\tif(len == 1){ 25\tcout \u0026lt;\u0026lt; input_str[0] -\u0026#39;a\u0026#39; + 1 \u0026lt;\u0026lt; endl; 26\tcontinue; 27\t} 28\t29\t// 跳过所有长度小于该字符串的数目 30\tfor(int i = 1; i\u0026lt;len; ++i){ 31\tnumber += C_a_b(26, i); 32\t} 33 34\t// 逐次跳过，eg：forx，首先跳过a开头的到e开头的所有长度为4的字符串（C_25_3累加到C_21_3） 35\t// 然后跳过fg开头到fn的所有长度为3的字符串（C_19_2累加到C_12_2） 36\t// 然后跳过fop到foq（C_10_1累加到C_9） 37\tfor(int i = len-1, j = 25; i\u0026gt;0; --i){ 38\tfor(; j != \u0026#39;z\u0026#39; - input_str[len-i-1]; j--){ 39\tnumber += C_a_b(j, i); 40\t} 41\tj--; 42\t} 43\t// 将最后一位的值算出来。eg：forx，则先算出从fors开始计数到forx时，对应的值 44\tnumber += (input_str[len-1] - input_str[len-2]); 45 46\tcout \u0026lt;\u0026lt; number \u0026lt;\u0026lt; endl; 47\t} 48} 目测应该没够ac。特殊测试样例为a，z，ab，az，bc（和前面样例差一），bz，yz，abc（和前面样例差一），abz，acd（和前面样例差一）\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/2018%E7%BD%91%E6%98%93%E6%A0%A1%E6%8B%9B%E8%BF%90%E8%90%A5%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%BC%96%E7%A8%8B%E7%AC%AC%E4%B8%80%E9%A2%98/","section":"post","tags":["面经","网易","校招","C++"],"title":"2018网易校招运营开发工程师编程第一题"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E7%BD%91%E6%98%93/","section":"tags","tags":null,"title":"网易"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/opengl/","section":"tags","tags":null,"title":"OpenGL"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E8%99%9A%E6%8B%9F%E9%A9%BE%E9%A9%B6/","section":"tags","tags":null,"title":"虚拟驾驶"},{"body":"龙云尧个人博客，转载请注明出处。\nCSDN地址：http://blog.csdn.net/michael753951/article/details/75074051\n个人blog地址：http://yaoyl.cn/huan-jing-da-jian-si-2/\n障碍物移动的改进 在之前的版本中.我们的障碍物移动和场景移动放在同一个for循环中,虽然减少了代码的操作,但是很容易出现边界问题,程序运行中往往会出现障碍物骤现,或者障碍物还未抵达车前方便突然消失的情况,为了修改这出bug,我将重写这部分代码.\n需求分析 无脑写代码的多数结果都是bug不断,并且写完后文就忘记前文.为了提高代码的清晰度和准确性,挺尸帮我们捋清思路,我们先通过写伪代码的方式整理一下我们的程序有哪些需求,以及粗略的实现方式.\n需求 障碍物能够从左侧楼栋出现,到达路中央之后,将停留一小段时间(等待车撞上).\n对这个过程进行分解分析,我们可以大致得到如下流程:\n障碍物出现的时机: 左侧有障碍物 \u0026amp; 距离上次消失已经有10s以上 障碍静止时机: 已经达到路中间, 并且停留时间没有达到2s 障碍物消失诗句时机: 停留2s之后,障碍物消失 伪代码 首先判断障碍物是否已经消失,然后判断左侧是否有障碍物,然后检查消失时间是否已经达到10s,如果满足条件,就更新appear标志, 让障碍物开始移动 开始步进障碍物, 直到达到边界, 此时更新appear_tmp, 更新appear标志, 记录下当前时间 如果当前状态为静止, 并且停留时间还未到达2s,保持pos不变 否则如果停留时间超过2s,就将appear更新为消失, 让障碍物消失, 同时用appear_tmp记录下消失的时间, 方便之后判断障碍物的出现时机 代码实现 1 // 先获取左侧建筑情况 2 int left_temp = building_left_flag; 3 // bdw_appear有3个值, 0表示已经消失, 1表示正在进行移动, 2表示移动到边界,已经静止 4 if(bdw_appear == 0) { 5 if(left_temp \u0026gt;\u0026gt; 11 \u0026amp; 0b1 == 1) { 6 time(\u0026amp;appear); 7 // 如果距离上次出现已经5s,就更新记录,同时更新flag 8 if(appear - appear_tmp \u0026gt;= 5){ 9 appear_tmp = appear; 10 bdw_appear = 1; 11 } 12 } 13 }else if(bdw_appear == 1){ 14 glBindTexture(GL_TEXTURE_2D, texture[4]); 15 glLoadIdentity(); 16 glTranslatef(child_run_len, -1.0f, -7.0f); 17 glCallList(children); 18 if(child_run_len \u0026gt;= -0.5) { 19 //child_run_len = -3.0f; 20 //bdw_appear = false; 21 // 刚移动到边界 22 if(bdw_appear == 1){ 23 time(\u0026amp;appear_tmp); 24 child_pos = -7.0f; 25 bdw_appear = 2; 26 } 27 child_run_len = -0.5f; 28 }else{ 29 // 小孩的速度恒定 30 child_run_len += 0.1f; 31 } 32 }else{ 33 time(\u0026amp;appear); 34 // 如果距离上次出现已经5s,就更新记录,同时更新flag 35 if(appear - appear_tmp \u0026gt;= 2){ 36 appear_tmp = appear; 37 child_run_len = -3.0f; 38 bdw_appear = 0; 39 }else{ 40 glBindTexture(GL_TEXTURE_2D, texture[4]); 41 glLoadIdentity(); 42 // 障碍物的pos还要加上run_len, 这样能够让障碍物在达到路中央静止之后, 和周围物体一起移动,产生向人靠近的感觉 43 glTranslatef(child_run_len, -1.0f, child_pos+run_len); 44 glCallList(children); 45 } 46 } 实现障碍物从两侧随机出现 为了和真实驾驶更加相似,我们不应该让障碍物只从单侧出现,而是因该让其两侧都有可能出现.因此,我们需要在原来的代码上进行进一步的修改.\n需求分析 需求 首先我们暂时让不倒翁的出现有两种情况, 情况一, 从左侧出现, 情况二, 从两侧随机出现. 通过按键'c'来控制模式的转换(改变appear_mode的值).\n因此, 当我们按下'c'键时, 需要对模式进行转换. 接下来在DrawGLScene中将根据appear_mode的值进行一系列操作. 如果appear_mode为默认的0, 就让障碍物从左侧出现, 如果appear_mode为1, 就让障碍物从两侧出现.\n如果障碍物从两侧出现的话, 每次障碍物将要出现的时候, 我们需要用一个flag标志保存障碍物本次出现是从左侧出现还是右侧出现. 在绘制障碍物的时候, 我们将通过这个flag来判断物体是如何运动.\n障碍物出现的时机: 本身已经消失, 距离上次消失已经有10s以上, 决定好从哪一侧出现, 并且该侧有楼栋 障碍物移动的时机: 本身已经出现, 根据上一步已经得到的flag判定是向左还是向右, 直到到临界点 障碍物静止的时机: 已经达到路中间,并且停留时间并未超过2s 障碍物消失的时机: 已经静止超过2s 伪代码 首先我们需要在KeyPressed函数中, 添加按键'c'的控制事件, 另其对appear_mode进行修改. 接下来在DrawGLScene中, 我们将对这个appear_mode进行判断. 如果appear_mode为0,就按照之前的代码执行. 如果appear_mode为1, 则进入两侧出现事件. 当appear_mode为1时, 如果当前状态为消失, 如果当前已经消失10s以上, 则随机决定在哪应该出现障碍物, 然后检查该侧是否有楼栋, 如果有楼栋, 则保存裁决位置(左或者右), 同时更新当前状态为移动 当appear_mode为1时, 当前状态为移动时, 根据裁决, 如果裁决决定从左侧出来, 则起点设置为左侧, 同时,不断增加child_run_len,直到到达边界; 如果裁决决定从右侧出来, 则起点设置为1.0f位置, 同时不断减小, 直到到达-0.5f位置停止. 停止时, 将appear_mode设置为2, 记录开始时间, 在原地停留两秒之后, 消失. 代码实现 1 int left_temp = building_left_flag; 2 int right_temp = building_right_flag; 3 if(appear_mode == 0) { 4 // bdw_appear有3个值, 0表示已经消失, 1表示正在进行移动, 2表示移动到边界,已经静止 5 if(bdw_appear == 0) { 6 if(left_temp \u0026gt;\u0026gt; 11 \u0026amp; 0b1 == 1) { 7 time(\u0026amp;appear); 8 // 如果距离上次出现已经5s,就更新记录,同时更新flag 9 if(appear - appear_tmp \u0026gt;= 5) { 10 appear_tmp = appear; 11 bdw_appear = 1; 12 child_run_len = -3.0f; 13 } 14 } 15 } else if(bdw_appear == 1) { 16 glBindTexture(GL_TEXTURE_2D, texture[4]); 17 glLoadIdentity(); 18 glTranslatef(child_run_len, -1.0f, -7.0f); 19 glCallList(children); 20 if(child_run_len \u0026gt;= -0.5) { 21 //child_run_len = -3.0f; 22 //bdw_appear = false; 23 // 刚移动到边界 24 if(bdw_appear == 1) { 25 time(\u0026amp;appear_tmp); 26 child_pos = -7.0f; 27 bdw_appear = 2; 28 } 29 child_run_len = -0.5f; 30 } else { 31 // 小孩的速度恒定 32 child_run_len += 0.1f; 33 } 34 } else { 35 time(\u0026amp;appear); 36 // 如果距离上次出现已经5s,就更新记录,同时更新flag 37 if(appear - appear_tmp \u0026gt;= 2) { 38 appear_tmp = appear; 39 child_run_len = -3.0f; 40 bdw_appear = 0; 41 } else { 42 glBindTexture(GL_TEXTURE_2D, texture[4]); 43 glLoadIdentity(); 44 glTranslatef(child_run_len, -1.0f, child_pos+run_len); 45 glCallList(children); 46 } 47 } 48 }else if(appear_mode == 1) { 49 if(bdw_appear == 0) { 50 time(\u0026amp;appear); 51 if(appear - appear_tmp \u0026gt;= 5){ 52 // 奇数为左侧, 偶数为右侧 53 if(rand() \u0026amp; 0b1 == 1) { 54 if(left_temp \u0026gt;\u0026gt; 11 \u0026amp; 0b1 == 1) { 55 time(\u0026amp;appear); 56 appear_tmp = appear; 57 bdw_appear = 1; 58 left_or_right_flag = 1; 59 child_run_len = -3.0f; 60 } 61 }else{ 62 if(right_temp \u0026gt;\u0026gt; 11 \u0026amp; 0b1 == 1) { 63 time(\u0026amp;appear); 64 appear_tmp = appear; 65 bdw_appear = 1; 66 left_or_right_flag = 0; 67 child_run_len = 1.0f; 68 } 69 } 70 } 71 } else if(bdw_appear == 1) { 72 if(left_or_right_flag == 1){ 73 glBindTexture(GL_TEXTURE_2D, texture[4]); 74 glLoadIdentity(); 75 glTranslatef(child_run_len, -1.0f, -7.0f); 76 glCallList(children); 77 if(child_run_len \u0026gt;= -0.5) { 78 //child_run_len = -3.0f; 79 //bdw_appear = false; 80 // 刚移动到边界 81 if(bdw_appear == 1) { 82 time(\u0026amp;appear_tmp); 83 child_pos = -7.0f; 84 bdw_appear = 2; 85 } 86 child_run_len = -0.5f; 87 } else { 88 // 小孩的速度恒定 89 child_run_len += 0.1f; 90 } 91 }else{ 92 glBindTexture(GL_TEXTURE_2D, texture[4]); 93 glLoadIdentity(); 94 glTranslatef(child_run_len, -1.0f, -7.0f); 95 glCallList(children); 96 if(child_run_len \u0026lt;= -0.5f) { 97 if(bdw_appear == 1) { 98 time(\u0026amp;appear_tmp); 99 child_pos = -7.0f; 100 bdw_appear = 2; 101 } 102 } else { 103 child_run_len -= 0.1f; 104 } 105 } 106 } else { 107 time(\u0026amp;appear); 108 // 如果距离上次出现已经5s,就更新记录,同时更新flag 109 if(appear - appear_tmp \u0026gt;= 2) { 110 appear_tmp = appear; 111 child_run_len = -3.0f; 112 bdw_appear = 0; 113 } else { 114 glBindTexture(GL_TEXTURE_2D, texture[4]); 115 glLoadIdentity(); 116 glTranslatef(child_run_len, -1.0f, child_pos+run_len); 117 glCallList(children); 118 } 119 } 120 } ","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/%E8%99%9A%E6%8B%9F%E9%A9%BE%E9%A9%B6%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%9B%9B/","section":"post","tags":["OpenGL","C++","虚拟驾驶"],"title":"虚拟驾驶环境搭建(四)"},{"body":"龙云尧个人博客，转载请注明出处。\nCSDN地址：http://blog.csdn.net/michael753951/article/details/75073755\n个人blog地址：http://yaoyl.cn/huan-jing-da-jian-san/\n移动场景的环境搭建 需要移动的场景主要集中在公路,草坪,楼房和障碍物.下面我将逐一实现它们的移动.\n公路以及草坪的移动 公路的移动较为简单,还记得我们在第一节中那个run_len变量么,在这里我们将使用它进行操作,已达到移动的效果.代码如下:\n1 /* 开始进行场景移动 */ 2 go_ahead_rate += go_ahead_ac; 3 /* 防止速度过快 */ 4 if(go_ahead_rate \u0026gt;= run_len_max) go_ahead_rate = run_len_max; 5 if(go_ahead_rate \u0026lt;= run_len_min) go_ahead_rate = run_len_min; 6 run_len += go_ahead_rate; 7 // 小孩的速度恒定 8 //child_run_len += 0.1f; 9 if(run_len \u0026gt;= 4.0f){ 10 run_len = 0.0f; 11 } 其中go_ahead_rate是一个步进长度,go_ahead_ac是步进加速度,用来模拟车辆的加速减速过程,以免车辆的加减速太过突然而失真.run_len_max用来限制车速的上下界.最后的if判断是为了当车辆运行到一块道路的边界的时候,将run_len归0模拟到达一块新的道路上继续行驶,这样能通过比较少的资源达到比较仿真的驾驶环境.\n到了这里,草地和楼房便能够正常的开始进行步进操作了.我们接下来开始移动楼房.\n楼房的移动 楼房的移动相比较场景的一动就就没有那么简单了.因为我们在第一节已经简单分析过,道路和草地的出现都是重复的,恒定的.而楼栋的出现是随机的,恒定的.\n使用run_len进行前进控制 道路和草地的移动中我们可以使用run_len在0.0~4.0之间不停的变换,所以道路和草地的真正移动距离是不会操作4.0的,而我们在设计场景的时候,又是使用12*12的方块填满的,为了让楼栋能够跨过这12个方块完成移动,我们就需要想一些特殊的办法.\n为了简化场景建设,我们让视野内,每栋楼占据的设计面积和道路的方块一致,因此道路单侧最多也只能有12栋楼层,举个例子,就算左侧楼栋不停的出现的话,最多也只能出现12栋楼,再出现新的楼栋的时候,距离自己最近的楼栋也会消失在自己的视野,使用这种方法能够比较简单的同时控制道路和楼栋的运动,即使用len_run进行控制,让他们保持同样的速度运动.\n好了我们已经设计成使用len_run对楼栋进行控制了,但是我们又知道run_len在0.0~4.0之间不停的变换,这也就意味着,如果我们没有进行什么特定操作,那么楼栋在移动一段距离(4.0)之后,又会回到起点(0.0)重新移动,这种画风并不是我们需要的结果,因此需要对其进行一定的控制.\n添加标志让楼栋完成移动 前一步骤中我们已经完成了楼栋简单的移动,但是楼栋并不能够跨过一个格子的长度.为了实现跨过格子的操作,我们需要添加一些标志位,用来记录当前这栋楼栋运行到了第几格,同时,每当run_len到达4.0,进行归0操作的时候,将标志位进行更新,让所有楼栋的的起点移动到下一个格子,这样当run_len增长的时候,就是从新的起点开始运动的,我们视觉上就会觉得,这栋楼没有间断的不停的向前走.\n这种格子移动操作和我们的位运算极其相似,因此我们可以使用一个int的后12位作为标志位,来标识楼栋的位置信息.这样能够让屏幕中同时显示多栋楼层,而且能够让所有楼层同时运动,并且不会显得很突兀.\n下面展示部分代码,首先是绘制楼栋的代码:\n1 2 // 绘制右边的楼栋 3 glBindTexture(GL_TEXTURE_2D, texture[3]); 4 int right_temp = building_right_flag; 5 for(int i = 0; i\u0026lt;12; ++i){ 6 if(right_temp \u0026amp; 0b1 == 1) { 7 glLoadIdentity(); 8 glTranslatef(2.0,-1.0f, ((12-i)*-4.0f)+run_len); // 移动绘点 9 glCallList(building2); 10 } 11 right_temp \u0026gt;\u0026gt;= 1; 12 } 然后对场景移动代码稍作修改,让楼栋移动一格.\n1 2 /* 开始进行场景移动 */ 3 go_ahead_rate += go_ahead_ac; 4 /* 防止速度过快 */ 5 if(go_ahead_rate \u0026gt;= run_len_max) go_ahead_rate = run_len_max; 6 if(go_ahead_rate \u0026lt;= run_len_min) go_ahead_rate = run_len_min; 7 run_len += go_ahead_rate; 8 // 小孩的速度恒定 9 //child_run_len += 0.1f; 10 if(run_len \u0026gt;= 4.0f){ 11 run_len = 0.0f; 12 // 提取12位 13 building_left_flag = (building_left_flag\u0026lt;\u0026lt;1) \u0026amp; 0b111111111111; 14 building_right_flag = (building_right_flag\u0026lt;\u0026lt;1) \u0026amp; 0b111111111111; 15 int rand_temp = rand(); 16 // 左边有一定概率出现一栋楼房 17 if(rand_temp%4 == 0) building_left_flag |= 1; 18 // 右边同样有一定概率出现一栋楼房 19 if(rand_temp \u0026gt;\u0026gt; 2 \u0026amp; 1) building_right_flag |= 1; 20 //child_run_len = -3.0f; 21 } 障碍物的移动 障碍物的移动相比起来就很简单了,直接放代码:\n1 // 绘制障碍物 2 int left_temp = building_left_flag; 3 if(left_temp \u0026gt;\u0026gt; 11 \u0026amp; 0b1 == 1) { 4 time(\u0026amp;appear); 5 if(appear - appear_tmp \u0026gt;= 5){ 6 appear_tmp = appear; 7 bdw_appear = true; 8 } 9 if(bdw_appear) { 10 // 同时控制左边的障碍物 11 //printf(\u0026#34;debug\\n\u0026#34;); 12 glBindTexture(GL_TEXTURE_2D, texture[4]); 13 glLoadIdentity(); 14 glTranslatef(child_run_len, -1.0f, -7.0f); 15 glCallList(children); 16 if(child_run_len \u0026gt;= -0.5) { 17 child_run_len = -3.0f; 18 bdw_appear = false; 19 }else{ 20 // 障碍物的速度恒定 21 child_run_len += 0.1f; 22 } 23 } 24 } 基本上到这里的时候,整个代码已经能够正常的运行起来,我们坐在一辆虚拟的车上不断的前进,偶尔会闪出一个障碍物挡在路中间.\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/%E8%99%9A%E6%8B%9F%E9%A9%BE%E9%A9%B6%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%89/","section":"post","tags":["OpenGL","C++","虚拟驾驶"],"title":"虚拟驾驶环境搭建(三)"},{"body":"龙云尧个人博客，转载请注明出处。\nCSDN地址：http://blog.csdn.net/michael753951/article/details/75073580\n个人blog地址：http://yaoyl.cn/huan-jing-da-jian-er/\n基本素材和环境的准备 显示列表 基本准备 显示列表部分的内容请先阅读\u0026lt;nehe学习笔记(九)\u0026gt;的\u0026quot;显示列表\u0026quot;部分.这里我就不再对代码进行一一解读了.\n为了适应本次实验的需求,我们需要对boxcol数组进行适当修改,将原本的正方体模型数组转修改长方体,其中,顶点的绘制准则在\u0026lt;nehe学习笔记(八)\u0026gt;中有绘图进行描述.\nBuildList函数填充 根据\u0026lt;nehe学习笔记(九)\u0026gt;中的内容,我们可以很清楚的知道显示列表的构建规则,本部分不多赘述.\n为了模拟一个比较真实的驾驶环境,我们需要绘制一条公路,公路两边需要有草坪以免过于空旷,需要有楼房以让障碍物的出现不会很突兀.最后,因为需要突然出现一个障碍物,所以我们需要准备一个障碍物.\n这些内容将在BuildList这个函数中完成,最终显示列表的表头存放在load中.渲染的时候,需要很很严谨的控制每个坐标点的位置,绘制完成之后最好能够显示出来以方便debug.\n载入纹理 在LoadGLTextures函数中,我们实现了载入图片的操作.值得注意的是,在选择纹理的滤波方式的时候,我们需要选择临近滤波GL_NEAREST.否则会在渲染道路的时候,出现图片边界过于突兀,影响实验效果的情况.\n举个例子,在加载道路的纹理时,代码如下:\n1 glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_NEAREST); // scale cheaply when image bigger than texture 2 glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_NEAREST); // scale cheaply when image smalled than texture 3 gluBuild2DMipmaps(GL_TEXTURE_2D, 3, image1-\u0026gt;sizeX, image1-\u0026gt;sizeY, GL_RGB, GL_UNSIGNED_BYTE, image1-\u0026gt;data); 到这里基本的素材准备就已经结束了,在DrawGLScene函数中进行合理设置,我们就能够预览整个实验环境了.\n基础环境绘制 公路以及草地绘制 为了模拟比较正常的驾驶环境,我们需要搭建一条公路,公路两侧的草地,并将楼栋放置在公路两侧.\n首先是绘制公路和草地.我们首选需要绘制整整条公路,使用一个for循环,向屏幕深处绘制12块道路贴图,这样能够尽可能让道路有无尽的感觉,同时,远方出现新的道路的时候,不会显得很突兀.你可以增加层数,比如将12增加至15甚至20,用来描绘更加真实的场景.\n接下来,我们需要在公路两侧进行扩展,经过测试,我发现绘制一个12*12个单位的草坪纹理时,场景看上去便已经较为正常,在下一步运动的时候便已经不会很突兀,当然,你也可以根据你自己的需要提高场景的草坪纹理数.\n公路和草地的绘制代码如下所示.run_len是在场景运动时需要用到的变量,这里你可以认为它的值为0.0.\n1 // 绘制公路 2 glBindTexture(GL_TEXTURE_2D, texture[0]); 3 for(int i = 0; i\u0026lt;12; ++i){ 4 glLoadIdentity(); 5 glTranslatef(-3.0f,-1.0f, (i+1)*(-4.0f)+run_len); // 移动绘点 6 glCallList(road); 7 } 8 // 绘制草地 9 glBindTexture(GL_TEXTURE_2D, texture[1]); 10 for(int i = 0; i\u0026lt;12; ++i){ 11 for(int j = 0; j\u0026lt;12; ++j) { 12 if(j == 7) continue; // 此部分已经绘制了公路,使用continue而非让公路覆盖这一块草地是因为需要防止使用透视渲染时,画面异常,方便将来的扩展. 13 glLoadIdentity(); 14 glTranslatef(-4.0f*(j-6)+1,-1.0f, (i+1)*(-4.0f)+run_len); // 移动绘点 15 glCallList(road); // 草地和道路使用同一套模型,只不过纹理不同而已. 16 } 17 } 楼栋绘制 因为楼栋的绘制并不像草坪和公路那样是固定出现的物体,漏洞的出现具有一定的随机性,就像我们一处陌生的道路路上行驶的时候,并不知道什么时候会出现一栋楼.\n为了简单的检查楼栋是否能够正确的绘制,我们可以先使用将绘笔移动到固定位置的方法,然后调用glCallList即可.\n如何让楼栋移动起来,我们将在后续完成.\n到这里,基本的环境搭建就已经完成了,接下来我们将开始运动场景搭建.\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/%E8%99%9A%E6%8B%9F%E9%A9%BE%E9%A9%B6%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%BA%8C/","section":"post","tags":["OpenGL","C++","虚拟驾驶"],"title":"虚拟驾驶环境搭建(二)"},{"body":"龙云尧个人博客，转载请注明出处。\nCSDN地址：http://blog.csdn.net/michael753951/article/details/75073333\n个人blog地址：http://yaoyl.cn/huan_jing_da_jian_yi/\n综述 本篇博客将对整个虚拟环境的搭建进行一个综述,后续将会对环境中各个功能的实现进行一一解释分析.\n功能 整个pro实现了模仿一辆车在街道上进行奔驰的场景(目前实现的是在直道上行驶,后续会加入转弯功能).项目的运行效果如图所示.\n简单描述 为了实现上述功能,我将整个项目大致分为如下几块.\n基本素材和环境的准备 草地环境的搭建 两侧楼房的搭建 实现前进动作 完成障碍物的出现动作 其他系统优化 其中,本次项目是基于OpenGL学习(十)的项目代码进行的修改扩充,库头文件依然一致.\n纹理渲染等方式和以前如出一辙.为了提高渲染速度,我使用纹理列表将图片在程序编译的时候提前进行传渲染,以达到最快的渲染速度,提高程序时间控制的稳定性.\n事物移动方式和以前一致,通过在DrawGLScene中绘笔的起点位置,来实现物体的移动.\n后续章节我将进行详细的解释说明.\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/%E8%99%9A%E6%8B%9F%E9%A9%BE%E9%A9%B6%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%80/","section":"post","tags":["OpenGL","C++","虚拟驾驶"],"title":"虚拟驾驶环境搭建(一)"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/c%E8%AF%AD%E8%A8%80/","section":"tags","tags":null,"title":"C语言"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/socket/","section":"tags","tags":null,"title":"Socket"},{"body":"龙云尧个人博客，转载请注明出处。\nCSDN地址：http://blog.csdn.net/Michael753951/article/details/72990141\n个人blog地址：http://yaoyl.cn/socketbian-cheng-xiao-jie/\n本部分内容是对之前博客【 Ubuntu下进行Socket编程】中的补充说明，在这篇博客中，我将详细解释Socket编程的代码，分析编程的流程和思想。\n**声明：**本部分代码分别引用自【Linux C Socket编程原理及简单实例】以及【Linux网络编程：socket文件传输范例】。\n首先我们先分析第一份较为简单的代码，使用Socket编程完成一个两个控制台窗口之间通信的demo。\n简单通信 在分析之前，我推荐你先看一下这篇博客【简单理解Socket】，上面很详细的解释说明了Socket编程的过程中，服务器端和客户端分别需要调用的函数和调用流程。比如博客中下面这张图，很重要也很直观的。\n接下来我们开始分析代码，看代码的过程中，我们需要不断回头看看上面这张流程图，方便对整个代码进行理解剖析。\n服务器端代码如下。\n1#include \u0026lt;sys/types.h\u0026gt; 2#include \u0026lt;sys/socket.h\u0026gt; 3#include \u0026lt;stdio.h\u0026gt; 4#include \u0026lt;netinet/in.h\u0026gt; 5#include \u0026lt;arpa/inet.h\u0026gt; 6#include \u0026lt;unistd.h\u0026gt; 7#include \u0026lt;string.h\u0026gt; 8#include \u0026lt;stdlib.h\u0026gt; 9#include \u0026lt;fcntl.h\u0026gt; 10#include \u0026lt;sys/shm.h\u0026gt; 11 12#define MYPORT 8887 13#define QUEUE 20 14#define BUFFER_SIZE 1024 15 16int main() 17{ 18 ///获得sockfd 19 // SOCK_STREAM 表明使用TCP协议（有序，流） 20 // 参考地址 http://baike.baidu.com/link?url=msvzh3jij6QHrqSMUVsst9P7o0wCNRJFS2qwZ_G5uu0hBL090wOB-4Nfgv7ye2-ZlQ3ZnnR4tqueYg6ThnqXSNP6aRe371EX2dhl5uYZ_jm 21 int server_sockfd = socket(AF_INET,SOCK_STREAM, 0); 22 23 ///定义sockaddr_in，用来表示接受方的IP地址 24 struct sockaddr_in server_sockaddr; 25 server_sockaddr.sin_family = AF_INET; // 设置地址家族 26 // htons是将整型变量从主机字节顺序转变成网络字节顺序， 就是整数在地址空间存储方式变为：高位字节存放在内存的低地址处。 参考地址：http://baike.baidu.com/link?url=QUJ7h2uCP-Fag7xTlSgVCsZyGFr-hqJuaO-L5wRHbH7ODChk-vsHwsiipqVqIiJeNf1dCz4aeJ7SEvC-324Hfa 27 // 绑定端口号至8887号 28 server_sockaddr.sin_port = htons(MYPORT); // 设置端口 29 // htonl将主机数转换成无符号长整型的网络字节顺序。本函数将一个32位数从主机字节顺序转换成网络字节顺序。 30 // INADDR_ANY就是指定地址为0.0.0.0的地址，这个地址事实上表示不确定地址，或“所有地址”、“任意地址”。 一般来说，在各个系统中均定义成为0值。 参考地址：http://baike.baidu.com/link?url=UnkEXjpR6yhwsqWJ9d_77IzqsbEPaiO_e8WI355TORvFwpgf9zO4sQcBLilHuKxTYEOanDCWxGedtp_8-7BfVDZwyjN8ZDJDLrXitPwr49Bf5E7OwvEKHQj6EjZQHGcPU8DpDDsdeixUmYnZxgJMya 31 server_sockaddr.sin_addr.s_addr = htonl(INADDR_ANY); // 设置地址 32 33 ///bind，成功返回0，出错返回-1 34 if(bind(server_sockfd,(struct sockaddr *)\u0026amp;server_sockaddr,sizeof(server_sockaddr))==-1) 35 { 36 perror(\u0026#34;bind\u0026#34;); 37 exit(1); 38 } 39 40 ///listen，成功返回0，出错返回-1 41 // 消息队列长度为20 42 if(listen(server_sockfd, QUEUE) == -1) 43 { 44 perror(\u0026#34;listen\u0026#34;); 45 exit(1); 46 } 47 48 ///客户端套接字 49 char buffer[BUFFER_SIZE]; 50 struct sockaddr_in client_addr; 51 socklen_t length = sizeof(client_addr); 52 53 ///成功返回非负描述字，出错返回-1 54 int conn = accept(server_sockfd, (struct sockaddr*)\u0026amp;client_addr, \u0026amp;length); 55 if(conn\u0026lt;0) 56 { 57 perror(\u0026#34;connect\u0026#34;); 58 exit(1); 59 } 60 61 while(1) 62 { 63 memset(buffer,0,sizeof(buffer)); 64 int len = recv(conn, buffer, sizeof(buffer),0); 65 if(strcmp(buffer,\u0026#34;exit\\n\u0026#34;)==0) 66 break; 67 fputs(buffer, stdout); 68 send(conn, buffer, len, 0); 69 } 70 close(conn); 71 close(server_sockfd); 72 return 0; 73} 仔细查看代码，各种参数的设置原因我已经写在注释中了，就不再赘述。稍加注意我们便可以发现服务器端代码中，依次调用了socket, bind, listen, accept, recv, close。整个流程是符合我们之前放出来的那张图的，我们在计算机网络中也学习过，5层网络模型中，socket套接字担任了应用层和网络层之间通信的任务，我们也知道了每个socket套接字会绑定一个特定的端口，从而接受这个端口传入的讯息。\n详细分析 代码中，首先使用socket函数定义消息使用IPv4网络，建立一个面向连接的稳定数据传输，即TCP传输。\n然后作者定义了一个sockaddr_in结构体，用来存放服务器的信息。sockaddr_in中存放了客户端的网络通信方式——IPv4，TCP，以及监听的ip地址。（这里监听的0.0.0.0，表示监听本机上所有的ip地址，这里的ip地址是指5层网络中的第4层网络层的ip地址，即服务器端自身的ip地址，这部分资料可以参考【关于socket绑定INADDR_ANY】）。上面有比较详细的解释。\n接下来调用bind函数绑定socket，同时调用listen开始监听，使用accept接收消息队列中的消息内容，监听的ip和端口号已经在sockaddr_in中已经定义好了。\n接着使用一个while循环忙等待，等待调用recv让服务端收到从其他客户端发来的消息。send表示将消息发送出去。\n只要将服务端的代码看懂，类似的，我们也能够很简单的看懂客户端的代码内容。请自行对着那张流程图和代码进行比对阅读。\ndemo2分析 仔细查看demo2使用TCP传输文件的例子，其实和上一个demo没什么本质上的区别，流程的关键代码都一致。不过稍微注意的是，在这一份demo中多了一行代码。\n1setsockopt(server_socket_fd, SOL_SOCKET, SO_REUSEADDR, \u0026amp;opt, sizeof(opt)); 关于这一行代码的解释，我在这里就不多说了，因为我也并没有很看明白，如果你有兴趣的话，可以参考这篇博客，上面有很详尽的解释以及说明。【setsockopt()用法（参数详细说明）】\n到这里其实想不出还有什么需要在解释的了，代码很简单，因为这两份demo都很纯粹，简单几行代码便能够展示清楚使用TCP变成的操作方法和顺序（如果你想使用UDP编程的话，方法类似）。\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/socket%E7%BC%96%E7%A8%8B%E5%B0%8F%E7%BB%93/","section":"post","tags":["socket","网络编程","C语言","Ubuntu"],"title":"Socket编程小结"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/","section":"tags","tags":null,"title":"网络编程"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/rfid/","section":"tags","tags":null,"title":"RFID"},{"body":" 一次debug到哭泣的经历。\n龙云尧个人博客，转载请注明出处。\nCSDN地址：\n个人blog地址：http://123.207.243.115:81/rfidshi-yan-san-zong-jie/\n在实验过程中，需要不断翻阅实验课PPT之**《04 电子钱包的功能》，word之《实验3文档》**，以及不知名大佬的课程总代码，CSDN大佬吕浪的Java card开发系列文章。\n本次实验和前两次实验相比，代码量多很多，并且实验思路稍有区别。实验之前可以不太懂实验流程（主要是因为流程本身就太复杂了），但是一定要一遍又一遍阅读源代码，只有在读源码的过程中，才能体会整个验证过程，对项目中涉及到的函数方法的使用才能有一个更加深入的了解。接着自己不断重写代码，理解整个实现过程，才能对这个课程实验有较为深入的了解。\n最终的代码地址：https://github.com/LongyunYao/RFID_lab/\n代码在未征得本人同意之前，请勿直接Ctrl+C，Ctrl+V，谢谢。\n正式实验 实验分析 首先我们在PPT中知道本次实验的主要需要实现的功能是：\n圈存 消费 余额查询 接下来我们开始看ppt《04 电子钱包的功能》和《实验3文档》。\n首先是圈存功能的流程图。\n流程图中我们可以分析出圈存一共有4个步骤：\n终端发送消息初始化 IC响应初始化，并且发送MAC1验证 终端验证MAC1，确认IC卡是否合法，然后发送包含MAC2的圈存命令 IC卡验证终端机的合法性，执行完成以后返回TAC响应操作完成 接下来我们将一步一步仔细分析圈存是如何实现的。\nstep1：圈存机发送的初始信息如下所示。消息中包含了秘钥标识符，交易金额，终端机编号。\nstep2：\nIC卡根据秘钥标识符寻找圈存秘钥 生成过程秘钥。输入数据为[伪随机数||电子钱包联机交易序号||8000]，秘钥为圈存秘钥，使用3DES加密算法。 生成MAC1。输入数据为[电子钱包余额（交易前）||交易金额||交易类型标识||终端机编号]，秘钥为过程秘钥，使用我们在上一次实现的MAC生成函数gmac4，计算出MAC1用来表明身份。 IC卡返回[余额||联机交易序列号||秘钥版本号||算法标识||伪随机数||MAC1]。 step3：\n圈存机对IC卡发挥的MAC1信息进行校验，如果正确就说明IC卡信息合法。 计算MAC2。输入信息为[交易金额||交易类型标识||终端机编号||交易日期（主机）||交易时间（主机）]，秘钥为过程秘钥，加密算法为依然为gmac4。用来表明自己的身份。 发送圈存指令。消息中包含[交易日期||交易时间||MAC2]。 step4：IC使用同样的算法计算MAC2，如果计算结果和终端返回的MAC2一致，就说明终端的身份合法。IC卡就会执行圈存命令。同时返回TAC。其中TAC计算时，输入数据为[电子钱包余额（交易后）||电子钱包联机交易序号（加１前）||交易金额||交易类型标识||终端机编号||交易日期（主机）||交易时间（主机）]，密钥为TAC密码最左8个字节与TAC密码最右8个字节异或的结果。\n到这里整个圈存过程就结束了。消费以及查询和圈存的实现原理一致，这里就不赘述了。\n读代码 前面的分析中，我们已经对本次实验有了大致的了解，接下来就是开始读源码的过程了。不过本次实验中，因为我们只需要对IC卡的系统进行编程实现，而对终端机需要靠人脑完成，所以我们重心就会放在圈存的初始化和圈存的执行上面了。\n圈存初始化 还是老样子，我们先读项目给的源码中的Purse部分，里面有圈存初始化和圈存确认信息的处理函数。\n在TA给的源代码中，init_load和load方法是已经给好了的，我们先读这两部分的源代码，理解整个设计思路。\n首先我们需要修改Purse类，让其process方法里面增执行圈存初始化，圈存，消费初始化，消费，以及查询的入口。\n因为圈存和消费的init方法的ins都一样，所以我们还需要增加一个判断方法，利用两者p1参数不一样，来判断是init_load还是init _purchase。\n好了，入口写好了。我们开始看init_load的实现方法。\n前面还是和读写数据时一样的操作，进行参数校对，这个部分已经很简单了。我们看到有一个findkey方法。点进去查看函数的具体内容。\n查找方法比较简单，从Key数组中获取秘钥，存进pbuf中，如果存在就返回秘钥标识符，否则返回0。\n回到init_load，在执行fendkey之后，是异常处理，验证是否查找失败。然后执行init4load方法。继续点进去查看。（前方高能预警）\n回忆一下初始化的过程中，IC的操作部分是怎么操作的。\nIC卡根据秘钥标识符寻找圈存秘钥 生成过程秘钥。输入数据为[伪随机数||电子钱包联机交易序号||8000]，秘钥为圈存秘钥，使用3DES加密算法。 生成MAC1。输入数据为[电子钱包余额（交易前）||交易金额||交易类型标识||终端机编号]，秘钥为过程秘钥，使用我们在上一次实现的MAC生成函数gmac4，计算出MAC1用来表明身份。 IC卡返回[余额||联机交易序列号||秘钥版本号||算法标识||伪随机数||MAC1]。 按照这个思路看源代码。（看代码的时候一定要对着ppt的流程读，我第一次读源代码就是单纯对着IDE读，结果读的很爽，但是读完了只知道每个基本操作在干嘛，但是整个操作流程还是一脸懵逼。）\n开始看代码。\n首先从data中提取交易金额，终端编号，存进pTemp42和pTemp81。\n然后判断是否超额。我们继续点进去看一下increase的源代码。\n从EP_ balance中和data中依次取出一个字节，将其相加再和一个ads(进位标志符)相加，如果flag为真，就改写EP _balance中的值，然后更新ads。最终返回进位标志位ads。整个就是大数加法的思想方法。但是EP _balance是啥？？？我们再点进去看源代码。\n是当前电子钱包的余额。因此整个increase就是判断当前余额加上一个圈存值，如果超额（结果超过4bytes），就会返回1（那个进位标志位ads）。否则返回0。如果传入的第二个参数为false，就不会更新余额，否则会执行余额更新操作。\n好，到这里我们知道了rc = increase(pTemp42, false);部分的意义了。再往下看密码取位部分。\n首先使用readkey方法。点进去查看。\n这里需要对Key的结构有一定的了解了。我们点进去查看Key这个类定义和实现。\n所以Key中存放的结构为2bytes信息位（分别为1byte的pbuf，1byte的length），5bytes的秘钥头，以及16bytes的秘钥值。其中length是addKey传入value的长度，为表头+秘钥的长度。\n回到readkey，readkey就是将秘钥取出来，然后将秘钥表头中的value值取出来（5bytes表头+16bytes秘钥），返回长度为秘钥的实际长度（减掉了表头长度）。\n回到init4load，所以这4行代码的意义就是\n按照秘钥获取部分就是按照秘钥标识符获取bytes秘钥头+16bytes秘钥存进pTemp32 从秘钥头第4个bytes获取秘钥版本号，从第5个bytes获取算法标识符 从获取pTemp32中将秘钥的实际值（从第5位开始读取秘钥长度个bytes），取出来存进pTemp16。 再往下读随机数产生的代码。\n调用rd.generateData方法，对传入的参数进行操作。我们在查看generateData的实现方法的时候，已经进入.class文件，没有发现有意义的信息。于是折返查看v和size的信息。\n根据注释，我们可以大概知道GenerateSecureRnd的意义就是根据特定的随机数产生机制产生随机数，然后写进v。\ngetRndValue方法就是将随机数v写入参数bf中，偏移位为bOff。\n回到init4load，产生随机数这两行的意义就是产生随机数，然后将随机数写进pTemp32的[0:3]位。\n接下来，将EP_online(电子钱包脱机交易序号，之前分析图片中出现过)写入pTemp32[4:5]，将0x8000写入pTemp32[6:7]，调用上一次实验中实现的3des加密算法，秘钥为上面得到的圈存秘钥（存在pTemp16中）产生过程秘钥，写入pTemp82。\n回看前面分析的圈存初始化的第一步和第二步，**①IC卡根据秘钥标识符寻找圈存秘钥；②生成过程秘钥。输入数据为[伪随机数||电子钱包联机交易序号||8000]，秘钥为圈存秘钥，使用3DES加密算法。**是不是一模一样？\n好，我们再往下看。\n产生MAC1。首先分别往pTemp32中写入EP_balance（余额），data[1:4]（交易金融，对着那一页PPT找data结构就知道了），0x02，data[5:10]（终端机编号，一样看ppt中的data结构），然后将pTemp32中的内容复制到data（不知道这里写入data有什么意义，因为在响应数据部分又会被写一次。）。然后使用上次实验实现的gmac4，输入数据为pTemp32，秘钥为上一步得到的存在pTemp82的过程秘钥，得到的mac1存在pTemp41中。\n同样回看前面分析的圈存初始化的第三步。生成MAC1。输入数据为[电子钱包余额（交易前）||交易金额||交易类型标识||终端机编号]，秘钥为过程秘钥，使用我们在上一次实现的MAC生成函数gmac4，计算出MAC1用来表明身份。是不是对上了？\n然后将**EP_balance（余额），EP _online(电子钱包脱机交易序号），keyID（秘钥版本号），algID（算法标识符），随机数，以及mac1写进data**。\n回看圈存初始化的第四步，IC卡返回[余额||联机交易序列号||秘钥版本号||算法标识||伪随机数||MAC1]。一模一样。\n到这里init4load也结束了，往上回到init_load，papdu.pdata已经在init4load中设置完成，在papdu.le（理想的下一次指令中的数据长度）写为0x10。然后purse.init _load结束。\n光分析这一步我写了一个半钟，当时在读源代码的时候花的时间更久。但是这个步骤不能跳过，它让我们对整个IC卡的业务逻辑和方法实现以及调用打下了基础。我们在实现其他方法的时候，才能更加得心应手。\n再看purse.load方法吧。这一步实现了圈存。\n前面的就不详说了，它调用了EPfile.load方法，我们点进去查看。\n回想在一开始分析的时候，step4中，IC卡对接收到的终端机指令是怎么处理的。\nstep4：IC使用同样的算法计算MAC2，如果计算结果和终端返回的MAC2一致，就说明终端的身份合法。IC卡就会执行圈存命令。同时返回TAC。\n查看MAC2的产生方法：输入信息为[交易金额||交易类型标识||终端机编号||交易日期（主机）||交易时间（主机）]，秘钥为过程秘钥，加密算法为为gmac4。\n查看TAC的产生方法：输入数据为[电子钱包余额（交易后）||电子钱包联机交易序号（加１前）||交易金额||交易类型标识||终端机编号||交易日期（主机）||交易时间（主机）]，密钥为TAC密码最左8个字节与TAC密码最右8个字节异或的结果。\n通过源代码和步骤分析我们可以得出，EPFile.load整个过程就是将step4实现的过程，不过需要注意的是，EPFile.load中不少参数使用的是EPFile.init4load中存下来放在pTemp中的值，这也就从逻辑上说明为什么我们在执行消费命令前必须执行消费初始化命令，保证了安全性。返回purse.load，校验异常，设置papdu.le，purse.load也就结束了。\n整个阅读过程需要不断跳转代码，也需要不断在代码和PPT《04 电子钱包的功能》和word《实验3文档》。同时因为pTemp实在太多，我们最好能够在一旁做笔记，记录下来每一个pTemp存放了哪些值，以及它们的作用，这样我们才能在实现消费和查询的时候，使用起来更加方便。\n附上我记录的在init4load和load中各种变量的变化情况以及pTemp们的存在意义。\n大部分pTemp其实是有固定意义的（结合PPT中传入的各种数据长度，我们就不难理解为什么了）。pTemp32一般作为中间变量，用来进行3des加密或者gmac加密。\n谨记这一点，结合我们在上一步中总结下来的经验。我们就可以着手实现init_purchase和purchase以及get _balance了。\n查看消费的流程图。\n我们可以总结出消费的如下流程\n终端发送消息初始化 IC响应初始化，发回随机数 终端产生MAC1，证明自己的身份，将交易信息发给IC卡 IC卡验证终端机的合法性，计算MAC2和TAC，返回给终端作为身份凭证和消费凭证 然后一步一步详细分析。\nstep1：圈存机发送的初始信息如下所示。消息中包含了密钥标识符，交易金额，终端机编号。（整个消息串中，除了p1、le对比圈存初始化指令有区别以外，并没有其他区别）。\nstep2：\nIC卡根据秘钥标识符寻找圈存秘钥 生成随机数 检查余额是否足够支付本次交易 返回[余额||脱机交易序号||透支限额||秘钥版本号||算法标识||伪随机数] step3: 终端将命令响应数据传送给主机，主机利用消费主密钥产生消费子密钥，并生成MAC1。然后终端向IC发送[交易序列号||交易日期||交易时间||MAC1]。（和圈存中发送的信息中多了一个交易序列号）。\nstep4：\nIC卡根据消费秘钥生成过程秘钥 利用过程秘钥生成MAC1 交易序列号+1，将消费金额从卡中扣除。 IC卡生成MAC2（证明自己身份），和TAC（证明工作完成）。 返回TAC和MAC2给终端 首先我们填purse中的init_purchase函数。（这一步可以先从init _load中复制下来，然后稍微修改一下p1和le的值，以及调用的函数改成init4purchase，原因我刚刚在step1中说过了）。\n接着我们需要实现EPFile.init4purchase。同样的，我们只需要按照step2步骤，从init4load中，按需复制代码就行。\n同时我们需要对照并且记录下来，每一个pTemp使用是否正确，还要记录init4purchase中每一步执行完成以后pTemp中数据对应的值。\n**然后我们再实现EPFile.purchase方法。**实现过程比较复杂，但是每执行一步，就更新所有参数的状态，按照我们之前整理出来的pTemp用法，使用复制粘贴大法，从EPFile.init4load和EPFile.load中可以提取大量的重复代码下来。\n需要注意的是，load中是余额加上交易金额，purchase中就应该是减去交易金额。因此我们必须手动实现decrease方法。\n实现方法和increase类似，从后向前，一次取1byte，进行减法，同时更新借位，最后返回借位即可。\n这里有一个小插曲，在计算MAC2的时候，一般不会出什么问题，但是在计算TAC的时候，就会出问题，这个坑在我最后debug的时候才发现（为了找这个bug整整debug了一个多钟= =）。于是我重新改变策略，使用在MAC2生成并且存进data中以后，将pTemp32新开一个数组（JCSystem.makeTransientByteArray），然后重新作为中间变量进行操作，但是不知道为什么，这样操作的结果还是错误的。于是就按照网上流传的代码，在计算TAC的时候，新申明了一个temp数组用来作为临时变量。\n最终实现的代码如图。\n参数变化的记录如图。\n最后一个就是get_balance了。\n直接从EP_balance里面读出来就行了，一行代码搞定。\n到这里，整个实验中需要我们填写的功能函数全部填写完成了。试验过程中，了解业务逻辑是一个很重要的过程，阅读源码，了解源码中每一个函数的具体意义，以及每一个参数中，存放的信息有哪些，这些都最好都在一个txt或者什么地方器记录下来，方便自己查阅和提取（毕竟一个没有debug的IDE，你不能要求什么，只能人脑debug），另一方面，每实现一个功能，就尽可能写清楚这个部分的功能，同时写清楚那些信息在哪些位置，这样你在实现的过程中才不会头晕脑胀。也能够方便你最后debug找错误信息从哪来。\n验证实验 验证之前，我们还需要添加新的参数信息。\n以及一个的天坑的地方。。。。。。。这个地方我用throw 0x1234大法，从init_purchase的return 0之前，一直回退到Purse中的if(papdu.APDUContainData())才找到问题。\n其他的地方应该没什么需要添加或者修改了，按照之前上一次的试验方法，我们可以开始进行debug了。\n首先还是新建一个txt，因为我们需要人脑担任终端机的角色，所以提前将必要的操作流程和模板写下来存在txt里面，写指令的时候也能迅速一点。\n首先实验一中的初始化脚本。\n然后模仿终端机输入圈存初始化指令。/send 805000020B080000100000112233445510\n使用**[伪随机数||电子钱包联机交易序号||8000]作为数据，圈存秘钥作为秘钥，使用3DES获得过程秘钥**。\n然后使用过程秘药作为秘钥，输入自定义好的初始向量，以及数据**[电子钱包余额（交易前）||交易金额||交易类型标识(0x02)||终端机编号]作为输入，生成mac1**，和IC卡返回的mac1校对，发现一致。\n接着使用**[电子钱包余额（交易前）||交易金额||交易类型标识(0x02)||终端机编号]**作为数据，过程秘钥作为秘钥，生成mac2。夹杂其他信息一起发出去。\n返回TAC+9000，所以我们认为init_load和load成功。\n接下来执行查询指令，返回00 00 10 00 90 00。说明卡里面已经有了00001000，我们圈存确实成功了。查询也成功了。\n接下来执行消费指令，/send 805001020B07000010000011223344550F\n返回得到伪随机数。接着我们将**[伪随机数||电子钱包脱机交易序号||终端交易序号的最右两个字节]作为数据，消费秘钥作为秘钥，使用3DES得到圈存秘钥**。\n使用**[交易金额||交易类型标识(0x06)||终端机编号||交易日期（主机）||交易时间（主机）]作为数据，过程秘钥最为秘钥生成mac1**。\n返回MAC2+TAC+9000。故而我们认为本次init_purchase和purchase成功。\n为了防止意外，我们再次执行查询余额的指令。\n结果显示余额为00000000，返回9000。故而我们认为，查询消费圈存三大功能都已经能够正确执行了。\n最后测试一下多次存取操作。没什么问题，故而我们认为，本次实验成功。\n2017/4/25更新\n线下已校验多次存取（复杂数据），以及TAC码（我喜欢称其工单码）检验。经检验，不存在明显问题。\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/rfid%E5%AE%9E%E9%AA%8C%E4%B8%89%E6%80%BB%E7%BB%93/","section":"post","tags":["RFID","java"],"title":"RFID实验三总结"},{"body":" 没见过debug还这么麻烦的。。。。\n龙云尧个人博客，转载请注明出处。\nCSDN地址：http://blog.csdn.net/michael753951/article/details/70307683\n个人blog地址：http://123.207.243.115:81/rfidshi-yan-er-zong-jie-2/\n在实验过程中，需要不断翻阅实验课PPT之《03 电子钱包的安全管理》，《实验3文档》，以及不知名大佬的课程总代码，CSDN大佬吕浪的Java card开发系列文章。\n然后再自己不断重写代码，理解整个实现过程，才能对这个课程实验有较为深入的了解。\n最终的代码地址：https://github.com/LongyunYao/RFID_lab/\n代码在未征得本人同意之前，请勿直接Ctrl+C，Ctrl+V，谢谢。\n正式实验 实验分析 首先我们要知道本次实验中需要修改哪些函数，实现那哪些功能。\n首先我们在PPT中知道本次实验的主要目的是：\n过程密钥的生成 消息验证码MAC或交易验证码TAC的生成 再看详细内容，我们大概可以捋清如下关系：\n过程密钥的生成 输入数据包括“伪随机数+电子钱包联机交易序列号+8000” 子密钥指的是圈存或消费密钥 秘钥8字节长密钥 秘钥生成过程由3次完成 子秘钥左半部分加密 子秘钥有半部分解密 子秘钥左半部分加密 MAC_TAC的生成 数组初始化为0 数据末尾填充0x80 数组补0x00直到数组长度为8的倍数 数组分割成数据块 按照PPT**《03 电子钱包的安全管理》P13**的过程，生成MAC或者TAC 在有了大概思路以后，我们开始阅读源代码。经过简单寻找，我们发现本次实验涉及的代码大多集中在PenCipher.java中。\n基本的构造函数和对称加密des的运算函数，这部分函数在ppt上都有解释，推荐把ppt代码复制上来方便阅读和理解。\n这几个函数就是我们本此实验需要填写的函数了。第一个gen_SESPK是过程秘钥生成函数，后面3个都是MAC或者TAC生成中需要使用的函数。\n开始打码 前面的分析中，我们已经对本次实验有了大致的了解，接下来就是开始打码的过程了。\n过程秘钥的产生 我们在PPT《03 电子钱包的安全管理》中已经知道了过程秘钥分为3步，分别是子秘钥左半部分加密，子秘钥右半部分解密，子秘钥左半部分解密。在仔细查看gen_SESPK函数传入参数的各种意义，以及cdes函数的参数意义以后，我们就可以调用cdes实现3步产生秘钥了。\nMAC或者TAC的产生 接下来是异或操作函数，根据TA的提示，一个简单for循环搞定。\n根据提示，pbocpadding也可以很简单的实现。这个地方本来想写一个new新开空间的，因为数组在填充的时候可能会爆空间。但是在完成代码以后，发现结果总是不正确，最终发现有可能是因为在函数栈中声明的空间，在return之后，栈里的空间也被回收掉了，导致data实际上没有完成新开空间的操作。所以无奈注释掉，然后之后在debug的时候，故意给data开辟很大的空间以免爆空间。\n填充完成以后，就可以按照PPT《03 电子钱包的安全管理》P13的过程，生成MAC或者TAC了。这个部分要注意的是最后写回mac的时候，只用取前4位就行，因为mac的响应报文中，只有4个byte，而加密完生成的数组有8bytes，不控制长度就会爆掉。\n到这里，整个实验二就结束了。在填写完代码之后整个思绪都变得异常清晰，严格按照PPT中的流程，我们就能够填写完本次实验的代码，整体并不难。通过实验其实可以发现，网上流传的实验课完整代码的撰写者代码能力一般，不少地方有冗余。（事后诸葛亮2333）\n验证实验 本次实验需要使用Dex.exe进行验算结果。\n因为实验中不能直接使用printf进行debug，所以我们只能手动利用ISOException.throwIt进行debug，或者利用rfid卡的写会操作，将结果直接作为写回，在控制台上打印出来。\n因此，我们就需要修改Purse的process了。\n使用某一个ins，控制将mac生成，并且写回。需要注意的是，我们不能一开始就直接写回加密生成的mac值，如果直接执行就会写回0x6D00（INS value not supported）。\n这个地方坑了我很久。所以我们需要在process中使用条件控制，让我们能够先执行上次实验中，创建purse等操作，才能进行本次实验的加密生成mac地址并且写回操作。\n因此我们首先执行purse_script（我的实验一的脚本文件），文件生成完成以后，我执行/send 80620000073fffffffffffff随便进行测试一下。算法生成的结果如下图所示，为0x795DB66C。注，其中9000是正确执行返回的结果。\n秘钥为自定的0x1212121212121212，data为自定的0x2222222222222222（测试data只有8个0x22,之所以在代码中有16个22，是因为后面8个0x22纯粹用来凑数，以开辟一个足够大的数组以免爆炸。）初始向量在gmac4中已经定义为0x1111111111111111。\n将这些参数在Dex.exe中计算（数据需要手动添加80和其他00），计算结果为0x795DB66C0F3467BB。我们知道在取mac地址的时候，我们为了防爆（溢出），将结果的前4个byte取出放进mac，所以前四位为0x795DB66C，和我们的代码一致。\n故而我们认为，本次实验成功。\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/rfid%E5%AE%9E%E9%AA%8C%E4%BA%8C%E6%80%BB%E7%BB%93/","section":"post","tags":["RFID","java"],"title":"RFID实验二总结"},{"body":"刚接到这个课程项目的时候，是一脸懵逼的。毕竟是第一次接触JavaCard编程（其实就是自己没认真听课）。不过在围观各路大佬的博客之后，总算对整个项目有了较为深入的了解。\n在实验过程中，需要不断翻阅实验课PPT之《01 Java智能卡之概述》，《02 电子钱包的文件系统》，《实验2文档》，以及不知名大佬的课程总代码，CSDN大佬吕浪的Java card开发系列文章。\n然后再自己不断重写代码，理解整个实现过程，才能对这个课程实验有较为深入的了解。\n最终的代码地址：https://github.com/LongyunYao/RFID_lab/\n代码在未征得本人同意之前，请勿直接Ctrl+C，Ctrl+V，谢谢。\n正式实验 实验分析 首先我们要知道本次实验中需要修改哪些函数，实现那哪些功能。\n首先我们在PPT最后知道本次实验的主要目的是：\n创建文件 写秘钥 读写二进制文件 再看详细内容，我们大概可以捋清如下关系：\n创建文件 卡片收到命令并且开始解析 所谓的解析就是判断是何种文件，然后再进行创建 异常处理 写秘钥 秘钥消息是一条一条接受的，每次只会写入一条秘钥 卡片收到命令以后，取出数据，然后写入秘钥文件 读写二进制文件 写指令只需要一条 根据指令内容获得需要的参数，然后将其写入持卡人文件或者应用文件中 注意：写入之前需要检查数据时候超过限定大小 读取和写类似 在有了大概思路以后，我们开始阅读源代码。经过简单寻找，我们发现本次实验涉及的代码大多集中在Purse.java中。\n上面四个元素指明了我们将要操作的几个对象。\n这个部分似乎用处不明。但是根据让我们填写的部分，可以看出这一块是卡片读取指令的地方，将其缓冲到papdu中，让我们得以进行后续分析。\n注释已经说明了，在《01 Java智能卡之概述》P30也有讲到该部分的作用，这里就是我们分析指令的地方，通过这个地方我们可以知道卡片当前接收的指令目的是什么。\n将PPT上的操作内容先填进去，具体实现我们待会再说。\n我们发现这里还需要添加读二进制的常量。\n再往下读，就是创建文件部分。\n注释和代码里已经说明，将会有4种文件可以被创建\n电子钱包文件(EP_file，这个部分已经给出) 秘钥文件 持卡人基本文件 应用基本文件 剩下的就是圈存指令获取，初始化，以及一些其他操作，不是本次试验需要关心的部分。\n开始打码 前面的分析中，我们已经对本次实验有了大致的了解，接下来就是开始打码的过程了。\n我们在PPT《01 Java智能卡之概述》中已经知道了cAPDU的结构。\n我们也在各种文件中知道了每个参数的意义：\nCLA，即class，指令的类，占2Bytes INS，instructions，指令编码，占2Bytes P1 - 第一个指令参数，2Bytes P2 - 第二个指令参数 (P1，P2 根据INS不同，也有不同的含义)，2Bytes LC，数据段的长度（多少个字节），2Bytes Data部分就是真正的数据了，最长可以是255个字节 LE字节表示的是期望卡片发回来的字节长度，注意不包括9000等响应 首先我们完善process。\n按照已知的结构，将缓冲中的数据取出来，并且依次按照对应的位置放进papdu中。\n因为新加入了数据，所以我们需要更新卡片当前的LE，以便和终端进行确认。\nhandleEvent函数我们已经按照PPT改好了。接下来就是将它们一个一个实现。\n模仿提示的case，根据todo，我们可以列出其他3中情况，分别指向创建密钥文件，持卡人基本文件和应用基本文件。具体的对应条件在实验2文档中有详细说明。\n文件类型\n仔细分析EP_file函数，这是一个钱包文件创建的样例，仔细阅读便可以对指令的解析过程有一个深入的了解。\n根据上图，我们对EP_file稍作修改，添加了ins校验，keyfile校验，p1p2校验。校验过程中，我们对cAPDU中所有参数进行全部确认一遍，然后确认EPfile目前为空，KEY文件已经建立，我们才能开始进行文件的读写，以免该函数在其他地方被误调用。\n仿照这个模式，我们可以很快吧剩下3个文件建立实现出来。\nPerson_ file和Card_file的实现在这里略过，和EP _file一模一样。Key _file则需要稍加注意。因为Key是最先创建的，所以这个时候，keyfile肯定还是null，所以和其他判定条件不太一样，其他条件一样。\n最后就是write_key和write _read _bin的实现了。\n观察write_key表中的参数，以及p2的取值。\n我们可以类似于之前创建文件的操作，完成写key操作。\n再然后就不难了。根据实验2文档，我们可以顺利写完整个代码。\n首先是write_read _bin()实现。利用switch进行选择。\n以及二进制的读和写操作函数。不过注意的是，写数据的时候，要注意数据data要在[1, 255]之间进行选择，否则会越界（因为LC不够长）。\n到这里，整个实验一就结束了。在填写完代码之后整个思绪都变得异常清晰，在操作中使用严格的控制能够良好的避免错误，也能够方便我们整理思路。让我们的撸代码的时候，思路更加清晰。\n验证实验 首先将脚本.txt文件转换成.jcsh文件，然后转码成UTF-8，不转码就会出现乱码，eclipse就无法正常读取脚本。\n然后在eclipse的控制台输入/set-var path \u0026quot;D:\\Eclipse_cpp_workspace\\purse\u0026quot;，注意文件路径填写的是你的.jcsh脚本文件所在的位置，然后输入你的脚本文件名就行了，如purse_script。（不需要加后缀）\n这个时候我们发现，所有指令已经能够no error。实验一成功了。\n2017/4/25 更新\n基于验收过程中，跑真机过程中出现0x6B00报错的情况。注释掉了create_file中关于P1参数的检验。注释掉了ins 检验（ins检验其实应该没问题）。可能原因是因为真机中运行时指令和之前给的测试样本中的指令不完全一致，或者在create _file中p1有某种特殊的意义而不一定比为0x00（这部分没有在ppt和word中找到）。\n另外，基于这个问题，在Purse.java（Java卡的入口类）编写的时候，不推荐按照我的实现方法进行实现。\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/rfid%E5%AE%9E%E9%AA%8C%E4%B8%80%E6%80%BB%E7%BB%93/","section":"post","tags":["RFID","java"],"title":"RFID实验一总结"},{"body":"龙云尧个人博客，转载请注明出处。\nCSDN地址：http://blog.csdn.net/Michael753951/article/details/72553287\n个人blog地址：http://yaoyl.cn/ubuntu-xia-jin-xing-socket-bian-cheng/\n这是第一次进行网络编程，献给Ubuntu了。\n由于需要结合OpenGL搭建的虚拟环境进行实验，为了将虚拟环境中的实验参数传送至另一台PC机协同工作。我们选择使用网络编程进行数据通行。本次博客先运行两个demo体会一下利用C++进行Socket编程。\n实验进行 我们在本次实验中将运行两个demo，第一个demo用来进行文件传输，第二个demo用来进行窗口对话。\ndemo1 本次demo采用TCP流，demo代码来自【 Linux网络编程：socket文件传输范例 】。\n代码编写 我们打开codeblocks，建立两个项目(project)，新建的时候选择控制台(console)程序。第一个项目命名为“TCP_client”，第二个项目命名为“TCP_server”。然后将博客中的代码拷贝进main.cpp中，ctrl+F9进行编译。\n注意，在这里当我们编译到 close(new_server_socket_fd); 的时候，编译器会报错 error: ‘close’ was not declared in this scope。如下图所示。\n我参考CSDN中【‘close’ was not declared in this scope 】添加了unistd.h库头，编译成功。\n1#include\u0026lt;unistd.h\u0026gt; 在TCP_server编译成功之后，我们开始编译TCP_client。同样在将客户端复制下来之后，我们首先添加unistd.h库头，接着我们直接编译。\n首先是在编译到if(inet_pton(AF_INET, \u0026quot;127.0.0.1\u0026quot;, \u0026amp;server_addr.sin_addr) == 0)的时候，编译器报error: ‘inet_pton’ was not declared in this scope错误如下图所示。\n我参考了CSDN中【‘inet_pton’ was not declared in this scope 】添加了arpa/inet.h库头。\n1#include \u0026lt;arpa/inet.h\u0026gt; 再次编译的时候，依然遇到了报错。此时在编译到close(fp);的时候报错error: invalid conversion from ‘FILE* {aka _IO_FILE*}’ to ‘int’ [-fpermissive]。如下图所示。\n我们发现本行代码中fp为文件指针，在C语言中，文件的打开和关闭应该是调用fopen和fclose，在打开文件部分，作者确实调用了fopen进行打开文件，但是在关闭的时候错用成了close，所以造成本次报错，我们将close换成fclose，就能够编译成功了。\n执行项目 我们在两份项目都能够正确编译执行以后，将开始正式进行实验。\n首先关闭当前IDE，因为在codeblocks中，不能在同一个进程中打开两个main函数。我们需要分别进入之前已经建立好的TCP_server项目所在的文件夹和TCP_client项目所在的文件夹，分别代开他们的cbp文件，打开两个codeblocks进程，这样就能够同时打开两个console窗口了。（如果不能同时打开的话，可以刹参考CSDN中【CodeBlocks启动多个进程实例的做法 】的设置方法）\n打开后server和client两个界面如图所示。\n首先我们在server所在的文件夹中放置一个demo.jpeg文件作为源文件，然后我们可以发现此时client所在的文件夹中没有该文件。接着我们在TCP_client窗口中输入demo.jpeg。\n我们发现执行成功之后，client所在的文件夹中多出来了一个demo.jpeg文件，打开它和server中的demo.jpeg进行对比，发现结果一致。\n故而我们认为本次demo运行没问题。\ndemo2 第二份demo参考自【Linux C Socket编程原理及简单实例】。\n本次代码能够直接编译运行，不会有报错信息，测试截图如下所示。\n小结 本次demo作为Socket编程的入门测试以及环境测试，下一篇博客将对Socket编程进行深入的分析的总结。\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/ubuntu%E4%B8%8B%E8%BF%9B%E8%A1%8Csocket%E7%BC%96%E7%A8%8B/","section":"post","tags":["socket","网络编程","异步通信","C语言","Ubuntu"],"title":"Ubuntu下进行Socket编程"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E5%BC%82%E6%AD%A5%E9%80%9A%E4%BF%A1/","section":"tags","tags":null,"title":"异步通信"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/categories/ubuntu/","section":"categories","tags":null,"title":"Ubuntu"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E5%8F%8C%E7%B3%BB%E7%BB%9F/","section":"tags","tags":null,"title":"双系统"},{"body":"龙云尧个人博客，转载请注明出处。\nCSDN地址：http://blog.csdn.net/michael753951/article/details/72547775\n个人blog地址：http://http://yaoyl.cn/ubuntu-huan-jing-pei-zhi/\n起源 一方面由于实验室开发的要求，另一方面由于自己想搞Linux服务器，于是在自己的电脑上装了双系统——Ubuntu 16.04 + Windows10。其中Win10是PC自身的系统，Ubuntu为后期装入，本篇博客将稍微记录一下我对整个系统的UI优化以及部分必要的软件配置。\n必要软件安装 输入法 首先需要安装的最最重要的当然是输入法了，这里我选用的是搜狗输入法，直接从官网下载安装包即可。（Ubuntu 版本的 搜狗输入法翻页是用 - 和 = 而不是 { 和 }）另外，在Ubuntu中切换输入法的快捷键是 Ctrl + Space 。\n编辑器 然后是编辑器，我依然选用的是Sublime，这个网上教程很多，上官网下载安装包，激活，配置环境教程太多了。\nIDE 另外，考虑到我有C++的开发需求，我是用了网上比较推荐的 CodeBlocks ，软件安装教程网上很多。\n上网 再然后就是上网了。毕竟我们不可能永远待在实验室或者图书馆或者蹭别人的WiFi，但是很可惜的是，学校的iNode 64位版本并不好用，官方也没有相对应的安装教程，网上有一些教程，但是都是讲如何在64位Ubuntu系统中使用32位iNode进行上网验证。这种方法并不推荐，因为库依赖太多，而且很难成功，教程也是很多年以前的教程，现如今并不太适用。在和网络中心交流几天之后，他们给我推荐了一款非官方的软件 YaH3C 。详见 https://github.com/humiaozuzu/YaH3C 。上面有安装教程。\n需要注意的是，安装教程中，默认的网卡为 eth0 ，但是在我的电脑上其实并不是，这个问题在一开始直接导致我一直配置不好环境。后面发现应该按照控制台中显示的网卡名称进行配置，否则会出现登录异常。\n如下图所示，左边控制台中显示，我的默认网卡其实是 “enp4s0f2” ，所以在配置的时候，我就需要在网卡上填写 “enp4s0f2” 而不是教程中的 “eth0”。\n配置完成以后，执行\n1sudo yah3c 然后选择正确的网卡（我是按1），验证成功以后就能够正常上网了。\nWiFi 在WiFi开启这个问题上，Ubuntu下面还是很好解决的，因为系统本身就支持直接进行无线网络共享，我们就不再需要安装各种乱七八糟的WiFi共享软件啦。这里我推荐一个比较靠谱的配置教程【ubuntu 16.04 设置位wifi热点 方法】。其他的网络教程在我的系统中并不能够配置出一个靠谱的WiFi。\nUI设置 Tweak UI方面，我使用的网上普遍推荐的 Ubuntu Tweak 进行优化，安装教程网上很多，也忘记保存书签，安装的时候可以自行搜索。\n主题方面，“GTK主题”我选择的是“Radiance”，“图标主题”我选择的是“Ultra-Flat”，“光标主题”我选择的是“DMZ-Black”，“窗口主题”我选择的是“Radiance”。\n字体方面，我的设置为，“默认字体”为“Ubuntu Regular”，“桌面字体”为“Sans Regular”，“等宽字体”为“Ubuntu Mono Regular”，“文档字体”为“Sans Regular”，“窗口标题字体”为“FreeSans Bold”，其他的可以自行调整。\n另外，我还安装了Unity Tweak Tool，安装方法同样网上就有，操作上和 Ubuntu Tweak 类似。稍微调整了系统时钟显示和触控板设置以后，稍微修改壁纸，整个系统看上去就舒服很多了。\n浏览器 Ubuntu内嵌的默认浏览器是火狐浏览器，其实也挺好用的，但是因为我在Windows中刷网页都是使用Chrome，书签和必要的插件也在里面，所以我在Ubuntu中从官网中下载了Chrome，登录账号成功之后，Chrome将我所有的书签全部同步过来，密码也能同步过来。同时，因为Chrome内嵌了 flash ，所以在刷视频的时候，就会比火狐方便很多。\n环境配置 配置完上面内容，然后换一个桌面，整个Ubuntu界面就不再是丑丑的样子啦，用起来也神清气爽了。稍微po两张我的桌面和浏览器。\n接下来就是要开始进行环境配置了，因为我需要在Ubuntu中进行OpenGL开发，所以我们需要进行一些环境上的配置。\n环境配置上，我找了不少博客，但是都没有很完美的解决方案，知道后面在CSDN上面找到一个小哥的【Ubuntu 下使用OpenGL/GLUT的配置以及在Codeblocks中使用GLUT 】。小哥在博客中很详细的讲述了环境配置的过程和方法以及一些错误的尝试和正确的打开方式。看完基本就能够使用CodeBlocks进行OpenGL开发了。\n最后附上茶壶demo的代码。\n1 2 3 #include \u0026lt;GL/glut.h\u0026gt; 4 5 void init(void) 6 { 7 glClearColor(0.0, 0.0, 0.0, 0.0); 8 glMatrixMode(GL_PROJECTION); 9 glOrtho(-5, 5, -5, 5, 5, 15); 10 glMatrixMode(GL_MODELVIEW); 11 gluLookAt(0, 0, 10, 0, 0, 0, 0, 1, 0); 12 13 return; 14 } 15 16 void display(void) 17 { 18 glClear(GL_COLOR_BUFFER_BIT); 19 glColor3f(1.0, 0, 0); 20 glutWireTeapot(3); 21 glFlush(); 22 23 return; 24 } 25 26 int main(int argc, char *argv[]) 27 { 28 glutInit(\u0026amp;argc, argv); 29 glutInitDisplayMode(GLUT_RGB | GLUT_SINGLE); 30 glutInitWindowPosition(0, 0); 31 glutInitWindowSize(300, 300); 32 glutCreateWindow(\u0026#34;OpenGL 3D View\u0026#34;); 33 init(); 34 glutDisplayFunc(display); 35 glutMainLoop(); 36 37 return 0; 38 } 如果能够正常显示，就说明你的Linux目前已经能够进行OpenGL开发了。\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85ubuntu%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96/","section":"post","tags":["Ubuntu","双系统"],"title":"双系统安装Ubuntu的初始化"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/categories/blog/","section":"categories","tags":null,"title":"Blog"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/blog/","section":"tags","tags":null,"title":"Blog"},{"body":"因为头一次自己搭建博客服务器，对平台的选用并不清楚。知乎上误打误撞碰见了Ghost，也就用着试试看了。\n事件起因 由于我的服务器本来部署在自己寝室的PC上，部分blog也提前写在了本地文件夹中，无奈一直找不到文件的存放位置。所以博客的迁移一直让我头疼。\n迁移过程 整个迁移过程完全按照官方手册给的知道方法来——虽然官方手册藏得比较深。\n官方手册地址：https://help.ghost.org/hc/en-us/articles/224112927-Import-Export-Data\n具体步骤为：\n进入需要备份的服务器后台管理界面 进入Labs 选择导出成json文件 进入需要导入的服务器的后台管理界面 进入Labs，选择import 可能在import的时候，选择（.所有文件），否则找不到json文件 另，附上Ghost的中文网址：http://www.ghostchina.com/\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/ghostblog%E7%9A%84%E6%96%87%E4%BB%B6%E8%BF%81%E7%A7%BB/","section":"post","tags":["Ghost","blog","文件迁移"],"title":"blog的文件迁移"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/ghost/","section":"tags","tags":null,"title":"Ghost"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E6%96%87%E4%BB%B6%E8%BF%81%E7%A7%BB/","section":"tags","tags":null,"title":"文件迁移"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/nehe/","section":"tags","tags":null,"title":"Nehe"},{"body":"龙云尧个人博客，转载请注明出处。\nCSDN地址：http://blog.csdn.net/michael753951/article/details/72810534\n个人blog地址：http://yaoyl.cn/nehexue-xi-bi-ji-shi/\n概述 本部分博客将以nehe教程第2课，笔记（三）为蓝本，将Windows中完成的基础实验在Ubuntu中进行实现。\n在【Ubuntu环境配置】中我们已经对Ubuntu中的OpenGL环境进行了配置，并且完成了最基础的茶壶demo，接下来我们将进行实验相关的后续开发。\n需求分析 因为实验中我们需要终端接收到的数据能够在图形界面中实时显示出来，这里我们使用nehe教程的第二课内容，绘制一个矩形作为进度条，起始为0%，最高为100%。接着我们将让这个进度条能够对传输过来的信号产生反馈。将整个过程进行拆分，我们可以按照如下步骤进行实现。\n构建一个OpenGL窗口，能够根据本地按键实现进度条控制 让OpenGL的窗口能够接收其他终端发送过来的消息 让OpenGL窗口对接收到的信息进行一定的实时反馈（比如进度条变换） 实验 OpenGL窗口搭建 本次使用的代码是以nehe教程第二课中，Linux代码为蓝本，进行修改实现的。【代码链接】\n首先我们将窗口显示中的三角形去掉，留下一个长方形，同时将长方形的右边两个点和左边两个点重合以做出进度条为0%的感觉。代码如下：\n按钮控制的实现 我在初始化InitGL的时候，将square_len初始化为0，当有按键触发的时候，square_len++，这样就能够完成进度条的前进工作。\n在原始代码中，我们可以看到main函数中，有一个glutKeyboardFunc方法，传入了keyPressed的地址，在keyPressed中，定义了使用ESC按钮进行退出的方法。我们将在这里进行尝试，试试方向键左和方向键右能不能让窗口出现一些反馈。\n在经过不短的一段时间的寻找之后，我终于找到了在OpenGL中，各种按键的键值是在glut.h中预定义好的。\n参考一片CSDN博客【pengl键盘控制一】，我们可以发现在本次程序中，ESC按键确实也刚好是27，这是不是也就意味着我们可以直接按照上面的方法进行修改了？首先我们将ESC的宏定义值修改为102(十进制，对应0x66)，尝试使用左键退出窗体程序。\n但是很意外的，没有成功。是不是按键本身的键值并不是102？\n我对代码进行进一步修改，当有按键活动的时候，记录下来当前按键的键值，将其存进本地文件中。（亲测不能直接printf，因为根本不会显示出来，至于原因待会会有解释）代码如下：\n1/* The function called whenever a key is pressed. */ 2void keyPressed(unsigned char key, int x, int y) { 3 /* avoid thrashing this procedure */ 4 //usleep(100); 5 6 fp = fopen(\u0026#34;key_value.txt\u0026#34;, \u0026#34;a+\u0026#34;); // a+意味着在文本最后追加 7 fprintf(fp, \u0026#34;%d\\n\u0026#34;, key); 8 fclose(fp); 9 10 /* If escape is pressed, kill everything. */ 11 if (key == ESCAPE) { 12 /* shut down our window */ 13 glutDestroyWindow(window); 14 15 /* exit the program...normal termination. */ 16 exit(0); 17 } 18} 尝试按下F1~F12的按键，以及上下左右等按键，以及数字按键之后，我们发现txt文档中只记录下来了数字键值，根本没有其他的键值。\n为了解决这个问题，我特地打开了nehe的lesson10的linux代码（因为这一课会用到方向键进行控制）。发现原来上下左右这类按键需要在main函数中使用glutSpecialFunc方法，传入一个操作函数进行操作。这里我定义了一个specialKeyPressed方法。在尝试获取键值，并且成功之后，我开始在这里进行进度条的控制。\n1void specialKeyPressed(int key, int x, int y) { 2 //usleep(100); 3 4 /* 5 fp = fopen(\u0026#34;key_value.txt\u0026#34;, \u0026#34;a+\u0026#34;); 6 fprintf(fp, \u0026#34;%d\\n\u0026#34;, key); 7 fclose(fp); 8 */ 9 switch(key) { 10 case GLUT_KEY_LEFT: 11 square_len--; 12 if(square_len \u0026lt;= 0) square_len = 0; 13 break; 14 case GLUT_KEY_RIGHT: 15 square_len++; 16 if(square_len \u0026gt;= 100) square_len = 100; 17 break; 18 } 19} 为了避免越界，我们需要将square_len控制在0-100之间。同时我们直接使用glut中宏定义的键值，进行按键判断（我已经对键值进行过测试。发现和宏定义的键值确实一致）。\n到这里，我们完成了本次demo的step1，一个使用按键进行进度条控制的OpenGL窗口已经构建成功。\n在OpenGL创建的控制台窗口中使用网络协议传输 首先，我们需要知道，在之前的Socket编程中，我们使用的一直都是控制台窗口程序进行的测试，但是在本次实验中，我的理想状态是使用OpenGL建立的窗口作为server，新建一个控制台作为client，然后实验中使用client对server进行控制。\n我先定义了一个tcp_server.h头文件。\n1#include \u0026lt;sys/types.h\u0026gt; 2#include \u0026lt;sys/socket.h\u0026gt; 3#include \u0026lt;stdio.h\u0026gt; 4#include \u0026lt;netinet/in.h\u0026gt; 5#include \u0026lt;arpa/inet.h\u0026gt; 6#include \u0026lt;unistd.h\u0026gt; 7#include \u0026lt;string.h\u0026gt; 8#include \u0026lt;stdlib.h\u0026gt; 9#include \u0026lt;fcntl.h\u0026gt; 10#include \u0026lt;sys/shm.h\u0026gt; 11 12#define MYPORT 8887 13#define QUEUE 20 14 15bool tcp_server_init(int \u0026amp;server_sockfd, int \u0026amp;conn) { 16 ///定义sockfd 17 server_sockfd = socket(AF_INET,SOCK_STREAM, 0); 18 19 ///定义sockaddr_in 20 struct sockaddr_in server_sockaddr; 21 server_sockaddr.sin_family = AF_INET; 22 server_sockaddr.sin_port = htons(MYPORT); 23 server_sockaddr.sin_addr.s_addr = htonl(INADDR_ANY); 24 25 ///bind，成功返回0，出错返回-1 26 if(bind(server_sockfd,(struct sockaddr *)\u0026amp;server_sockaddr,sizeof(server_sockaddr))==-1) { 27 perror(\u0026#34;bind\u0026#34;); 28 return 0; 29 } 30 31 ///listen，成功返回0，出错返回-1 32 if(listen(server_sockfd,QUEUE) == -1) { 33 perror(\u0026#34;listen\u0026#34;); 34 return 0; 35 } 36 37 ///客户端套接字 38 struct sockaddr_in client_addr; 39 socklen_t length = sizeof(client_addr); 40 41 ///成功返回非负描述字，出错返回-1 42 conn = accept(server_sockfd, (struct sockaddr*)\u0026amp;client_addr, \u0026amp;length); 43 if(conn\u0026lt;0) { 44 perror(\u0026#34;connect\u0026#34;); 45 return 0; 46 } 47 //printf(\u0026#34;before_conn\\n\u0026#34;); 48 return 1; 49} 50 51bool tcp_server_close(int \u0026amp;server_sockfd, int \u0026amp;conn) { 52 close(conn); 53 close(server_sockfd); 54 return 1; 55} 方法一，DrawGLScene中接收消息 首先我尝试直接在main函数中没有进入glutMainLoop之前，建立tcp连接。（tcp_server_init(server_sockfd, conn);方法在上面已经给出来了）然后在DrawGLScene中接受消息，代码如下。\n1/* The main drawing function. */ 2void DrawGLScene() { 3 4 glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // Clear The Screen And The Depth Buffer 5 glLoadIdentity(); // Reset The View 6 7 memset(buffer,0,sizeof(buffer)); 8 int len = recv(conn, buffer, sizeof(buffer),0); 9 for(int i = 0; i\u0026lt;len; ++i) { 10 if(buffer[0] == 0x66) { 11 square_len++; 12 if(square_len \u0026gt;= 100) square_len = 100; 13 } else if(buffer[0] == 0x64) { 14 square_len--; 15 if(square_len \u0026lt;= 0) square_len = 0; 16 } 17 } 18 fputs(buffer, stdout); 19 send(conn, buffer, len, 0); 20 21 glTranslatef(-1.5f,0.0f,-6.0f); // Move Right 3 Units 22 23 // draw a square (quadrilateral) 24 glBegin(GL_QUADS); // start drawing a polygon (4 sided) 25 glVertex3f(-1.0f, 1.0f, 0.0f); // Top Left 26 glVertex3f(-1.0f+square_len*0.05, 1.0f, 0.0f); // Top Right 27 glVertex3f(-1.0f+square_len*0.05,-1.0f, 0.0f); // Bottom Right 28 glVertex3f(-1.0f,-1.0f, 0.0f); // Bottom Left 29 glEnd(); // done with the polygon 30 31 // swap buffers to display, since we\u0026#39;re double buffered. 32 glutSwapBuffers(); 33} 运行结果如图。\n刚看到这种情况的时候我以为是程序运行出错，于是经过很长一段时间的搜索才找到了一种解决办法，这个办法我待会会说，这里先说目前的这个问题的解决办法。\n首先我们要知道，为什么会出现这个问题，它其实是TCP_\\server_init函数中，执行到conn = accept(server_sockfd, (struct sockaddr*)\u0026amp;client\\_addr, \u0026amp;length);的时候，在那里停止了，结果导致glut没有继续绘制窗口，最终造成我们看到的窗口很奇怪。对accept稍作了解便知道，这个方法是提取出所监听套接字的等待连接队列中第一个连接请求，创建一个新的套接字，并返回指向该套接字的文件描述符。（参见【socket编程之accept()函数】）这个时候，所以，OpenGL中绘制的窗口会这么奇怪，其实就只是因为server在等待客户端的连接，所以才会继续没有往下执行而已。\n我们打开之前的tcp编程中，tcp_client_demo2项目，编译并且运行，和server成功建立上连接成功，理想中，这个时候应该是没有问题了，但是运行以后，显示依然有问题。\n这里我猜测是因为recv阻塞了整个进程，造成后续画笔绘制没办法绘制。因为当我在client中发送一个f之后，server中的窗口就立刻能够正常移动进度条了。\n最终的代码如下：\n1// 2// This code was created by Jeff Molofee \u0026#39;99 (ported to Linux/GLUT by Richard Campbell \u0026#39;99) 3// 4// If you\u0026#39;ve found this code useful, please let me know. 5// 6// Visit me at www.demonews.com/hosted/nehe 7// (email Richard Campbell at ulmont@bellsouth.net) 8// 9#include \u0026lt;GL/glut.h\u0026gt; // Header File For The GLUT Library 10#include \u0026lt;GL/gl.h\u0026gt; // Header File For The OpenGL32 Library 11#include \u0026lt;GL/glu.h\u0026gt; // Header File For The GLu32 Library 12#include \u0026lt;unistd.h\u0026gt; // Header File For sleeping. 13#include \u0026lt;stdio.h\u0026gt; 14#include \u0026#34;tcp_server.h\u0026#34; 15 16/* ASCII code for the escape key. */ 17#define ESCAPE 27 18#define VK_LEFT 37 19#define VK_RIGHT 39 20 21FILE *fp = NULL;//需要注意 22int square_len; 23 24/* TCP 链接 */ 25#define BUFFER_SIZE 1024 26int server_sockfd, conn; 27char buffer[BUFFER_SIZE]; 28bool server_init_flag; 29 30/* The number of our GLUT window */ 31int window; 32 33/* A general OpenGL initialization function. Sets all of the initial parameters. */ 34void InitGL(int Width, int Height) { // We call this right after our OpenGL window is created. 35 glClearColor(0.0f, 0.0f, 0.0f, 0.0f); // This Will Clear The Background Color To Black 36 glClearDepth(1.0); // Enables Clearing Of The Depth Buffer 37 glDepthFunc(GL_LESS); // The Type Of Depth Test To Do 38 glEnable(GL_DEPTH_TEST); // Enables Depth Testing 39 glShadeModel(GL_SMOOTH); // Enables Smooth Color Shading 40 41 glMatrixMode(GL_PROJECTION); 42 glLoadIdentity(); // Reset The Projection Matrix 43 44 gluPerspective(45.0f,(GLfloat)Width/(GLfloat)Height,0.1f,100.0f); // Calculate The Aspect Ratio Of The Window 45 46 glMatrixMode(GL_MODELVIEW); 47 48 square_len = 0; 49 server_init_flag = false; 50} 51 52/* The function called when our window is resized (which shouldn\u0026#39;t happen, because we\u0026#39;re fullscreen) */ 53void ReSizeGLScene(int Width, int Height) { 54 if (Height==0) // Prevent A Divide By Zero If The Window Is Too Small 55 Height=1; 56 57 glViewport(0, 0, Width, Height); // Reset The Current Viewport And Perspective Transformation 58 59 glMatrixMode(GL_PROJECTION); 60 glLoadIdentity(); 61 62 gluPerspective(45.0f,(GLfloat)Width/(GLfloat)Height,0.1f,100.0f); 63 glMatrixMode(GL_MODELVIEW); 64} 65 66/* The main drawing function. */ 67void DrawGLScene() { 68 69 glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // Clear The Screen And The Depth Buffer 70 glLoadIdentity(); // Reset The View 71 72 memset(buffer,0,sizeof(buffer)); 73 int len = recv(conn, buffer, sizeof(buffer),0); 74 for(int i = 0; i\u0026lt;len; ++i) { 75 if(buffer[0] == 0x66) { 76 square_len++; 77 if(square_len \u0026gt;= 100) square_len = 100; 78 } else if(buffer[0] == 0x64) { 79 square_len--; 80 if(square_len \u0026lt;= 0) square_len = 0; 81 } 82 } 83 fputs(buffer, stdout); 84 send(conn, buffer, len, 0); 85 86 glTranslatef(-1.5f,0.0f,-6.0f); // Move Right 3 Units 87 88 // draw a square (quadrilateral) 89 glBegin(GL_QUADS); // start drawing a polygon (4 sided) 90 glVertex3f(-1.0f, 1.0f, 0.0f); // Top Left 91 glVertex3f(-1.0f+square_len*0.05, 1.0f, 0.0f); // Top Right 92 glVertex3f(-1.0f+square_len*0.05,-1.0f, 0.0f); // Bottom Right 93 glVertex3f(-1.0f,-1.0f, 0.0f); // Bottom Left 94 glEnd(); // done with the polygon 95 96 // swap buffers to display, since we\u0026#39;re double buffered. 97 glutSwapBuffers(); 98} 99 100/* The function called whenever a key is pressed. */ 101void keyPressed(unsigned char key, int x, int y) { 102 103 /* If escape is pressed, kill everything. */ 104 if (key == ESCAPE) { 105 /* shut down our window */ 106 glutDestroyWindow(window); 107 108 if(!tcp_server_close(server_sockfd, conn)) { 109 exit(1); 110 } 111 /* exit the program...normal termination. */ 112 exit(0); 113 } 114} 115 116void specialKeyPressed(int key, int x, int y) { 117 //usleep(100); 118 switch(key) { 119 case GLUT_KEY_LEFT: 120 square_len--; 121 if(square_len \u0026lt;= 0) square_len = 0; 122 break; 123 case GLUT_KEY_RIGHT: 124 square_len++; 125 if(square_len \u0026gt;= 100) square_len = 100; 126 break; 127 } 128} 129 130int main(int argc, char **argv) { 131 132 133 /* Initialize GLUT state - glut will take any command line arguments that pertain to it or 134 X Windows - look at its documentation at http://reality.sgi.com/mjk/spec3/spec3.html */ 135 glutInit(\u0026amp;argc, argv); 136 137 /* Select type of Display mode: 138 Double buffer 139 RGBA color 140 Alpha components supported 141 Depth buffer */ 142 glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_ALPHA | GLUT_DEPTH); 143 144 /* get a 640 x 480 window */ 145 glutInitWindowSize(640, 480); 146 147 /* the window starts at the upper left corner of the screen */ 148 glutInitWindowPosition(0, 0); 149 150 /* Open a window */ 151 window = glutCreateWindow(\u0026#34;我的第一个长方形进度条demo\u0026#34;); 152 153 /* Register the function to do all our OpenGL drawing. */ 154 glutDisplayFunc(\u0026amp;DrawGLScene); 155 156 // 全屏 157 /* Go fullscreen. This is the soonest we could possibly go fullscreen. */ 158 //glutFullScreen(); 159 160 /* Even if there are no events, redraw our gl scene. */ 161 glutIdleFunc(\u0026amp;DrawGLScene); 162 163 /* Register the function called when our window is resized. */ 164 glutReshapeFunc(\u0026amp;ReSizeGLScene); 165 166 /* Register the function called when the keyboard is pressed. */ 167 glutKeyboardFunc(\u0026amp;keyPressed); 168 169 /* Register the function called when special keys (arrows, page down, etc) are pressed. */ 170 glutSpecialFunc(\u0026amp;specialKeyPressed); 171 172 /* Initialize our window. */ 173 InitGL(640, 480); 174 175 // 尝试在glutMainLoop之外建立tcp连接 176 tcp_server_init(server_sockfd, conn); 177 178 /* Start Event Processing Engine */ 179 glutMainLoop(); 180 181 return 1; 182} 方法二，在空闲回调函数中接受消息 使用空闲回调函数glutIdleFunc。参考博客【Idle回调函数的使用】（原出处未知），以及一篇很有用的博客【OpenGL下图形的交互控制[转]】\n在nehe的所有教程中，图像的转变均是在DrawGLScene实现的，这种方法在单纯的图像变换，不存在任何等待的时候，是没有问题的。但是一旦需要等待的时候，就会出现之前截图中那样，图片绘制上出现问题，画面显示会很不流畅，我刚开始接触的时候也以为是自己的代码写的有问题。为了解决这个问题，我们可以试试其他的方法。\n在博客中我们也知道，一般更新场景数据的时候，使用的就是Idle Callback。刚好符合我们的需求。下面我将说明一下代码的编写。\n首先在main函数中已经定义好的部分回调函数后面加上一行空闲回调函数。\n1 //tcp_server_init(server_sockfd, conn); 2 glutIdleFunc(\u0026amp;IdleFun); // idle 回调函数 有趣的是，我们发现，DrawGLScene方法也是在空闲回调函数中执行的。不过在main函数中出现两个DrawGLScene函数的时候，对程序的执行并不影响。\n接下来我们定义IdleFun。\n1void IdleFun() { // 回调函数，在控制台中的一些操作，需要在本部分进行控制 2 //printf(\u0026#34;test\\n\u0026#34;); 3 if(!server_init_flag) { 4 //square_len++; 5 //if(square_len \u0026gt;= 100) square_len = 0; 6 //printf(\u0026#34;init\\n\u0026#34;); 7 if(tcp_server_init(server_sockfd, conn)) printf(\u0026#34;success\\n\u0026#34;); 8 else printf(\u0026#34;false\\n\u0026#34;); 9 server_init_flag = true; 10 glutPostRedisplay(); 11 } else { 12 memset(buffer,0,sizeof(buffer)); 13 int len = recv(conn, buffer, sizeof(buffer),0); 14 for(int i = 0; i\u0026lt;len; ++i) { 15 if(buffer[0] == 0x66) { 16 square_len++; 17 if(square_len \u0026gt;= 100) square_len = 100; 18 } else if(buffer[0] == 0x64) { 19 square_len--; 20 if(square_len \u0026lt;= 0) square_len = 0; 21 } 22 } 23 fputs(buffer, stdout); 24 send(conn, buffer, len, 0); 25 glutPostRedisplay(); 26 } 27} 为了避免反复创建tcp连接，我们使用一个全局bool变量来标志是否已经创建连接。并且我们在刷新完场景数据之后，一定要调用glutPostRedisplay刷新当前屏幕，否则当前屏幕不会自动刷新，你也将看不到场景变化。具体参考可见【[译]GLUT教程 - glutPostRedisplay函数】。（这是一篇很好的博客）最终的参考代码如下。\n1 2#include \u0026lt;GL/glut.h\u0026gt; // Header File For The GLUT Library 3#include \u0026lt;GL/gl.h\u0026gt; // Header File For The OpenGL32 Library 4#include \u0026lt;GL/glu.h\u0026gt; // Header File For The GLu32 Library 5#include \u0026lt;unistd.h\u0026gt; // Header File For sleeping. 6#include \u0026lt;stdio.h\u0026gt; 7#include \u0026#34;tcp_server.h\u0026#34; 8 9/* ASCII code for the escape key. */ 10#define ESCAPE 27 11#define VK_LEFT 37 12#define VK_RIGHT 39 13 14FILE *fp = NULL;//需要注意 15int square_len; 16 17/* TCP 链接 */ 18#define BUFFER_SIZE 1024 19int server_sockfd, conn; 20char buffer[BUFFER_SIZE]; 21bool server_init_flag; 22 23/* The number of our GLUT window */ 24int window; 25 26/* A general OpenGL initialization function. Sets all of the initial parameters. */ 27void InitGL(int Width, int Height) { // We call this right after our OpenGL window is created. 28 glClearColor(0.0f, 0.0f, 0.0f, 0.0f); // This Will Clear The Background Color To Black 29 glClearDepth(1.0); // Enables Clearing Of The Depth Buffer 30 glDepthFunc(GL_LESS); // The Type Of Depth Test To Do 31 glEnable(GL_DEPTH_TEST); // Enables Depth Testing 32 glShadeModel(GL_SMOOTH); // Enables Smooth Color Shading 33 34 glMatrixMode(GL_PROJECTION); 35 glLoadIdentity(); // Reset The Projection Matrix 36 37 gluPerspective(45.0f,(GLfloat)Width/(GLfloat)Height,0.1f,100.0f); // Calculate The Aspect Ratio Of The Window 38 39 glMatrixMode(GL_MODELVIEW); 40 41 square_len = 0; 42 server_init_flag = false; 43 //if(!tcp_server_init(server_sockfd, conn)) exit(1); 44} 45 46/* The function called when our window is resized (which shouldn\u0026#39;t happen, because we\u0026#39;re fullscreen) */ 47void ReSizeGLScene(int Width, int Height) { 48 if (Height==0) // Prevent A Divide By Zero If The Window Is Too Small 49 Height=1; 50 51 glViewport(0, 0, Width, Height); // Reset The Current Viewport And Perspective Transformation 52 53 glMatrixMode(GL_PROJECTION); 54 glLoadIdentity(); 55 56 gluPerspective(45.0f,(GLfloat)Width/(GLfloat)Height,0.1f,100.0f); 57 glMatrixMode(GL_MODELVIEW); 58} 59 60/* The main drawing function. */ 61void DrawGLScene() { 62 glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // Clear The Screen And The Depth Buffer 63 glLoadIdentity(); // Reset The View 64 65 glTranslatef(-1.5f,0.0f,-6.0f); // Move Right 3 Units 66 67 // draw a square (quadrilateral) 68 glBegin(GL_QUADS); // start drawing a polygon (4 sided) 69 glVertex3f(-1.0f, 1.0f, 0.0f); // Top Left 70 glVertex3f(-1.0f+square_len*0.05, 1.0f, 0.0f); // Top Right 71 glVertex3f(-1.0f+square_len*0.05,-1.0f, 0.0f); // Bottom Right 72 glVertex3f(-1.0f,-1.0f, 0.0f); // Bottom Left 73 glEnd(); // done with the polygon 74 75 // swap buffers to display, since we\u0026#39;re double buffered. 76 glutSwapBuffers(); 77} 78 79/* The function called whenever a key is pressed. */ 80void keyPressed(unsigned char key, int x, int y) { 81 /* avoid thrashing this procedure */ 82 //usleep(100); 83 84 /* If escape is pressed, kill everything. */ 85 if (key == ESCAPE) { 86 /* shut down our window */ 87 glutDestroyWindow(window); 88 89 if(!tcp_server_close(server_sockfd, conn)) { 90 exit(1); 91 } 92 /* exit the program...normal termination. */ 93 exit(0); 94 } 95} 96 97void specialKeyPressed(int key, int x, int y) { 98 //usleep(100); 99 100 switch(key) { 101 case GLUT_KEY_LEFT: 102 square_len--; 103 if(square_len \u0026lt;= 0) square_len = 0; 104 break; 105 case GLUT_KEY_RIGHT: 106 square_len++; 107 if(square_len \u0026gt;= 100) square_len = 100; 108 break; 109 } 110} 111 112void IdleFun() { // 回调函数，在控制台中的一些操作，需要在本部分进行控制 113 //printf(\u0026#34;test\\n\u0026#34;); 114 if(!server_init_flag) { 115 //square_len++; 116 //if(square_len \u0026gt;= 100) square_len = 0; 117 //printf(\u0026#34;init\\n\u0026#34;); 118 if(tcp_server_init(server_sockfd, conn)) printf(\u0026#34;success\\n\u0026#34;); 119 else printf(\u0026#34;false\\n\u0026#34;); 120 server_init_flag = true; 121 glutPostRedisplay(); 122 } else { 123 memset(buffer,0,sizeof(buffer)); 124 int len = recv(conn, buffer, sizeof(buffer),0); 125 for(int i = 0; i\u0026lt;len; ++i) { 126 if(buffer[0] == 0x66) { 127 square_len++; 128 if(square_len \u0026gt;= 100) square_len = 100; 129 } else if(buffer[0] == 0x64) { 130 square_len--; 131 if(square_len \u0026lt;= 0) square_len = 0; 132 } 133 } 134 fputs(buffer, stdout); 135 send(conn, buffer, len, 0); 136 } 137 glutPostRedisplay(); 138} 139 140int main(int argc, char **argv) { 141 142 /* Initialize GLUT state - glut will take any command line arguments that pertain to it or 143 X Windows - look at its documentation at http://reality.sgi.com/mjk/spec3/spec3.html */ 144 glutInit(\u0026amp;argc, argv); 145 146 /* Select type of Display mode: 147 Double buffer 148 RGBA color 149 Alpha components supported 150 Depth buffer */ 151 glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_ALPHA | GLUT_DEPTH); 152 153 /* get a 640 x 480 window */ 154 glutInitWindowSize(640, 480); 155 156 /* the window starts at the upper left corner of the screen */ 157 glutInitWindowPosition(0, 0); 158 159 /* Open a window */ 160 window = glutCreateWindow(\u0026#34;我的第一个长方形进度条demo\u0026#34;); 161 162 /* Register the function to do all our OpenGL drawing. */ 163 glutDisplayFunc(\u0026amp;DrawGLScene); 164 165 // 全屏 166 /* Go fullscreen. This is the soonest we could possibly go fullscreen. */ 167 //glutFullScreen(); 168 169 /* Even if there are no events, redraw our gl scene. */ 170 glutIdleFunc(\u0026amp;DrawGLScene); 171 172 /* Register the function called when our window is resized. */ 173 glutReshapeFunc(\u0026amp;ReSizeGLScene); 174 175 /* Register the function called when the keyboard is pressed. */ 176 glutKeyboardFunc(\u0026amp;keyPressed); 177 178 //tcp_server_init(server_sockfd, conn); 179 glutIdleFunc(\u0026amp;IdleFun); // idle 回调函数 180 181 /* Register the function called when special keys (arrows, page down, etc) are pressed. */ 182 glutSpecialFunc(\u0026amp;specialKeyPressed); 183 184 /* Initialize our window. */ 185 InitGL(640, 480); 186 187 /* Start Event Processing Engine */ 188 glutMainLoop(); 189 190 return 1; 191} 完成这一步之后，基本上你就能够完成一个能够通过网络通信控制窗口界面的小demo了。\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/opengl%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%8D%81/","section":"post","tags":["nehe","OpenGL","C++","Ubuntu"],"title":"OpenGL学习笔记（十）"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/glgenlists/","section":"tags","tags":null,"title":"GlGenLists"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/glpolygonm/","section":"tags","tags":null,"title":"GlPolygonM"},{"body":"龙云尧个人博客，转载请注明出处。\nCSDN地址：http://blog.csdn.net/michael753951/article/details/71750809\n个人blog地址：http://yaoyl.cn/nehexue-xi-bi-ji-jiu/\n前言 本次笔记为nehe课程第11课的学习内容，通过实验，我们可以利用正弦函数绘制一个舞动的旗帜。在本次课程中，我们也将学习OpenGL中glPolygonMode函数对一个模型的正面和反面进行不同模式的绘图。\nglPolygonMode 函数介绍 本部分内容请先查看前人整理的博客【OpenGL学习笔记(7)多边形绘制】。请先仔细阅读该博客，理解如何区分模型中的正面反面（依然遵守右手定则，由描点的方向决定），以及3种填充方式（fill，line point）。\n代码分析 好了，到这里新的基本知识就已经讲述完毕了，我们看看作者是如何实现一个舞动的旗帜的。（基本的代码我就不分析了，只挑重点）\nInitGL中，在设置完纹理和透视的init之后，我们将插入glPolygonMode方法进行正反不同方式填充（以此从直观上区分正反面）。然后完成45*45个点阵的绘制。\n绘制中，作者将45*45个点阵均匀分布到一个长为9个单位，宽为9个单位，并且中点放置在原点上的正方形中（通过-4.5将中点移动到原点）。Z轴上，作者绘制了一个以x为自变量的正弦函数（刚好一个周期，至于为什么需要一个周期，在看完本篇博客之后你将会有答案）。\n接下来DrawGLScene开始进行图像旋转。这里我注释掉了作者的沿y轴和z轴旋转，仅仅保留沿x轴旋转，以方便观察。模型绘制和纹理绑定部分我不分析了，已经是很经典的代码了，就是利用45*45个点阵绘制44*44个正方形而已。\n接下来就是本此实验的重点了。一个if判断，这个判断实现了旗帜的舞动。\n1 if( wiggle_count == 2 ) 2 { 3 for( y = 0; y \u0026lt; 45; y++ ) 4 { 5 hold=points[0][y][2]; 6 for( x = 0; x \u0026lt; 44; x++) 7 { 8 points[x][y][2] = points[x+1][y][2]; 9 } 10 points[44][y][2]=hold; 11 } 12 wiggle_count = 0; 13 } 仔细阅读代码我们可以发现，作者通过wiggle_count计数，每两帧画面，就将45*45点阵中的z值向左移动一位，最左边的z值放到最右边，实现循环。所以整个if实现的就是将一个正弦波向左移动，这也就是为什么我们在实验中旗帜的挥动，波纹向左走的原因。\n剩下的代码就不用怎么解释了，都是和以前一样的代码了。\n回到一开始的问题，为什么在设置45*45点阵的z值的时候，要使用2*pi将正弦波控制在一个周期。可不可以乘以n*pi，或者2*n*pi，或者其他值。（提示，if条件中左移的时候，左端点会被移动到右端，此时这个端点有可能是一个突变点造成波形尖锐或者畸形）。\n最后附上效果图，首先是作者源代码的运行结果。\n然后是经过我注释掉y轴旋转，z轴旋转以及注释掉了整个if判断之后的图像。我们发现这个时候图像已经不能飘动了，而且上下两个边界呈现一种标准的正弦波的形式。\n最后是没有注释if，单单注释掉y轴旋转和z轴旋转的图像。喜事已经能够正常的飘动了。\n显示列表 nehe教程第12课显示列表。\n该课程主要讲解了glGenLists的使用样例。在使用之前，我们可以了解一下使用glGenLists能给你程序性能所带来的好处。这部分只是我们可以参考【OpenGL（八） 显示列表】以及【OpenGL显示列表】\n本次课程需要使用的光、材质和光照模型，就比较符合glGenLists的使用环境。\n我们来看看课程代码，作者首先定义了两个二位数组，boxcol用来存放立方体除了top之外，其他所有面的5种取，topcol用来存放立方体的顶部颜色。\n接下来作者定义了BuildLists方法，在这个方法中，作者使用了本次课程的核心——显示列表。使用方法大致如下。\n首先调用glGenListst生成一个显示列表（连续地址的数组形式），本次实验中作者生成了包含2个元素的数组，返回数组的首地址给box（不过定义的时候并没有定义成指针，有些奇怪） 接着作者使用glNewList和glEndList定义显示列表中的每一个元素。 在GLNewList方法中，作者传入了box指向的第一个显示元素，同时传入了一个参数GL_COMPILE。（注意：按照【OpenGL显示列表】中所告诉我们的知识，glNewList的函数原型为void glNewList(GLuint list,GLenum mode);说明一个显示列表的开始，其后的OpenGL函数存入显示列表中，直至调用结束表的函数（见下面）。参数list是一个正整数，它标志唯一的显示列表。参数mode的可能值有GL_COMPILE和GL_COMPILE_AND_EXECUTE。若要使后面的函数语句只存入而不执行，则用GL_COMPILE；若要使后面的函数语句存入表中且按瞬时方式执行一次，则用GL_COMPILE_AND_EXECUTE。） glNewList和glEndList中间定义矩阵的语句我这里就不再分析，和之前一样。 定义完显示列表中第一个元素之后，定义第二个元素时，需要将数组头指针向后移一位，所以代码中会有top=box+1;一行。 接着本次实验中作者修改了InitGL方法，他在Init的最后几行中，调用了3个glEnable方法，打开了GPU默认的灯光(GL_LIGHT0)，自定义的灯光(GL_LIGHTING)，以及颜色纹理(GL_COLOR_MATERIAL)，注意，如果不激活颜色纹理的话，在我们DrawGLScene中，将只能够贴上图片纹理，但是无法再往上添加颜色纹理（即之后的glColor3fv失效）。\nDrawGLScene方法中，作者或者了6层，逐渐减少的立方体。使用过程中，作者在定位完画笔，并且旋转坐标轴完成之后，使用glColor3fv将一开始宏定义的颜色作为纹理，然后调用glCallList快速构建矩形。本次实验使用显示列表之后，DrawGLScene代码量明显比以往少了很多。\n其他代码就不解释了。本次课程主要掌握显示列表的原理以及使用即可。\n最终的显示图像如下所示：\n稍微旋转一下图片可以看到如下效果：\n我们注释掉glEnable(GL_COLOR_MATERIAL);或者DrawGLScene中的glColor3fv方法，就发现显示的图片已经没有颜色纹理了。\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/opengl%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%9D/","section":"post","tags":["nehe","OpenGL","C++","飘动","glPolygonM","glGenLists"],"title":"OpenGL学习笔记（九）"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E9%A3%98%E5%8A%A8/","section":"tags","tags":null,"title":"飘动"},{"body":"龙云尧个人博客，转载请注明出处。\nCSDN地址：http://blog.csdn.net/michael753951/article/details/71702311\n个人blog地址：http://yaoyl.cn/nehexue-xi-bi-ji-ba/\n前言 本部分单独讲Lesson10的内容，本次讲述重点将不再是作者在代码中各种方法如何如何调用，比如如何实现旋转，如何绘制图像，如何实现透明，如何实现步进等等，这个在我前面7篇笔记中已经有详细的说明了，本篇笔记将不再重复，如果有什么疑问可以翻我之前的笔记或者上网查询。\n本次实验参变量不少，作者通过代码带我们真正的实现了一个3D世界，我们可以在这个3D世界里面自由的走动和观察。（也是我们玩的譬如《我的世界》这样的第一视角游戏的世界构建的基本）\n文中给出了几个数据结构——tagVERTEX，tagTRIANGLE，tagSECTOR。vertex用来存放每一个坐标点的空间直角坐标系中的位置（x, y, z）和需要展示的图像的位置（u, v），trandgle表示三角形中存在的3个点，包含3个tagVERTEX（事实上，现今大多数人都是用无数这样的三角形来近似/逼近一个曲面），然后sector表示一个由许多三角形构成的体的结构。文中，所有的与体相关的三角形都放在一个文件中，通过读写文件来对体进行操作。\n代码分析 好了，大致的介绍已经完成，我们接着看看作者是如何一步一步完成这个3D世界的建设的。（晚上课程中已经解释的地方我这里不再重复，而还未解释清楚的地方我将重点解释）\n作者首先定义了一个readstr方法，用来读取文件f中的内容，将其读进string指向的内存空间。接着定义了一个SetupWorld方法，将\u0026quot;data/world.txt\u0026quot;中的内容调用readstr方法读取内容，并将其写进 tagSECTOR 类的变量 sector1 中，关于txt中数据格式需要在这里说明一下——每一行代表一个坐标点的信息，包含5个变量，分别为该点的x轴坐标、y轴坐标、z轴坐标、该点对应的渲染图片的点的x坐标，该点对应的渲染图片的点的y坐标。每3行（即3个点）构成一个3角形。前3个变量各位可能还有印象，后两个点可以回去看看《nehe学习笔记（五）》，找找glTexCoord2f方法的说明。\n然后是和以前一样的LoadBMP以及LoadGLTextures方法。InitGL方法中，打开纹理映射和深度测试，同时调用之前定义好的SetupWorld方法读入所有三角形的信息。\n接下来就是第一个重头戏DrawGLScene了，所有的动作都是在这里展示出来的，理解这一块的知识对我们将来自己构建3D世界有莫大的帮助。\n该部分首先定义了5个浮点数x_m, y_m, z_m, u_m, v_m，分别用来对应tagVERTEX中的5个5种元素。使用xtrans \u0026amp; ytrans \u0026amp; ztrans 分别表示画笔起笔处的x坐标 \u0026amp; y坐标 \u0026amp; z坐标（也就是说在glTranslatef中将被用到。），接着定义了xtrans \u0026amp; ztrans \u0026amp; ytrans，这三个值决定了画笔起点沿X轴、Y轴、Z轴移动的长度，也即决定了画笔的起点位置（也即整张地图的位置），sceneroty则据定了角色的视觉角度。\n变量中我们需要注意，本次实验中，沿着某轴移动的长度通常以 pos 结尾作为变量，而旋转的角度通常以 ros 结尾作为变量，谨记这一点对我们后期按键控制的理解会有帮助。\n接着作者调用两次glRotatef，先将图像沿着x轴旋转一定角度(lookupdown)，完成抬头动作，再将图像沿着y轴旋转一定角度(sceneroty)，完成正面朝向的转换。\n现在我们已经确定了抬头角度和视角，接下来就要设定你现在所处的位置了——其实就是反方向移动整个3D模型即可，这也就是为什么在trans赋值的时候，会取负数的原因。\n在上一步骤调用glTranslatef已经绘点结束之后，我们将开始进行图像绘制，这个部分就不细说了。我对文本中前3行（第一个三角形）标稍作图解，剩下的你可以自己尝试继续绘制。\n到这一步，绘制完成，接下来的KillGLWindow以及CreateGLWindow以及WndProc和之前一致，不解释。\n第二个重头戏来了，WinMain。这个部分我们将实现通过按键控制你在整个3D世界中的游荡（其实是在控制整个3D世界移动）。下面我将仔细解释。\nB键设置透明，这个之前笔记解释过，记得disable深度测试，然后enable透明。F键设置画质，不解释了。\n接下来是按up键，这个时候首先会更改xpos和zpos，为什么会如此修改，期初我也很疑惑，不过在画了一张图解之后，便豁然开朗了。我们根据代码可以知道heading这个变量代表了你当前正脸朝向与Z轴正向的角度（因为heading赋值给了yrot，而yrot是绕着y轴旋转的角度，所以heading就是你转身的角度啦）。\n通过下图我们便可以知道为什么使用UP键向前走的时候，作者使用如下两行代码实现移动了。\n1xpos -= (float)sin(heading*piover180) * 0.05f; 2zpos -= (float)cos(heading*piover180) * 0.05f; 接着作者在pos变换完成以后，稍稍微修改walkbias变量，它将影响到ypos，从而模仿人行走的时候的高低起伏，让人更加自然。\n接下来的 left, right, page_up \u0026amp; page_down 按键的反馈设置就基本不用解释啦，你按照右手定则稍稍为跟着做一下就能够理解啦。需要注意的是，在WinMain中，所有的pos和trans都是从观察者的角度进行变换的，真正的变换是在DrawGLScene，在DrawGLScene方法中我们已经对数据做了特殊处理以保证显示正常自然。\n好了，到这里本章节的代码也就解释完毕了，粗读代码会觉得很容易，因为都是我们之前已经掌握的内容，但是细想作者是如何一步一步具体实现的时候，情况就会复杂很多。通过不断画图和翻以前的代码，我才不断的深入理解整个OpenGL的原理，以及3D模型的构建原理和过程。至此，OpenGL应该算是正式入门了吧。\n稍稍留一个小问题，你知道为什么作者在DrawGLScene方法中，xtrans直接赋值为xpos的负值，ztrans同样直接赋值为zpos的负值，sceneroty也是直接取了yrot的负值（不过为了严谨，又添了一个360作为进位），偏偏ytrans要在赋值为walkbias的负值之后，还要减去一个0.25呢？（提示，walkbias乘上sin之后有正有负，如果不添加一个常数，你的“眼睛”就会在地板所在的y=0面上不断上下抖动，而添加0.25之后，则是将你的“眼睛”提高到了一定的高度，让你有了身高的感觉，从而更加自然）\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/opengl%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%85%AB/","section":"post","tags":["nehe","OpenGL","C++","变换"],"title":"OpenGL学习笔记（八）"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E5%8F%98%E6%8D%A2/","section":"tags","tags":null,"title":"变换"},{"body":"龙云尧个人博客，转载请注明出处。\nCSDN地址：http://blog.csdn.net/michael753951/article/details/71511785\n个人blog地址：http://yaoyl.cn/nehexue-xi-bi-ji-qi-2017-05-09-20-59/\n我们在前六个部分已经尝试了nehe教程中1-8可得所有内容，接下来第七部分将实现一个简单的实验，这个实验将涵盖前面所有的内容，以作为一个前期总结。\n前期准备 在实验之前，我们需要知道一个OpenGL中的基本概念。OpenGL中glEnable方法的使用。关于这个功能函数的使用以及参数设定，你可以点击【gl.glenable()介绍】以及【glEnable(GL_DEPTH_TEST) 有什么用？】进行查看。以下关于glenable的内容转载自上述第二篇博客。\n在InitGL() 或者类似的初始化OpenGL的地方，会有glEnable(GL_DEPTH_TEST);\n启用了之后，OpenGL在绘制的时候就会检查，当前像素前面是否有别的像素，如果别的像素挡道了它，那它就不会绘制，也就是说，OpenGL就只绘制最前面的一层。\n当我们需要绘制透明图片时，就需要关闭它 glDisable(GL_DEPTH_TEST); 并且打开混合 glEnable(GL_BLEND);\n而且还需要设置使用的透明度 glColor4f(1.0f,1.0f,1.0f,0.5f); 这样就是一半的显示了，设置为1就是不透明\nglBlendFunc(GL_SRC_ALPHA,GL_ONE); 基于源像素Alpha通道值的半透明混合函数\n在实验一以及后续的几个实验中，我们Enable的都是传入GL_DEPTH_TEST作为参数启用深度测试。并立刻在glEnable方法后面调用glDepthFunc(GL_LEQUAL);方法进行前景像素的显示设置。\n这个概念在之前的实验中有所涉及，但是我们当时没有关注，这里我们将将其单独拿出来进行分析。**本部分以下部分均为转载。**转载来源为【glDepthFunc】\n函数原型：\nvoid glDepthFunc(GLenum func); 函数功能：\n指定“目标像素与当前像素在z方向上值大小比较”的函数，符合该函数关系的目标像素才进行绘制，否则对目标像素不予绘制。 参数说明：\nfunc指定深度比较函数，GL_NEVER,GL_LESS,GL_EQUAL,GL_LEQUAL,GL_GREATER,GL_NOTE_QUAL,GL_GEQUAL,GL_ALWAYS,缺省值GL_LESS， GL_NEVER,不通过（输入的深度值不取代参考值）\nGL_LESS,如果输入的深度值小于参考值，则通过\nGL_EQUAL,如果输入的深度值等于参考值，则通过\nGL_LEQUAL,如果输入的深度值小于或等于参考值，则通过\nGL_GREATER,如果输入的深度值大于参考值，则通过\nGL_NOTE_QUAL,如果输入的深度值不等于参考值，则通过\nGL_GEQUAL,如果输入的深度值大于或等于参考值，则通过\nGL_ALWAYS,总是通过（输入的深度值取代参考值）\n描述：\n通过目标像素与当前像素在z方向上值大小的比较是否满足参数指定的条件，来决定在深度（z方向）上是否绘制该目标像素。该函数只有启用“深度测试”时才有效，参考glEnable(GL_DEPTH_TEST)和glDisable(GL_DEPTH_TEST) 代码分析 前期准备能够帮助我们更好的理解作者在代码中的方法调用，，也能帮助我们更加深入的了解OpenGL的运行机制。我们接下来探讨本次实验中的实现方式。\n根据Lesson1课程给我们大基建好的框架结构以及我们整理出来的那张结构图，我们可以快速理解本次实验代码。\n首先定义了一个stars结构体，用来存放每一个星星的RGB值，与中心点的距离以及选装角度。\n1typedef struct // Create A Structure For Star 2{ 3 int r, g, b; // Stars Color 4 GLfloat dist, // Stars Distance From Center 5 angle; // Stars Current Angle 6} 7stars; 8stars star[num]; // Need To Keep Track Of \u0026#39;num\u0026#39; Stars 接着是LoadBMP和LoadGLTextures，这个和以前的实验代码无异，只需要改一下读入的文件名即可。ReSizeGLScene函数同样不需要修改。\n接下来的InitGL开始，将会和第一节课开始出现不一样。\n首先我们在前期准备中已经知道了glEnable的意义，并且我们也已经知道，深度测试和透明两种功能不能同时开启。而我们在上一次实验中在设置透明的时候，也曾经写过如下代码：\n1 glEnable(GL_BLEND); // Turn Blending On 2 glDisable(GL_DEPTH_TEST); // Turn Depth Testing Off 又因为本次实验需要直接使用透明，所以我们在InitGL中将不再glDisable(GL_BLEND)，而是直接glEnable(GL_BLEND)。\n接着就是很重要的一个方法了——DrawGLScene，这个地方，作者将星星的旋转以及着色代码在这里进行实现。\n1int DrawGLScene(GLvoid) // Here\u0026#39;s Where We Do All The Drawing 2{ 3 glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // Clear The Screen And The Depth Buffer 4 glBindTexture(GL_TEXTURE_2D, texture[0]); // Select Our Texture 5 6 for (loop=0; loop\u0026lt;num; loop++) // Loop Through All The Stars 7 { 8 glLoadIdentity(); // Reset The View Before We Draw Each Star 9 glTranslatef(0.0f,0.0f,zoom); // Zoom Into The Screen (Using The Value In \u0026#39;zoom\u0026#39;) 10 glRotatef(tilt,1.0f,0.0f,0.0f); // Tilt The View (Using The Value In \u0026#39;tilt\u0026#39;) 11 glRotatef(star[loop].angle,0.0f,1.0f,0.0f); // Rotate To The Current Stars Angle 12 glTranslatef(star[loop].dist,0.0f,0.0f); // Move Forward On The X Plane 13 glRotatef(-star[loop].angle,0.0f,1.0f,0.0f); // Cancel The Current Stars Angle 14 glRotatef(-tilt,1.0f,0.0f,0.0f); // Cancel The Screen Tilt 15 16 if (twinkle) 17 { 18 glColor4ub(star[(num-loop)-1].r,star[(num-loop)-1].g,star[(num-loop)-1].b,255); 19 glBegin(GL_QUADS); 20 glTexCoord2f(0.0f, 0.0f); glVertex3f(-1.0f,-1.0f, 0.0f); 21 glTexCoord2f(1.0f, 0.0f); glVertex3f( 1.0f,-1.0f, 0.0f); 22 glTexCoord2f(1.0f, 1.0f); glVertex3f( 1.0f, 1.0f, 0.0f); 23 glTexCoord2f(0.0f, 1.0f); glVertex3f(-1.0f, 1.0f, 0.0f); 24 glEnd(); 25 } 26 27 glRotatef(spin,0.0f,0.0f,1.0f); 28 glColor4ub(star[loop].r,star[loop].g,star[loop].b,255); 29 glBegin(GL_QUADS); 30 glTexCoord2f(0.0f, 0.0f); glVertex3f(-1.0f,-1.0f, 0.0f); 31 glTexCoord2f(1.0f, 0.0f); glVertex3f( 1.0f,-1.0f, 0.0f); 32 glTexCoord2f(1.0f, 1.0f); glVertex3f( 1.0f, 1.0f, 0.0f); 33 glTexCoord2f(0.0f, 1.0f); glVertex3f(-1.0f, 1.0f, 0.0f); 34 glEnd(); 35 36 spin+=0.01f; 37 star[loop].angle+=float(loop)/num; 38 star[loop].dist-=0.01f; 39 if (star[loop].dist\u0026lt;0.0f) 40 { 41 star[loop].dist+=5.0f; 42 star[loop].r=rand()%256; 43 star[loop].g=rand()%256; 44 star[loop].b=rand()%256; 45 } 46 } 47 return TRUE; // Everything Went OK 48} 如果我们在之前的课程中已经很深入的了解了的话，这一次的DrawScene就比较容易理解啦，我也就不在这里重复赘述了。\n对winMain稍作修改。\n1int WINAPI WinMain( HINSTANCE hInstance, // Instance 2 HINSTANCE hPrevInstance, // Previous Instance 3 LPSTR lpCmdLine, // Command Line Parameters 4 int nCmdShow) // Window Show State 5{ 6 MSG msg; // Windows Message Structure 7 BOOL done=FALSE; // Bool Variable To Exit Loop 8 9 // Ask The User Which Screen Mode They Prefer 10 if (MessageBox(NULL,\u0026#34;Would You Like To Run In Fullscreen Mode?\u0026#34;, \u0026#34;Start FullScreen?\u0026#34;,MB_YESNO|MB_ICONQUESTION)==IDNO) 11 { 12 fullscreen=FALSE; // Windowed Mode 13 } 14 15 // Create Our OpenGL Window 16 if (!CreateGLWindow(\u0026#34;NeHe\u0026#39;s Animated Blended Textures Tutorial\u0026#34;,640,480,16,fullscreen)) 17 { 18 return 0; // Quit If Window Was Not Created 19 } 20 21 while(!done) // Loop That Runs While done=FALSE 22 { 23 if (PeekMessage(\u0026amp;msg,NULL,0,0,PM_REMOVE)) // Is There A Message Waiting? 24 { 25 if (msg.message==WM_QUIT) // Have We Received A Quit Message? 26 { 27 done=TRUE; // If So done=TRUE 28 } 29 else // If Not, Deal With Window Messages 30 { 31 TranslateMessage(\u0026amp;msg); // Translate The Message 32 DispatchMessage(\u0026amp;msg); // Dispatch The Message 33 } 34 } 35 else // If There Are No Messages 36 { 37 // Draw The Scene. Watch For ESC Key And Quit Messages From DrawGLScene() 38 if ((active \u0026amp;\u0026amp; !DrawGLScene()) || keys[VK_ESCAPE]) // Active? Was There A Quit Received? 39 { 40 done=TRUE; // ESC or DrawGLScene Signalled A Quit 41 } 42 else // Not Time To Quit, Update Screen 43 { 44 SwapBuffers(hDC); // Swap Buffers (Double Buffering) 45 if (keys[\u0026#39;T\u0026#39;] \u0026amp;\u0026amp; !tp) 46 { 47 tp=TRUE; 48 twinkle=!twinkle; 49 } 50 if (!keys[\u0026#39;T\u0026#39;]) 51 { 52 tp=FALSE; 53 } 54 55 if (keys[VK_UP]) 56 { 57 tilt-=0.5f; 58 } 59 60 if (keys[VK_DOWN]) 61 { 62 tilt+=0.5f; 63 } 64 65 if (keys[VK_PRIOR]) 66 { 67 zoom-=0.2f; 68 } 69 70 if (keys[VK_NEXT]) 71 { 72 zoom+=0.2f; 73 } 74 75 if (keys[VK_F1]) // Is F1 Being Pressed? 76 { 77 keys[VK_F1]=FALSE; // If So Make Key FALSE 78 KillGLWindow(); // Kill Our Current Window 79 fullscreen=!fullscreen; // Toggle Fullscreen / Windowed Mode 80 // Recreate Our OpenGL Window 81 if (!CreateGLWindow(\u0026#34;NeHe\u0026#39;s Animated Blended Textures Tutorial\u0026#34;,640,480,16,fullscreen)) 82 { 83 return 0; // Quit If Window Was Not Created 84 } 85 } 86 } 87 } 88 } 89 90 // Shutdown 91 KillGLWindow(); // Kill The Window 92 return (msg.wParam); // Exit The Program 93} 同样，很好理解的代码我就不重复解释了。最终运行的结果如图所示。\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/opengl%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%83/","section":"post","tags":["nehe","OpenGL","C++"],"title":"OpenGL学习笔记（七）"},{"body":"龙云尧个人博客，转载请注明出处。\nCSDN地址：http://blog.csdn.net/michael753951/article/details/71407260\n个人blog地址：http://yaoyl.cn/nehexue-xi-bi-ji-liu-2017-05-08-13-54/\n混合 我们在很多场合都过这样的经历，在设置某些色块的颜色的时候，我们不光要设置它的RGB值，还可能需要设置它的Alpha值。一般理解上，我们都认为这个Alpha值代表了当前色块的透明度。这样只是最外在的理解，其实图像的透明是一个颜色的混合过程，当有两种颜色混叠的时候，这个Alpha是用来控制两种颜色的混色程度的一种值。\n颜色的混合公式为(Rs*As + Rd (1 - As), Gs*As + Gd (1 - As), Bs*As + Bs (1 - As), As*As + Ad (1 - As))。其中As表示前景色的Alpha值，Rs表示前景色的R值，Rd表示背景色的R值，Gs \u0026amp; Gd，Bs \u0026amp; Bd类似。最终计算出来的RGB值就是混合之后显示出来的RGB值。\n举个例子，我们已经知道背景色是（255,255,255），现在有一个（128,128,128）的色块需要层叠在背景色块之上，并且我们先假设Alpha值为1.0，那我们很容易计算出来最终的显示的RGB值为（128,128,128），这个时候我们就从直观上认为前景色完全不透明。而如果Alpha为0.0，计算结果显然为（255,255,255），这个时候我们就认为前景色完全透明。其他的Alpha值类似。\n当我们有多张图片需要层叠的时候，并且每一层都有一个Alpha值的时候，我们需要怎么计算呢？\n从我们的直观上可以想象出来，当我们在看一堆颜色混合而成的颜色的时候，首先是离我们最近的pic1作为前景，其后面的pic2-picn糊混合结果作为背景，混合出来的结果。而pic2-picn是如何混合的呢？它是由pic2作为前景，pic3-picn混合结果作为背景混合出来的结果。如此递归下去知道最后两张图片混合完成。\n好了，到这里我们应该很了解在OpenGL中颜色混合的原理了。接下来动手试试。\n首先需要修改LoadGLTextures方法中的文件名，因为本次实验使用的是一张新的位图。将\u0026quot;Data/Crate.bmp\u0026quot;改成\u0026quot;Data/glass.bmp\u0026quot;即可。\n然后我们需要修改InitGL方法。在使用glEnable(GL_LIGHT1);激活光源之后，我们添加新的两行glColor4f和glBlendFunc方法。\n不过需要注意的是，在使用glColor4f以全亮度进行绘制的时候，它会和光照系统glLightfv产生的效果互相排斥。具体的排斥方式请参看【 opengl纹理,光照,glColor4f(),混合】.\n另外在glBlendFunc中，为什么会取GL_SRC_ALPHA,GL_ONE，以及GL_SRC_ALPHA,GL_ONE这两个参数会对最终的效果产生什么影响。我们可以参考【 颜色混合opengl】\n最后，我们修改WinMain就能够结束本次实验。接着上一次实验的代码.\n1 if (keys[VK_LEFT]) // Left方向键按下了么? 2 { 3 yspeed-=0.01f; // 若是, 减少yspeed 4 } 我们增加如下的代码。这几行监视B键是否按下。如果是的话，计算机检查混合选项是否已经打开。然后将其置为相反的状态。\n1// Blending Code Starts Here 2 if (keys[\u0026#39;B\u0026#39;] \u0026amp;\u0026amp; !bp) 3 { 4 bp = TRUE; 5 blend = !blend; 6 if (blend) 7 { 8 glEnable(GL_BLEND); // Turn Blending On 9 glDisable(GL_DEPTH_TEST); // Turn Depth Testing Off 10 } 11 else 12 { 13 glDisable(GL_BLEND); // Turn Blending Off 14 glEnable(GL_DEPTH_TEST); // Turn Depth Testing On 15 } 16 } 17 if (!keys[\u0026#39;B\u0026#39;]) 18 { 19 bp = FALSE; 20 } 21 // Blending Code Ends Here 到这里本次课程就结束了，我们试着按下B键查看透视效果怎样，另外我们还可以看看当前代码下，打开光源和不打开光源下，按下B键查看透视效果会有什么区别。思考为什么（光源和glColor4f的冲突）。\n如果我们将InitGL中的glBlendFunc(GL_SRC_ALPHA,GL_ONE);改成glBlendFunc(GL_SRC_ALPHA,GL_ONE_MINUS_SRC_ALPHA);又会有什么效果。同样请思考为什么（注意混合方式glBlendFunc中，不同参数下，图像混合的计算方式）。\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/opengl%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%85%AD/","section":"post","tags":["nehe","OpenGL","C++","混合"],"title":"OpenGL学习笔记（六）"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E6%B7%B7%E5%90%88/","section":"tags","tags":null,"title":"混合"},{"body":"龙云尧个人博客，转载请注明出处。\nCSDN地址：http://blog.csdn.net/michael753951/article/details/71316132\n个人blog地址：http://yaoyl.cn/nehexue-xi-bi-ji-wu/\n这次我们将尝试Lesson6和Lesson7的内容。这个部分我们将学习怎么给一个模型进行纹理映射（其实就是贴图）。\n环境搭建 这次实验因为需要使用OpenGL的glaux.h库头使用位图对构建的图形进行纹理映射。所以我们需要进一步进行环境搭建。（注：环境搭建很麻烦，因为微软的VS环境很乱）\n如何布置这个库头可以参考【 VS2008无法打开gl/glaux.h头文件的解决方法】我使用的是方法4，测试能够正确include库头。\n在高版本的VS中，因为VS使用的是自己重新修改过的C++，所以在进行编译的过程中，可能会出现ERROR LNK2019报错，无法解析“_sscanf,_sscanf_s”，这个时候我们可以参考【 VS2015 无法解析的外部符号 __vsnwprintf_s】\n如果我们在使用AUX_RGBImageRec定义变量的时候，系统没有报错的话，就说明我们本次基本的环境已经搭建好了。\n另外，因为我们在实验中需要使用fopen，而微软的VS2015中会强行报错，为了避免不必要的麻烦，我们需要关掉fopen的报错。这个部分我们可以参考【百度经验：VS2013中如何解决error C4996: 'fopen'问题】\n开始实现 如果没出什么问题的话，到这里我们应该能够正常的编写这一刻的代码了。（如果还有什么报错请尝试自行解决或者戳我）。\n本次需要在3维图像上添加纹理映射，首先需要的是读取位图像文件。读取的代码如下。\n1AUX_RGBImageRec *LoadBMP(char *Filename) // Loads A Bitmap Image 2{ 3 FILE *File=NULL; // File Handle 4 5 if (!Filename) // Make Sure A Filename Was Given 6 { 7 return NULL; // If Not Return NULL 8 } 9 10 File=fopen(Filename,\u0026#34;r\u0026#34;); // Check To See If The File Exists 11 12 if (File) // Does The File Exist? 13 { 14 fclose(File); // Close The Handle 15 return auxDIBImageLoad(Filename); // Load The Bitmap And Return A Pointer 16 } 17 18 return NULL; // If Load Failed Return NULL 19} 20 21int LoadGLTextures() // Load Bitmaps And Convert To Textures 22{ 23 int Status=FALSE; // Status Indicator 24 25 AUX_RGBImageRec *TextureImage[1]; // Create Storage Space For The Texture 26 27 memset(TextureImage,0,sizeof(void *)*1); // Set The Pointer To NULL 28 29 // Load The Bitmap, Check For Errors, If Bitmap\u0026#39;s Not Found Quit 30 if (TextureImage[0]=LoadBMP(\u0026#34;Data/NeHe.bmp\u0026#34;)) 31 { 32 Status=TRUE; // Set The Status To TRUE 33 34 glGenTextures(1, \u0026amp;texture[0]); // Create The Texture 35 36 // Typical Texture Generation Using Data From The Bitmap 37 glBindTexture(GL_TEXTURE_2D, texture[0]); 38 glTexImage2D(GL_TEXTURE_2D, 0, 3, TextureImage[0]-\u0026gt;sizeX, TextureImage[0]-\u0026gt;sizeY, 0, GL_RGB, GL_UNSIGNED_BYTE, TextureImage[0]-\u0026gt;data); 39 glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR); 40 glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR); 41 } 42 43 if (TextureImage[0]) // If Texture Exists 44 { 45 if (TextureImage[0]-\u0026gt;data) // If Texture Image Exists 46 { 47 free(TextureImage[0]-\u0026gt;data); // Free The Texture Image Memory 48 } 49 50 free(TextureImage[0]); // Free The Image Structure 51 } 52 53 return Status; // Return The Status 54} 第一个函数LoadBMP不需要解释，主要功能就是探寻目的位置中是否存在该图像文件。如果存在就调用auxDIBImageLoad将位图加载成渲染文件返回出来。\n第二个函数LoadGLTextures要稍微注意一下，在本次实验中是很重要的一个功能函数。\n函数中定义了一个LoadGLTextures数组用来存放位图的句柄，这里因为我们只读取了一张位图，所以只开了一个大小的数组。\n接着调用LoadBMP将位图转换成为纹理渲染文件存进TextureImage， glGenTextures(1, \u0026amp;texture[0]) 告诉OpenGL我们想生成一个纹理名字，glBindTexture将纹理名字 texture[0] 绑定到纹理目标上。\n然后我们调用glTexImage2D进行纹理的创建。然后使用glTexParameteri对图像进行放大和缩小的滤波器进行设置。\n最后再纹理穿件完成之后，我们需要释放掉纹理渲染数组中的内容。\n整个纹理渲染工作到这里也就结束了。我们对InitGL稍作修改，使用LoadGLTextures检验位图是否存在，然后调用glEnable启用映射\n1int InitGL(GLvoid) // 此处开始对OpenGL进行所有设置 2{ 3 if (!LoadGLTextures()) // 调用纹理载入子例程 4 { 5 return FALSE; // 如果未能载入，返回FALSE 6 } 7 glEnable(GL_TEXTURE_2D); // 启用纹理映射 8 glShadeModel(GL_SMOOTH); // 启用阴影平滑 9 glClearColor(0.0f, 0.0f, 0.0f, 0.5f); // 黑色背景 10 glClearDepth(1.0f); // 设置深度缓存 11 glEnable(GL_DEPTH_TEST); // 启用深度测试 12 glDepthFunc(GL_LEQUAL); // 所作深度测试的类型 13 glHint(GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST); // 真正精细的透视修正 14 return TRUE; // 初始化 OK 15} 最后我们按照惯例，修改DrawGLScene方法，需要注意的是，在将纹理贴上模型的时候，需要调用glTexCoord2f方法，第一个参数是X坐标，0.0是纹理的左侧，0.5是纹理的中点，1.0是纹理的右侧。第二个参数是Y坐标，0.0是纹理的底部，0.5是纹理的中点，1.0是纹理的顶部。将4个点全部绑定在张芳行上面之后，便能够正常的显示了。需要注意的是，在glTexCoord2f方法中，参考系是以图像的右下角作为原点，左边为X轴正方向，上方为Y轴正方向（和绘图中的直角坐标系的设定相似）。\n1int DrawGLScene(GLvoid) // Here\u0026#39;s Where We Do All The Drawing 2{ 3 glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // Clear The Screen And The Depth Buffer 4 glLoadIdentity(); // Reset The View 5 glTranslatef(0.0f,0.0f,-5.0f); 6 7 glRotatef(xrot,1.0f,0.0f,0.0f); 8 glRotatef(yrot,0.0f,1.0f,0.0f); 9 glRotatef(zrot,0.0f,0.0f,1.0f); 10 11 glBindTexture(GL_TEXTURE_2D, texture[0]); 12 13 glBegin(GL_QUADS); 14 // Front Face 15 glTexCoord2f(0.0f, 0.0f); glVertex3f(-1.0f, -1.0f, 1.0f); 16 glTexCoord2f(1.0f, 0.0f); glVertex3f( 1.0f, -1.0f, 1.0f); 17 glTexCoord2f(1.0f, 1.0f); glVertex3f( 1.0f, 1.0f, 1.0f); 18 glTexCoord2f(0.0f, 1.0f); glVertex3f(-1.0f, 1.0f, 1.0f); 19 // Back Face 20 glTexCoord2f(1.0f, 0.0f); glVertex3f(-1.0f, -1.0f, -1.0f); 21 glTexCoord2f(1.0f, 1.0f); glVertex3f(-1.0f, 1.0f, -1.0f); 22 glTexCoord2f(0.0f, 1.0f); glVertex3f( 1.0f, 1.0f, -1.0f); 23 glTexCoord2f(0.0f, 0.0f); glVertex3f( 1.0f, -1.0f, -1.0f); 24 // Top Face 25 glTexCoord2f(0.0f, 1.0f); glVertex3f(-1.0f, 1.0f, -1.0f); 26 glTexCoord2f(0.0f, 0.0f); glVertex3f(-1.0f, 1.0f, 1.0f); 27 glTexCoord2f(1.0f, 0.0f); glVertex3f( 1.0f, 1.0f, 1.0f); 28 glTexCoord2f(1.0f, 1.0f); glVertex3f( 1.0f, 1.0f, -1.0f); 29 // Bottom Face 30 glTexCoord2f(1.0f, 1.0f); glVertex3f(-1.0f, -1.0f, -1.0f); 31 glTexCoord2f(0.0f, 1.0f); glVertex3f( 1.0f, -1.0f, -1.0f); 32 glTexCoord2f(0.0f, 0.0f); glVertex3f( 1.0f, -1.0f, 1.0f); 33 glTexCoord2f(1.0f, 0.0f); glVertex3f(-1.0f, -1.0f, 1.0f); 34 // Right face 35 glTexCoord2f(1.0f, 0.0f); glVertex3f( 1.0f, -1.0f, -1.0f); 36 glTexCoord2f(1.0f, 1.0f); glVertex3f( 1.0f, 1.0f, -1.0f); 37 glTexCoord2f(0.0f, 1.0f); glVertex3f( 1.0f, 1.0f, 1.0f); 38 glTexCoord2f(0.0f, 0.0f); glVertex3f( 1.0f, -1.0f, 1.0f); 39 // Left Face 40 glTexCoord2f(0.0f, 0.0f); glVertex3f(-1.0f, -1.0f, -1.0f); 41 glTexCoord2f(1.0f, 0.0f); glVertex3f(-1.0f, -1.0f, 1.0f); 42 glTexCoord2f(1.0f, 1.0f); glVertex3f(-1.0f, 1.0f, 1.0f); 43 glTexCoord2f(0.0f, 1.0f); glVertex3f(-1.0f, 1.0f, -1.0f); 44 glEnd(); 45 46 xrot+=0.3f; 47 yrot+=0.2f; 48 zrot+=0.4f; 49 return TRUE; // Keep Going 50} 方法中，在begin之前，我们先预先定义好图像的旋转方式（不一定非要放在begin之前）。\n接着调用glBindTexture进行绑定。我们就能够开始进行纹理渲染的绑定操作了。\n操作中我们在每次定义点的同时，将纹理的四个角也固定在对应的点上，便能够完成绑定工作。\n注意，用原引博客的话说，当您想改变纹理时，应该绑定新的纹理。有一点值得指出的是，您不能在 glBegin() 和 glEnd() 之间绑定纹理，必须在 glBegin() 之前或 glEnd() 之后绑定。\n到这一步，这一课内容也就结束了。\n课程7的实现 我们接下来尝试课程7的内容。\n课程7将带领我们建立一个光照系统，我们也将在这个课程中尝试添加按键控制。通过这个课程，我们会对OpenGL中的光照系统的实现、控制以及如何实现按键控制有一个入门的了解。本次实验基于课程6的内容进行进一步扩展。\n实验中，因为我们需要首先添加一些群居变量用来对按键状态进行识别，同时也还要添加一些全局变量用来记录图像的旋转角度。\n因此我们在全局变量中添加如下变量。\n1GLfloat xrot; // X 旋转角度 2GLfloat yrot; // Y 旋转角度 3GLfloat xspeed; // X 旋转速度 4GLfloat yspeed; // Y 旋转速度 5GLfloat z=-5.0f; // Depth Into The Screen 6 7GLfloat LightAmbient[]= { 0.5f, 0.5f, 0.5f, 1.0f }; 8GLfloat LightDiffuse[]= { 1.0f, 1.0f, 1.0f, 1.0f }; 9GLfloat LightPosition[]= { 0.0f, 0.0f, 2.0f, 1.0f }; 10 11GLuint filter; // 滤波器类型 12GLuint texture[3]; // 3中纹理文件指针 上面代码中，中间3行数组分别表示环境光变量数组，漫射光变量数组，以及光源位置数组。\n其中，我们需要了解一下环境光和漫射光的意义是什么。环境光来自于四面八方。所有场景中的对象都处于环境光的照射中；漫射光由特定的光源产生，并在您的场景中的对象表面上产生反射。处于漫射光直接照射下的任何对象表面都变得很亮，而几乎未被照射到的区域就显得要暗一些。\nLightAmbient和LightDiffuse创建光源的过程和颜色的创建完全一致。前三个参数分别是RGB三色分量，最后一个是alpha通道参数。\n而LightPosition中，前三个参数表示光源的XYZ左坐标，最后一个参数将告诉OpenGL这里指定的坐标就是光源的位置。\n然后我们在上一次实验的基础上稍稍稍修改LoadGLTextures函数。\n1int LoadGLTextures() // Load Bitmaps And Convert To Textures 2{ 3 int Status=FALSE; // Status Indicator 4 5 AUX_RGBImageRec *TextureImage[1]; // Create Storage Space For The Texture 6 7 memset(TextureImage,0,sizeof(void *)*1); // Set The Pointer To NULL 8 9 // Load The Bitmap, Check For Errors, If Bitmap\u0026#39;s Not Found Quit 10 if (TextureImage[0]=LoadBMP(\u0026#34;Data/Crate.bmp\u0026#34;)) 11 { 12 Status=TRUE; // Set The Status To TRUE 13 14 glGenTextures(3, \u0026amp;texture[0]); // Create Three Textures 15 16 // Create Nearest Filtered Texture 17 glBindTexture(GL_TEXTURE_2D, texture[0]); 18 glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_NEAREST); 19 glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_NEAREST); 20 glTexImage2D(GL_TEXTURE_2D, 0, 3, TextureImage[0]-\u0026gt;sizeX, TextureImage[0]-\u0026gt;sizeY, 0, GL_RGB, GL_UNSIGNED_BYTE, TextureImage[0]-\u0026gt;data); 21 22 // Create Linear Filtered Texture 23 glBindTexture(GL_TEXTURE_2D, texture[1]); 24 glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR); 25 glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR); 26 glTexImage2D(GL_TEXTURE_2D, 0, 3, TextureImage[0]-\u0026gt;sizeX, TextureImage[0]-\u0026gt;sizeY, 0, GL_RGB, GL_UNSIGNED_BYTE, TextureImage[0]-\u0026gt;data); 27 28 // Create MipMapped Texture 29 glBindTexture(GL_TEXTURE_2D, texture[2]); 30 glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR); 31 glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR_MIPMAP_NEAREST); 32 33 gluBuild2DMipmaps(GL_TEXTURE_2D, 3, TextureImage[0]-\u0026gt;sizeX, TextureImage[0]-\u0026gt;sizeY, GL_RGB, GL_UNSIGNED_BYTE, TextureImage[0]-\u0026gt;data); 34 } 35 36 if (TextureImage[0]) // If Texture Exists 37 { 38 if (TextureImage[0]-\u0026gt;data) // If Texture Image Exists 39 { 40 free(TextureImage[0]-\u0026gt;data); // Free The Texture Image Memory 41 } 42 43 free(TextureImage[0]); // Free The Image Structure 44 } 45 46 return Status; // Return The Status 47} 在读过上一次的代码之后，我们可以很容易的知道这段代码就是将Data/Crate.bmp这张位图转换成纹理并且存放在texture数组中，并且3次渲染的画面都一致（基于这一点，其实我们也可以自己实现不同的3张图片做出3种不同的，不同的是3章图像的glTexParameteri进行滤波的方式并不相同，第一张渲染使用最邻近过滤（GL_NEAREST），第二张使用线性滤波（GL_LINEAR），第三张使用选择最邻近的mip层，使用线性过滤（GL_LINEAR_MIPMAP_NEAREST）。然后就可以在立方体上渲染出不同的团了）。其他的部分改变不大。\n上面对纹理映射的滤波器的选择可以参考【OpenGL超级宝典笔记——纹理映射Mipmap】这篇博客，在上面有很详细的解释和说明。\n然后在滤波器设置结束之后，最后一行还添加了一个gluBuild2DMipmaps方法，这个在上面的【OpenGL超级宝典笔记——纹理映射Mipmap】中也有提到，是一个能够将任意图像正常缩放到适当大小的方法函数，这样就不用我们费心进行图像的预处理工作了。\n好了，到这里LoadGLTextures就设置完毕了。\n接着就到InitGL函数了，我们在第六课中已经设置了GLEnable以及glHint进行纹理绑定工作了。我们需要在后面添加新的方法，用来实现光源的初始化。具体参考代码如下：\n1int InitGL(GLvoid) // All Setup For OpenGL Goes Here 2{ 3 if (!LoadGLTextures()) // Jump To Texture Loading Routine 4 { 5 return FALSE; // If Texture Didn\u0026#39;t Load Return FALSE 6 } 7 8 glEnable(GL_TEXTURE_2D); // Enable Texture Mapping 9 glShadeModel(GL_SMOOTH); // Enable Smooth Shading 10 glClearColor(0.0f, 0.0f, 0.0f, 0.5f); // Black Background 11 glClearDepth(1.0f); // Depth Buffer Setup 12 glEnable(GL_DEPTH_TEST); // Enables Depth Testing 13 glDepthFunc(GL_LEQUAL); // The Type Of Depth Testing To Do 14 glHint(GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST); // Really Nice Perspective Calculations 15 16 glLightfv(GL_LIGHT1, GL_AMBIENT, LightAmbient); // Setup The Ambient Light 17 glLightfv(GL_LIGHT1, GL_DIFFUSE, LightDiffuse); // Setup The Diffuse Light 18 glLightfv(GL_LIGHT1, GL_POSITION,LightPosition); // Position The Light 19 glEnable(GL_LIGHT1); // Enable Light One 20 return TRUE; // Initialization Went OK 21} 新增了一个1号光源GL_LIGHT1。在对GL_LIGHT新增的3个glLightfv方法中，第一个表示设置环境光（Ambient Light），传入我们已经定义好的全局变量LightAmbient；第二个是漫射光（Diffuse Light），传入我们已经定义好的全局变量LightDiffuse；第三个是光源位置，传入我们定义好的LightPosition。最后使用glEnable启用光源。\n到这里点光源的初始化操作就结束了。和设置渲染一样，我们接着要在DrawGLScene中添加光源的某些设置，\n在OpenGL中，法线是指经过面(多边形）上的一点且垂直于这个面(多边形)的直线。使用光源的时候必须指定一条法线。法线告诉OpenGL这个多边形的朝向，并指明多边形的正面和背面。如果没有指定法线，什么怪事情都可能发生：不该照亮的面被照亮了，多边形的背面也被照亮....。对了，法线应该指向多边形的外侧。\n所以我们在DrawGLScene中绘制图像的时候，也要同时设置法线。一般来说在绘制一个平面之前，我们就要预先定义好这个平面的法线。参考代码如下。\n1int DrawGLScene(GLvoid) // Here\u0026#39;s Where We Do All The Drawing 2{ 3 glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // Clear The Screen And The Depth Buffer 4 glLoadIdentity(); // Reset The View 5 glTranslatef(0.0f,0.0f,z); 6 7 glRotatef(xrot,1.0f,0.0f,0.0f); 8 glRotatef(yrot,0.0f,1.0f,0.0f); 9 10 glBindTexture(GL_TEXTURE_2D, texture[filter]); 11 12 glBegin(GL_QUADS); 13 // Front Face 14 glNormal3f( 0.0f, 0.0f, 1.0f); 15 glTexCoord2f(0.0f, 0.0f); glVertex3f(-1.0f, -1.0f, 1.0f); 16 glTexCoord2f(1.0f, 0.0f); glVertex3f( 1.0f, -1.0f, 1.0f); 17 glTexCoord2f(1.0f, 1.0f); glVertex3f( 1.0f, 1.0f, 1.0f); 18 glTexCoord2f(0.0f, 1.0f); glVertex3f(-1.0f, 1.0f, 1.0f); 19 // Back Face 20 glNormal3f( 0.0f, 0.0f,-1.0f); 21 glTexCoord2f(1.0f, 0.0f); glVertex3f(-1.0f, -1.0f, -1.0f); 22 glTexCoord2f(1.0f, 1.0f); glVertex3f(-1.0f, 1.0f, -1.0f); 23 glTexCoord2f(0.0f, 1.0f); glVertex3f( 1.0f, 1.0f, -1.0f); 24 glTexCoord2f(0.0f, 0.0f); glVertex3f( 1.0f, -1.0f, -1.0f); 25 // Top Face 26 glNormal3f( 0.0f, 1.0f, 0.0f); 27 glTexCoord2f(0.0f, 1.0f); glVertex3f(-1.0f, 1.0f, -1.0f); 28 glTexCoord2f(0.0f, 0.0f); glVertex3f(-1.0f, 1.0f, 1.0f); 29 glTexCoord2f(1.0f, 0.0f); glVertex3f( 1.0f, 1.0f, 1.0f); 30 glTexCoord2f(1.0f, 1.0f); glVertex3f( 1.0f, 1.0f, -1.0f); 31 // Bottom Face 32 glNormal3f( 0.0f,-1.0f, 0.0f); 33 glTexCoord2f(1.0f, 1.0f); glVertex3f(-1.0f, -1.0f, -1.0f); 34 glTexCoord2f(0.0f, 1.0f); glVertex3f( 1.0f, -1.0f, -1.0f); 35 glTexCoord2f(0.0f, 0.0f); glVertex3f( 1.0f, -1.0f, 1.0f); 36 glTexCoord2f(1.0f, 0.0f); glVertex3f(-1.0f, -1.0f, 1.0f); 37 // Right face 38 glNormal3f( 1.0f, 0.0f, 0.0f); 39 glTexCoord2f(1.0f, 0.0f); glVertex3f( 1.0f, -1.0f, -1.0f); 40 glTexCoord2f(1.0f, 1.0f); glVertex3f( 1.0f, 1.0f, -1.0f); 41 glTexCoord2f(0.0f, 1.0f); glVertex3f( 1.0f, 1.0f, 1.0f); 42 glTexCoord2f(0.0f, 0.0f); glVertex3f( 1.0f, -1.0f, 1.0f); 43 // Left Face 44 glNormal3f(-1.0f, 0.0f, 0.0f); 45 glTexCoord2f(0.0f, 0.0f); glVertex3f(-1.0f, -1.0f, -1.0f); 46 glTexCoord2f(1.0f, 0.0f); glVertex3f(-1.0f, -1.0f, 1.0f); 47 glTexCoord2f(1.0f, 1.0f); glVertex3f(-1.0f, 1.0f, 1.0f); 48 glTexCoord2f(0.0f, 1.0f); glVertex3f(-1.0f, 1.0f, -1.0f); 49 glEnd(); 50 51 xrot+=xspeed; 52 yrot+=yspeed; 53 return TRUE; // Keep Going 54} 每新定义一个平面，我们都需要调用glNormal3f定义好一个法向量。法向量的3个参数分别表示其在X轴，Y轴，Z轴上的分量的长度。法向量的值是由面上的点计算出来的。\n到这一步，我们编译运行以后就已经能够看到在点光源下的一个木箱子的图案，接下来我们将为其添加键盘控制功能。这部分在WinMain内。\n我们在课程1上已经知道，nehe教程中，按键的反馈是在WinMain的一个while循环中，不断检测事件，然后对不同事件进行相应的反馈。里面已经添加了F1进行全屏控制的时间控制，我们要做的就是模仿F1的工作机制，添加其他按键的反馈。\n在以前的while循环中，按键的触发设置代码如下。\n1 while(!done) // Loop That Runs While done=FALSE 2 { 3 if (PeekMessage(\u0026amp;msg,NULL,0,0,PM_REMOVE)) // Is There A Message Waiting? 4 { 5 if (msg.message==WM_QUIT) // Have We Received A Quit Message? 6 { 7 done=TRUE; // If So done=TRUE 8 } 9 else // If Not, Deal With Window Messages 10 { 11 TranslateMessage(\u0026amp;msg); // Translate The Message 12 DispatchMessage(\u0026amp;msg); // Dispatch The Message 13 } 14 } 15 else // If There Are No Messages 16 { 17 // Draw The Scene. Watch For ESC Key And Quit Messages From DrawGLScene() 18 if ((active \u0026amp;\u0026amp; !DrawGLScene()) || keys[VK_ESCAPE]) // Active? Was There A Quit Received? 19 { 20 done=TRUE; // ESC or DrawGLScene Signalled A Quit 21 } 22 else // Not Time To Quit, Update Screen 23 { 24 SwapBuffers(hDC); // Swap Buffers (Double Buffering) 25 } 26 27 if (keys[VK_F1]) // Is F1 Being Pressed? 28 { 29 keys[VK_F1]=FALSE; // If So Make Key FALSE 30 KillGLWindow(); // Kill Our Current Window 31 fullscreen=!fullscreen; // Toggle Fullscreen / Windowed Mode 32 // Recreate Our OpenGL Window 33 if (!CreateGLWindow(\u0026#34;NeHe\u0026#39;s Texture Mapping Tutorial\u0026#34;,640,480,16,fullscreen)) 34 { 35 return 0; // Quit If Window Was Not Created 36 } 37 } 38 } 39 } 在确认ESC按键未被按下之前，OpenGL将会不停的绘制图片。在这个窗口刷新工作结束以后，我们开始了F1的按键判断。由此，我们可以在这个基础上，进一步扩展了。扩展的代码如下。\n1while (!done) // Loop That Runs While done=FALSE 2 { 3 if (PeekMessage(\u0026amp;msg, NULL, 0, 0, PM_REMOVE)) // Is There A Message Waiting? 4 { 5 if (msg.message == WM_QUIT) // Have We Received A Quit Message? 6 { 7 done = TRUE; // If So done=TRUE 8 } 9 else // If Not, Deal With Window Messages 10 { 11 TranslateMessage(\u0026amp;msg); // Translate The Message 12 DispatchMessage(\u0026amp;msg); // Dispatch The Message 13 } 14 } 15 else // If There Are No Messages 16 { 17 // Draw The Scene. Watch For ESC Key And Quit Messages From DrawGLScene() 18 if ((active \u0026amp;\u0026amp; !DrawGLScene()) || keys[VK_ESCAPE]) // Active? Was There A Quit Received? 19 { 20 done = TRUE; // ESC or DrawGLScene Signalled A Quit 21 } 22 else // Not Time To Quit, Update Screen 23 { 24 SwapBuffers(hDC); // Swap Buffers (Double Buffering) 25 26 } 27 if (keys[\u0026#39;L\u0026#39;] \u0026amp;\u0026amp; !lp) 28 { 29 lp = TRUE; 30 light = !light; 31 if (!light) 32 { 33 glDisable(GL_LIGHTING); 34 } 35 else 36 { 37 glEnable(GL_LIGHTING); 38 } 39 } 40 if (!keys[\u0026#39;L\u0026#39;]) 41 { 42 lp = FALSE; 43 } 44 if (keys[\u0026#39;F\u0026#39;] \u0026amp;\u0026amp; !fp) 45 { 46 fp = TRUE; 47 filter += 1; 48 if (filter\u0026gt;2) 49 { 50 filter = 0; 51 } 52 } 53 if (!keys[\u0026#39;F\u0026#39;]) 54 { 55 fp = FALSE; 56 } 57 if (keys[VK_PRIOR]) 58 { 59 z -= 0.02f; 60 } 61 if (keys[VK_NEXT]) 62 { 63 z += 0.02f; 64 } 65 if (keys[VK_UP]) 66 { 67 xspeed -= 0.01f; 68 } 69 if (keys[VK_DOWN]) 70 { 71 xspeed += 0.01f; 72 } 73 if (keys[VK_RIGHT]) 74 { 75 yspeed += 0.01f; 76 } 77 if (keys[VK_LEFT]) 78 { 79 yspeed -= 0.01f; 80 } 81 82 if (keys[VK_F1]) // Is F1 Being Pressed? 83 { 84 keys[VK_F1] = FALSE; // If So Make Key FALSE 85 KillGLWindow(); // Kill Our Current Window 86 fullscreen = !fullscreen; // Toggle Fullscreen / Windowed Mode 87 // Recreate Our OpenGL Window 88 if (!CreateGLWindow(\u0026#34;NeHe\u0026#39;s Textures, Lighting \u0026amp; Keyboard Tutorial\u0026#34;, 640, 480, 16, fullscreen)) 89 { 90 return 0; // Quit If Window Was Not Created 91 } 92 } 93 } 94 } 如果按下L建，就对光源GL_LIGHTING进行改变（我们在初始化InitGL的时候，就曾经调用过glEnable，不知道你是否还有印象）。其他部分都不难，这里就不一一解释了。\n另外需要说明的是，因为在NEHE教程的前文中，按键反馈是在刷新屏幕if ((active \u0026amp;\u0026amp; !DrawGLScene()) || keys[VK_ESCAPE])这个判断结束之后才进行的按键反馈，而在其之后的代码中，却又将ESC之外的按键触发部分放进了判断条件之内。我这里模仿的是作者以前的按键触发设置，所以代码和作者lesson7的代码稍有不同。不过最终效果其实一致——只不过我的会在按下ESC之后延迟一帧才推出，而作者按下ESC立刻退出，因为刷新频率很快，所以其实想过一只。\n最后，实验正确运行的话，你应该能够在窗口中正常的运行你的第一个有按键反馈的窗口游戏了。L打开灯光，F设置不同的滤波器，上下左右方向键分别设置不同的旋转方向，PageUp和PageDown分别将图形靠近或者远离我们。\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/opengl%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%94/","section":"post","tags":["nehe","OpenGL","C++"],"title":"OpenGL学习笔记（五）"},{"body":"龙云尧个人博客，转载请注明出处。\nCSDN地址：http://blog.csdn.net/michael753951/article/details/71316089\n个人blog地址：http://yaoyl.cn/nehexue-xi-bi-ji-si/\n图像旋转 接下来我们将学习图像旋转。图像的旋转通过调用glRotatef(Angle,Xvector,Yvector,Zvector)实现。Angle表示旋转角度（注意是角度不是弧度），Xvector表示沿X轴旋转，Yvector表示沿着Y轴旋转，Zvector表示沿着Z轴旋转。注意旋转角度和RGB设置不一样，RGB的范围是0.0f-1.0f，而角度旋转的范围是0.0f-360.0f(其实可以超过360.0f，不过为了避免溢出我们应该将其做一个约束)。\n图像的旋转方向遵循右手定则，即右手握住旋转的轴，右手大拇指朝向轴的正方向，那么你右手其他手指所朝的方向便为正方向。\n为了实现图像的旋转，我们将尝试调用一个glRotatef方法。\n首先我们还是在DrawGLScene方法中，通过glTranslatef确定绘点以后，我们就可以插入glRotatef(rtri, 0.0f, 0.0f, 1.0f)来绕着Z轴旋转。为此我们需要定义一个GLfloat类型的全局变量rtri。同时在DrawGLScene方法结束之前我们需要不断改变rtri的值来实现图像的旋转工作。\n最终的参考代码如下（注意需要自己定义一个全局变量rtri）。\n1int DrawGLScene(GLvoid) // 从这里开始进行所有的绘制 2{ 3 glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // 清除屏幕和深度缓存 4 glLoadIdentity(); // 重置当前的模型观察矩阵 5 //当您调用glLoadIdentity()之后，您实际上将当前点移到了屏幕中心，X坐标轴从左至右，Y坐标轴从下至上，Z坐标轴从里至外。 6 //中心左面的坐标值是负值，右面是正值。移向屏幕顶端是正值，移向屏幕底端是负值。移入屏幕深处是负值，移出屏幕则是正值。 7 8 //glTranslatef(x, y, z)沿着 X, Y 和 Z 轴移动。 9 //根据前面的次序，下面的代码沿着X轴左移1.5个单位，Y轴不动(0.0f)，最后移入屏幕6.0f个单位。 10 //注意在glTranslatef(x, y, z)中当您移动的时候，您并不是相对屏幕中心移动，而是相对与当前所在的屏幕位置。 11 glTranslatef(-1.5f, 0.0f, -6.0f); // 左移 1.5 单位，并移入屏幕 6.0 12 glRotatef(rtri, 0.0f, 0.0f, 1.0f); // Rotate The Triangle On The Y axis ( NEW ) 13 //glBegin(GL_TRIANGLES)的意思是开始绘制三角形，glEnd() 告诉OpenGL三角形已经创建好了。 14 //本节的简单示例中，我们只画一个三角形。如果要画第二个三角形的话，可以在这三点之后，再加三行代码(3点)。 15 glBegin(GL_TRIANGLES); // Drawing Using Triangles 16 //接下来的一行代码设置三角形的第一个顶点(三角形的上顶点)，并使用当前颜色(红色)来绘制。 17 glColor3f(1.0f, 0.0f, 0.0f); // 设置当前色为红色 18 glVertex3f(0.0f, 1.0f, 0.0f); // Top 19 glColor3f(0.0f, 1.0f, 0.0f); // 设置当前色为绿色 20 glVertex3f(-1.0f, -1.0f, 0.0f); // Bottom Left 21 glColor3f(0.0f, 0.0f, 1.0f); // 设置当前色为蓝色 22 glVertex3f(1.0f, -1.0f, 0.0f); // Bottom Right 23 glEnd(); // Finished Drawing The Triangle 24 //在屏幕的左半部分画完三角形后，我们要移到右半部分来画正方形。为此要再次使用glTranslate。 25 glTranslatef(3.0f, 0.0f, 0.0f); // Move Right 3 Units 26 //现在使用GL_QUADS绘制正方形。 27 glBegin(GL_QUADS); // Draw A Quad 28 //glColor3f(1.0f, 0.0f, 0.0f); // 将当前色设置为蓝色 29 glVertex3f(-1.0f, 1.0f, 0.0f); // Top Left 30 glVertex3f(1.0f, 1.0f, 0.0f); // Top Right 31 //glColor3f(0.0f, 0.1f, 0.0f); // 将当前色设置为蓝色 32 glVertex3f(1.0f, -1.0f, 0.0f); // Bottom Right 33 glVertex3f(-1.0f, -1.0f, 0.0f); // Bottom Left 34 glEnd(); // Done Drawing The Quad 35 rtri += 0.2f; // Increase The Rotation Variable For The Triangle ( NEW ) 36 return TRUE; // Everything Went OK 37} 实现的效果如下图所示。\n上述方法实现了整个画面绕着Z轴旋转的情况，我们接下来将实现两个图像分别旋转的场景。\n首先我们尝试直接在绘制矩形之前，直接开始对矩形矩形旋选，旋转结果如下所示。\n这个时候我们发现矩形的旋转很异常，他并不是按照我们理想的情况下绕着自己的X轴旋转。这是因为在之前的三角形旋转过程中，实际在旋转的是整个坐标系（这样做是很有道理里的，它能让我们很方便的画出这个三角形，而不用费心计算每个点在固定参考坐标系下旋转之后新的坐标位置）。\n为了解决这个问题，我们在三角形旋转完毕之后，应该重新调用glLoadIdentity进行坐标初始化。然后我们重新设置绘点glTranslatef，注意这个时候绘点的参数应该为(1.5f, 0.0f, -6.0f)，因为重置后绘点坐标为(0.0, 0.0, 0.0)，我们应该将矩形的绘点设置到和三角形相同的位置上。\n最终的两个图形的旋转的参考代码如下。\n1int DrawGLScene(GLvoid) // 从这里开始进行所有的绘制 2{ 3 glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // 清除屏幕和深度缓存 4 glLoadIdentity(); // 重置当前的模型观察矩阵 5 //当您调用glLoadIdentity()之后，您实际上将当前点移到了屏幕中心，X坐标轴从左至右，Y坐标轴从下至上，Z坐标轴从里至外。 6 //中心左面的坐标值是负值，右面是正值。移向屏幕顶端是正值，移向屏幕底端是负值。移入屏幕深处是负值，移出屏幕则是正值。 7 8 //glTranslatef(x, y, z)沿着 X, Y 和 Z 轴移动。 9 //根据前面的次序，下面的代码沿着X轴左移1.5个单位，Y轴不动(0.0f)，最后移入屏幕6.0f个单位。 10 //注意在glTranslatef(x, y, z)中当您移动的时候，您并不是相对屏幕中心移动，而是相对与当前所在的屏幕位置。 11 glTranslatef(-1.5f, 0.0f, -6.0f); // 左移 1.5 单位，并移入屏幕 6.0 12 glRotatef(rtri, 0.0f, 0.0f, 1.0f); // Rotate The Triangle On The Y axis ( NEW ) 13 //glBegin(GL_TRIANGLES)的意思是开始绘制三角形，glEnd() 告诉OpenGL三角形已经创建好了。 14 //本节的简单示例中，我们只画一个三角形。如果要画第二个三角形的话，可以在这三点之后，再加三行代码(3点)。 15 glBegin(GL_TRIANGLES); // Drawing Using Triangles 16 //接下来的一行代码设置三角形的第一个顶点(三角形的上顶点)，并使用当前颜色(红色)来绘制。 17 glColor3f(1.0f, 0.0f, 0.0f); // 设置当前色为红色 18 glVertex3f(0.0f, 1.0f, 0.0f); // Top 19 glColor3f(0.0f, 1.0f, 0.0f); // 设置当前色为绿色 20 glVertex3f(-1.0f, -1.0f, 0.0f); // Bottom Left 21 glColor3f(0.0f, 0.0f, 1.0f); // 设置当前色为蓝色 22 glVertex3f(1.0f, -1.0f, 0.0f); // Bottom Right 23 glEnd(); // Finished Drawing The Triangle 24 //在屏幕的左半部分画完三角形后，我们要移到右半部分来画正方形。为此要再次使用glTranslate。 25 glLoadIdentity(); // 重置模型观察矩阵 26 glTranslatef(1.5f, 0.0f, -6.0f); // Move Right 3 Units 27 glRotatef(rquad, 1.0f, 0.0f, 0.0f); // 绕X轴旋转四边形 28 //现在使用GL_QUADS绘制正方形。 29 glBegin(GL_QUADS); // Draw A Quad 30 //glColor3f(1.0f, 0.0f, 0.0f); // 将当前色设置为蓝色 31 glVertex3f(-1.0f, 1.0f, 0.0f); // Top Left 32 glVertex3f(1.0f, 1.0f, 0.0f); // Top Right 33 //glColor3f(0.0f, 0.1f, 0.0f); // 将当前色设置为蓝色 34 glVertex3f(1.0f, -1.0f, 0.0f); // Bottom Right 35 glVertex3f(-1.0f, -1.0f, 0.0f); // Bottom Left 36 glEnd(); // Done Drawing The Quad 37 if (rtri \u0026gt;= 360.0f) rtri -= 360.0; // control the range of the rtri 38 if (rtri \u0026lt;= 0.0f) rtri += 360.0; 39 rtri += 0.2f; // Increase The Rotation Variable For The Triangle ( NEW ) 40 rquad -= 0.15f; // 减少四边形的旋转变量 41 return TRUE; // Everything Went OK 42} 3D图像的旋转 我们已经实现了对2D图像的构建着色以及选装，接下来我们将实现一个3D图像的构建以及旋转。\n我们在之前构建三角形的教程中已经知道，在glBegin和glEnd之间可以有很多次相同形状的绘制，所以我们将利用这个特点在实验中利用4个三角形绘制一个金字塔，用6个矩形绘制一个立方体。\n绘制过程我们就不再赘述了，旋转方式我们在上一次实验中也已经了解了，所以我们直接上代码和结果图。\n1int DrawGLScene(GLvoid) // 从这里开始进行所有的绘制 2{ 3 glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // 清除屏幕和深度缓存 4 glLoadIdentity(); // 重置当前的模型观察矩阵 5 //当您调用glLoadIdentity()之后，您实际上将当前点移到了屏幕中心，X坐标轴从左至右，Y坐标轴从下至上，Z坐标轴从里至外。 6 //中心左面的坐标值是负值，右面是正值。移向屏幕顶端是正值，移向屏幕底端是负值。移入屏幕深处是负值，移出屏幕则是正值。 7 8 //glTranslatef(x, y, z)沿着 X, Y 和 Z 轴移动。 9 //根据前面的次序，下面的代码沿着X轴左移1.5个单位，Y轴不动(0.0f)，最后移入屏幕6.0f个单位。 10 //注意在glTranslatef(x, y, z)中当您移动的时候，您并不是相对屏幕中心移动，而是相对与当前所在的屏幕位置。 11 glTranslatef(-1.5f, 0.0f, -6.0f); // 左移 1.5 单位，并移入屏幕 6.0 12 glRotatef(rtri, 1.0f, 0.0f, 0.0f); // Rotate The Triangle On The Y axis ( NEW ) 13 //glBegin(GL_TRIANGLES)的意思是开始绘制三角形，glEnd() 告诉OpenGL三角形已经创建好了。 14 //本节的简单示例中，我们只画一个三角形。如果要画第二个三角形的话，可以在这三点之后，再加三行代码(3点)。 15 glBegin(GL_TRIANGLES); // Drawing Using Triangles 16 //接下来的一行代码设置三角形的第一个顶点(三角形的上顶点)，并使用当前颜色(红色)来绘制。 17 glColor3f(1.0f, 0.0f, 0.0f); // Red 18 glVertex3f(0.0f, 1.0f, 0.0f); // Top Of Triangle (Front) 19 glColor3f(0.0f, 1.0f, 0.0f); // Green 20 glVertex3f(-1.0f, -1.0f, 1.0f); // Left Of Triangle (Front) 21 glColor3f(0.0f, 0.0f, 1.0f); // Blue 22 glVertex3f(1.0f, -1.0f, 1.0f); // Right Of Triangle (Front) 23 glColor3f(1.0f, 0.0f, 0.0f); // Red 24 glVertex3f(0.0f, 1.0f, 0.0f); // Top Of Triangle (Right) 25 glColor3f(0.0f, 0.0f, 1.0f); // Blue 26 glVertex3f(1.0f, -1.0f, 1.0f); // Left Of Triangle (Right) 27 glColor3f(0.0f, 1.0f, 0.0f); // Green 28 glVertex3f(1.0f, -1.0f, -1.0f); // Right Of Triangle (Right) 29 glColor3f(1.0f, 0.0f, 0.0f); // Red 30 glVertex3f(0.0f, 1.0f, 0.0f); // Top Of Triangle (Back) 31 glColor3f(0.0f, 1.0f, 0.0f); // Green 32 glVertex3f(1.0f, -1.0f, -1.0f); // Left Of Triangle (Back) 33 glColor3f(0.0f, 0.0f, 1.0f); // Blue 34 glVertex3f(-1.0f, -1.0f, -1.0f); // Right Of Triangle (Back) 35 glColor3f(1.0f, 0.0f, 0.0f); // Red 36 glVertex3f(0.0f, 1.0f, 0.0f); // Top Of Triangle (Left) 37 glColor3f(0.0f, 0.0f, 1.0f); // Blue 38 glVertex3f(-1.0f, -1.0f, -1.0f); // Left Of Triangle (Left) 39 glColor3f(0.0f, 1.0f, 0.0f); // Green 40 glVertex3f(-1.0f, -1.0f, 1.0f); // Right Of Triangle (Left) 41 glEnd(); // Finished Drawing The Triangle 42 //在屏幕的左半部分画完三角形后，我们要移到右半部分来画正方形。为此要再次使用glTranslate。 43 glLoadIdentity(); // 重置模型观察矩阵 44 glTranslatef(1.5f, 0.0f, -6.0f); // Move Right 3 Units 45 glRotatef(rquad, 1.0f, 0.0f, 0.0f); // 绕X轴旋转四边形 46 //现在使用GL_QUADS绘制正方形。 47 glBegin(GL_QUADS); // Draw A Quad 48 glColor3f(0.0f, 1.0f, 0.0f); // Set The Color To Green 49 glVertex3f(1.0f, 1.0f, -1.0f); // Top Right Of The Quad (Top) 50 glVertex3f(-1.0f, 1.0f, -1.0f); // Top Left Of The Quad (Top) 51 glVertex3f(-1.0f, 1.0f, 1.0f); // Bottom Left Of The Quad (Top) 52 glVertex3f(1.0f, 1.0f, 1.0f); // Bottom Right Of The Quad (Top) 53 glColor3f(1.0f, 0.5f, 0.0f); // Set The Color To Orange 54 glVertex3f(1.0f, -1.0f, 1.0f); // Top Right Of The Quad (Bottom) 55 glVertex3f(-1.0f, -1.0f, 1.0f); // Top Left Of The Quad (Bottom) 56 glVertex3f(-1.0f, -1.0f, -1.0f); // Bottom Left Of The Quad (Bottom) 57 glVertex3f(1.0f, -1.0f, -1.0f); // Bottom Right Of The Quad (Bottom) 58 glColor3f(1.0f, 0.0f, 0.0f); // Set The Color To Red 59 glVertex3f(1.0f, 1.0f, 1.0f); // Top Right Of The Quad (Front) 60 glVertex3f(-1.0f, 1.0f, 1.0f); // Top Left Of The Quad (Front) 61 glVertex3f(-1.0f, -1.0f, 1.0f); // Bottom Left Of The Quad (Front) 62 glVertex3f(1.0f, -1.0f, 1.0f); // Bottom Right Of The Quad (Front) 63 glColor3f(1.0f, 1.0f, 0.0f); // Set The Color To Yellow 64 glVertex3f(1.0f, -1.0f, -1.0f); // Top Right Of The Quad (Back) 65 glVertex3f(-1.0f, -1.0f, -1.0f); // Top Left Of The Quad (Back) 66 glVertex3f(-1.0f, 1.0f, -1.0f); // Bottom Left Of The Quad (Back) 67 glVertex3f(1.0f, 1.0f, -1.0f); // Bottom Right Of The Quad (Back) 68 glColor3f(0.0f, 0.0f, 1.0f); // Set The Color To Blue 69 glVertex3f(-1.0f, 1.0f, 1.0f); // Top Right Of The Quad (Left) 70 glVertex3f(-1.0f, 1.0f, -1.0f); // Top Left Of The Quad (Left) 71 glVertex3f(-1.0f, -1.0f, -1.0f); // Bottom Left Of The Quad (Left) 72 glVertex3f(-1.0f, -1.0f, 1.0f); // Bottom Right Of The Quad (Left) 73 glColor3f(1.0f, 0.0f, 1.0f); // Set The Color To Violet 74 glVertex3f(1.0f, 1.0f, -1.0f); // Top Right Of The Quad (Right) 75 glVertex3f(1.0f, 1.0f, 1.0f); // Top Left Of The Quad (Right) 76 glVertex3f(1.0f, -1.0f, 1.0f); // Bottom Left Of The Quad (Right) 77 glVertex3f(1.0f, -1.0f, -1.0f); // Bottom Right Of The Quad (Right) 78 glEnd(); // Done Drawing The Quad 79 if (rtri \u0026gt;= 360.0f) rtri -= 360.0; // control the range of the rtri 80 if (rtri \u0026lt;= 0.0f) rtri += 360.0; 81 rtri += 0.2f; // Increase The Rotation Variable For The Triangle ( NEW ) 82 rquad -= 0.15f; // 减少四边形的旋转变量 83 return TRUE; // Everything Went OK 84} ","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/opengl%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%9B%9B/","section":"post","tags":["nehe","OpenGL","C++"],"title":"OpenGL学习笔记（四）"},{"body":"第二课和第三课内容为三角形和矩形的颜色渲染内容，通过实例告诉我们如何给实现的样例进行上色。\n我们已经知道任何在OpenGL中，任何形状都将最终被分解成矩形和三角形两种形状，所以在这两课中我们将对三角形和矩形的构建和渲染进行学习。\n三角形和矩形构造 构建三角形或者矩形的方法在DrawGLScene方法中实现。\n绘制图像之前我们需要先将屏幕缓存清理掉，即调用glClear和glLoadIdentity。这个时候屏幕上的定位点将被重置于窗口的正中间。\n整个屏幕按照空间直角坐标系的形式进行坐标划分，分为X轴，Y轴和Z轴，其中X轴正方向为右方，Y轴正方向为上方，Z轴正方向为屏幕外侧，原点为你的窗口中央。\n开始绘制图形的之前，我们首先需要使用glTranslatef对绘制的点进行偏移，将其移到适当的位置之后开始进行图像绘制（记住绘制点初始值位于屏幕正中央。）\n绘制图形之前，我们需要调用glBegin(GL_TRIANGLES)来决定绘制图形。GL_TRIANGLES表示绘制一个三角形，GL_QUADS表示绘制一个矩形。如果需要绘制更多点组成的图形的话，可以使用GL_POLYGON。\n下面以三角形的绘制为例，通过调用glVertex3f方法设置三个顶点的坐标我们就可以画出一个简单的三角形。如果需要绘制多个三角形，可以在glBegin之后添加3*n行glVertex3f方法，就能绘制出n个三角形。\n绘制结束之后，我们将调用glEnd();表示本次绘制结束。\n下面将展示第二课的代码及其实现效果。\n1int DrawGLScene(GLvoid) // Here\u0026#39;s Where We Do All The Drawing 2{ 3 glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // Clear Screen And Depth Buffer 4 glLoadIdentity(); // Reset The Current Modelview Matrix 5 glTranslatef(-1.5f,0.0f,-6.0f); // Move Left 1.5 Units And Into The Screen 6.0 6 glBegin(GL_TRIANGLES); // Drawing Using Triangles 7 glVertex3f( 0.0f, 1.0f, 0.0f); // Top 8 glVertex3f(-1.0f,-1.0f, 0.0f); // Bottom Left 9 glVertex3f( 1.0f,-1.0f, 0.0f); // Bottom Right 10 glEnd(); // Finished Drawing The Triangle 11 glTranslatef(3.0f,0.0f,0.0f); // Move Right 3 Units 12 glBegin(GL_QUADS); // Draw A Quad 13 glVertex3f(-1.0f, 1.0f, 0.0f); // Top Left 14 glVertex3f( 1.0f, 1.0f, 0.0f); // Top Right 15 glVertex3f( 1.0f,-1.0f, 0.0f); // Bottom Right 16 glVertex3f(-1.0f,-1.0f, 0.0f); // Bottom Left 17 glEnd(); // Done Drawing The Quad 18 return TRUE; // Keep Going 19} 绘制出来的效果图如下所示。 图像着色 第三课内容为图像着色部分，这部分内容很简单，我们只需调用glColor3f便可以进行颜色着色。**值得注意的是，我们一旦调用glColor3f之后，在下一次调用glColor3f之前，着色的颜色不会改变。**比如下一段代码展示的这样。\n1 2int DrawGLScene(GLvoid) // 从这里开始进行所有的绘制 3{ 4 glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // 清除屏幕和深度缓存 5 glLoadIdentity(); // 重置当前的模型观察矩阵 6 //当您调用glLoadIdentity()之后，您实际上将当前点移到了屏幕中心，X坐标轴从左至右，Y坐标轴从下至上，Z坐标轴从里至外。 7 //中心左面的坐标值是负值，右面是正值。移向屏幕顶端是正值，移向屏幕底端是负值。移入屏幕深处是负值，移出屏幕则是正值。 8 9 //glTranslatef(x, y, z)沿着 X, Y 和 Z 轴移动。 10 //根据前面的次序，下面的代码沿着X轴左移1.5个单位，Y轴不动(0.0f)，最后移入屏幕6.0f个单位。 11 //注意在glTranslatef(x, y, z)中当您移动的时候，您并不是相对屏幕中心移动，而是相对与当前所在的屏幕位置。 12 glTranslatef(-1.5f, 0.0f, -6.0f); // 左移 1.5 单位，并移入屏幕 6.0 13 //glBegin(GL_TRIANGLES)的意思是开始绘制三角形，glEnd() 告诉OpenGL三角形已经创建好了。 14 //本节的简单示例中，我们只画一个三角形。如果要画第二个三角形的话，可以在这三点之后，再加三行代码(3点)。 15 glBegin(GL_TRIANGLES); // Drawing Using Triangles 16 //接下来的一行代码设置三角形的第一个顶点(三角形的上顶点)，并使用当前颜色(红色)来绘制。 17 glColor3f(1.0f, 0.0f, 0.0f); // 设置当前色为红色 18 glVertex3f(0.0f, 1.0f, 0.0f); // Top 19 glColor3f(0.0f, 1.0f, 0.0f); // 设置当前色为绿色 20 glVertex3f(-1.0f, -1.0f, 0.0f); // Bottom Left 21 glColor3f(0.0f, 0.0f, 1.0f); // 设置当前色为蓝色 22 glVertex3f(1.0f, -1.0f, 0.0f); // Bottom Right 23 glEnd(); // Finished Drawing The Triangle 24 //在屏幕的左半部分画完三角形后，我们要移到右半部分来画正方形。为此要再次使用glTranslate。 25 glTranslatef(3.0f, 0.0f, 0.0f); // Move Right 3 Units 26 //现在使用GL_QUADS绘制正方形。 27 glBegin(GL_QUADS); // Draw A Quad 28 glVertex3f(-1.0f, 1.0f, 0.0f); // Top Left 29 glVertex3f(1.0f, 1.0f, 0.0f); // Top Right 30 glVertex3f(1.0f, -1.0f, 0.0f); // Bottom Right 31 glVertex3f(-1.0f, -1.0f, 0.0f); // Bottom Left 32 glEnd(); // Done Drawing The Quad 33 return TRUE; // Everything Went OK 34} 输出的图像如下所示。\n我们注意到在三角形的三个点分别设置成三个颜色之后，OpenGL自动给我们设置好了过渡色，同时我们在绘制三角形的时候，最后一个点设置为蓝色。而在绘制矩形的时候，我们并没有设置颜色，结果矩形仍然变成了蓝色，就说明glColor3f的着色具有持久性，同时这个即便是跨glBegin和glEnd也能够保持那种持久性。\n接着，我们将探究OpenGL中过渡色是怎么操作的。（这个部分教程中没有详细讲述）\n对DrawGLScene稍作修改，在矩形中前两个点着红色，后两个点着绿色，我们查看着色情况如何。\n1 2 //现在使用GL_QUADS绘制正方形。 3 glBegin(GL_QUADS); // Draw A Quad 4 //glColor3f(1.0f, 0.0f, 0.0f); // 将当前色设置为蓝色 5 glVertex3f(-1.0f, 1.0f, 0.0f); // Top Left 6 glVertex3f(1.0f, 1.0f, 0.0f); // Top Right 7 //glColor3f(0.0f, 0.1f, 0.0f); // 将当前色设置为蓝色 8 glVertex3f(1.0f, -1.0f, 0.0f); // Bottom Right 9 glVertex3f(-1.0f, -1.0f, 0.0f); // Bottom Left 10 glEnd(); 图像显示将从前两个点绘成的直线向另外两个点组成的直线进行过渡。\n所以我们能够\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/opengl%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/","section":"post","tags":["nehe","OpenGL","C++"],"title":"OpenGL学习笔记（三）"},{"body":"其实这个和nehe学习没太多关系，纯粹知识记录一下VS的注释和反注释的快捷键而已。\n注释： 先CTRL+K，然后CTRL+C 取消注释： 先CTRL+K，然后CTRL+U\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/opengl%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/","section":"post","tags":["VS","C++","快捷键"],"title":"OpenGL学习笔记（二）"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/vs/","section":"tags","tags":null,"title":"VS"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/","section":"tags","tags":null,"title":"快捷键"},{"body":"龙云尧个人博客，转载请注明出处。\nCSDN地址：http://blog.csdn.net/michael753951/article/details/70254340\n个人blog地址：http://123.207.243.115:81/rfidshi-yan-yi-zong-jie-2/\n因为实验需要，我要使用OpenGL搭建一个仿真驾驶环境。因为之前没有接触过OpenGL的相关知识，淦哥推荐通过NEHE来进行学习，之后会零零散散做一些笔记用来进行记录。学习的博客参见【地址】。\n创建新的C++ 因为实验需要，我需要使用C++进行整个项目的编写。实验之前，我们需要先知道怎么用VS搭建一个窗口程序，这里我参考了【这篇博客】。\n需要注意的是，在实验中，不推荐直接按照博客中使用L对字符串直接进行强制转换的方式，这种方法在之后学习NEHE过程中会出现很多不可避免的问题。同时这种方式在输出中文的时候也会出翔错误，这个不是我们想看到的。所以我们还需要进行相关的设置。\n设置方法这里我们参考【这篇博客】。\n设置完成以后，我们就能很正常的输出字符串了，也不再需要在字符串前面加上L进行强制转换，之后进行NEHE学习的时候也能更加简单。\n实验环境搭建 我在实验开发中使用的是VS2015专业版进行开发。需要使用到的所有库文件和环境搭建可以参考【这里】，环境搭建完成之后，尝试include某些库头，如果没有报错，那就说明环境搭建成功。\n可能出现的问题 实验过程中，最好从教程中，一个函数一个函数向你的项目中添加，如果一次性添加太多的话，报错太多可能会让你很崩溃。\n在添加函数的过程中，在开始调用PDB文件之后，可能会出现很多的“无法查找或打开PDB文件”错误信息，为了解决这个问题，你可以参考【这篇博客】。\n如果在环境搭建过程中还出现了其他问题，试着参照【这篇博客】进行解决。\n逻辑图 经过仔细阅读源码以及理解，整个NEHE第一课的代码框架结构如下。\n理解过程中，我们其他的目前可以不用很掌握，但是一定要清楚，在本次项目中，作者将**OpenGL的着色描述表定义为 hRC 。要让您的程序能够绘制窗口的话，还需要创建一个设备描述表。Windows的设备描述表被定义为 hDC **。DC将窗口连接到GDI(Graphics Device Interface图形设备接口)。而RC将OpenGL连接到DC。变量 hWnd 将保存由Windows给我们的窗口指派的句柄。最后，程序的实例保存在hInstance中(实例)。\n通过上面的关系，我们能够更加容易的理解窗口的建立与注销的过程中，作者代码中每一步所做的目的和意义。\n实验结果 在读完代码之后，我们知道本次实验中仅仅只是建立一个640*480的窗口。并没有任何内容显示，另外因为我们在初始化设置中(InitGL这个方法中定义的)将屏幕的初始RGB值设置为（0.0f, 0.0f, 0.0f, 0.5f），所以程序运行的结果如图所示。\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/opengl%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/","section":"post","tags":["nehe","OpenGL","C++"],"title":"OpenGL学习笔记（一）"},{"body":"龙云尧个人博客，转载请注明出处。\nCSDN地址：http://blog.csdn.net/michael753951/article/details/70837240\n个人blog地址：http://yaoyl.cn/wang_yi_fu_shi_ji_shu_mian/\n这篇博客还可以有个别称，网易复试被教做人。\n比较幸运的通过了初试。这周周三又去网易大厦参加了网易直播开发的复试面试。依然是技术面。\n一开始收到复试短信的时候，心情其实还蛮激动的，毕竟人生第一次实习面试，来的还算比较顺利。\n短信中没有提到要带简历，所以在收到通知后，我便以为这一次要问后台开发或者服务器相关的问题了。所以面试之前又临时补了一下网络编程（对，就是上次被问到的东西），然后又复习了一下排序+搜索，仔细看了**《程序员面宝典》**中面向对象以及继承与接口两个章节。\n带着100次/秒的心跳来到网易大厦。整个人紧张的不行，上一次还看到两个本科生，这一次本科生都没看见，上一次还看到一个我们级的同学，这一次也没看见过来。周围全是学硕大佬，听着他们讲着听不懂的项目名词，我越来越忐忑。\n正式面试 小姐姐给我打印了一张简历（因为我以为这一次不用带也就没带了），还是上次的小姐姐带我们去的面试小房间，房间里面依然还是两名面试官（和上一次不一样），不过两个人年龄差不多，不过不同的是，这一次两个人年龄都不大，30不到的样子。\n面试官拿着我的简历，以及我的笔试试卷，开始看起来。\n？？？竟然还是和初试一样的内容？？？\n接着面试官开始从我简历中第一个项目开始，从上往下一个一个问（跳过了Hadoop）。询问过程很细致，感觉主要在考验我的表达能力和对编程的理解能力。同时每个项目还问了我详细的设计思路（和上一次面试差不多）。另外还会从这个项目开始挖掘你对一些基础知识的了解程度。\n比如说在问我一个C++项目经验的时候，问了我使用了哪些特殊的东西（算法），大致上答完以后开始问我很基础的知识——C++中，如果两个头文件中有同名函数的时候，同时include这两个头文件会不会报错，以及会报何种错，如何解决这种错误。前两问问得我有点蒙，肯定会报错我知道，但是回报什么错我就不太知道了，每次编译都是看error信息，但是从没可以注意错误信息有哪些种类。我打的有点不好。\n至于解决方案，根绝我以前的项目经验，我果断说出了曾经使用过的ifndef。\n1#ifndef XXX 2#define XXX 3void fun1(){} 4void fun2(){} 5void fun3(){} 6#endif “不能使用ifndef”。“那就封装成类。”“也不能封装成类。”\n我开始蒙了，这个问题的解决办法我从来没想过，一直以来，为了良好的封装性，避免不同包头之间include出问题，我都严格的控制函数名和变量名。但是怎么解决却没怎么注意过。\n回来之后，饭局上问了下老师，加上自己在网上查阅了相关资料，我找到了第三种解决办法，那就是使用命名空间namespace解决，具体结局方案可以参考【C++命名空间 namespace的作用和使用解析】\n回到面试上。\n感觉简历太苍白，面试官看着我的简历似乎不太好。他继续往下提问，美赛的经历和算法设计过程。二维码图像识别中的实现方法和难点。\n最后在我们之前一个多平台项目中又开始了基础知识的提问。http请求报文中，第一行内容是什么，我开始又犯蒙，先回答了一个肯定会有的request标识符。其他的还有什么，当时计网没要求记，我就跳过了，现在问起来，我有点犯难。想了半天我勉强想起来似乎有一个http版本。其它的又开始犯难了。\n以前使用jsp的时候都是使用已经封装好的库头，现在突然问我这个，我就有点想不起来了。根据我上个星期学python的时候网络处理部分的东西，我开始艰难的回忆，最后猜了一个ip地址和端口号。其他的也没觉得有什么东西了。\n然后面试官问了一个关于JavaXXX（一个没听过的名词，不是JavaScript）多线程的问题，我表示没听过这个名词之后，面试官也就停止提问了。\n接着面试官问我为什么在外网中无法访问内网的网站。这一点我在前期准备过程中，LDNS看的比较多，所以顺口就说了出来。当然，这个答案可能存在一定问题，欢迎指正。\n最后面试官问了我一些我的试卷上那些错题是怎么错的，错在哪。这些还好我在笔试那天回寝室之后和舍友讨论过，自己也到查过，所以基本上都能讲出来。\n面试总结 感觉复试过程明显就没有初试的时候顺利了。面试过程磕磕绊绊，挺多东西不知道，加上自己本身紧张，所以答得并不好。\n总结一下，在准备方面：\n二面和一面内容上其实差不多，可能面试官也知道我们对相关岗位的知识并不是很熟，所以就不会问太深入的东西，基本上都是稍微试探一下，如果你不会也就停止了。 前期准备还是需要对着自己的简历准备，因为面试官还是会对着你的简历进行提问，而且二面明显感觉比一面更加重基础，反而不问任何算法知识。 心态还是很重要，紧张很容易导致自己犯下不该犯的错误。 面试官对你的了解仅仅只有那十几分钟，怎么在短短的十几分钟之内将自己的有点展示出来，需要在面试前做好比较好的准备，同事面试的时候，要适当的带面试官走。 最后，希望我还有机会写一个HR终面总结吧。\n更新，归咎于自己的技术底子是在不好，我还是没有成功闯过复试关。\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/%E7%BD%91%E6%98%93%E5%A4%8D%E8%AF%95%E6%8A%80%E6%9C%AF%E9%9D%A2/","section":"post","tags":["面经","网易"],"title":"网易复试（技术面）"},{"body":"昨天我正在怼RFID第三次实验的圈存，消费和查询功能，丝毫没注意有短信，直到我出门准备拿快递查短信的时候才发现。。。\n于是今天什么都没准备的去猪场（网易）面试，不过还好对面两个面试官人比较好，并没有怼我什么。\n笔试 上周四，网易在中大场的宣讲结束以后，便同时进行了一场笔试。笔试题目较难。题目满分一百分，前60分选择以及计算填空题，后40分编程。\n前60分 前面60分里面主要是理论算法题，还夹杂一些操作系统题目和计算机网络题目，以及部分和岗位有关的内容（比如我面试的是直播开发，试卷上就有问视频格式不包括下面中的哪一个），另外选择题里面少量数据库。\n现在还记得的比如很经典的2017!的结构末尾有多少个0, 7^2017%5结果为多少啊，第一趟快排结果怎样，堆排调整结果怎样，OS的内存置换算法，还有一些暂时想不起来的题目。\n题目难度有点大，对基础的算法要求比较高，同时还要求被试者记得OS，计网知识等。如果以后有人打算去网易的话，遇到笔试前最好去牛客网刷一套或者几套网易的笔试题感受一下。笔试的时候才更加适应网易的套路，运气好的话还有可能遇到原题。（我遇到一个比较简单的原题，还有一个一起考试的碰到了移到算法计算题的原题）。\n这部分答题过程中，我思路比较清楚。可能因为不少题目在以前上机测试或者其他算法书中遇到过，所以不是特别偏的算法还是会的（比如有一道三进制的题，当时怎么都不会，现在时间太久也忘了）。经常打算法的人应该完成难度不大。\n后40分 40分一共有两道手写编程题，第一题10分比较简单，第二题会难一点30分。\n在这次考试中，第一题是求最大公因数和最小公倍数。第一题题目要求数据大小在1~2^32-1之间。这两个算法的实现我就不说了，因为已经算是算法入门级的代码了。但是很傻的是，我在计算最大公倍数时，return的结果只开到了undesigned int，这个估计会扣不少分。其实应该开到long long才能不溢出。\n第二题，是一道0-1背包问题，DP可解。但是因为时间不够，加上笔试前没有准备关于DP和背包问题，所以空出来了。题目大概意思是，在线直播平台上有各种打赏，比如打赏1（分数100）、打赏2（200）、打赏3（300），每种打赏收费标准不一样。相当于背包问题中的物品。一个用户想给主播发礼品，怎样做才能既将手中的钱花完，主播收到的积分也能最多。（题目大致应该是这样的，时间有点久了，记不是很清楚。）\n然后在面试过程中，我瞟到了我的试卷，前面60分拿了36。这个能理解，我在那天回寝室，回想题目的时候，就发想算法填空题里面，有几道题手算出错了。页面置换的题目里面，将LRU（Least Recently Used, 最近最久未使用，可以实际应用），错用成了OPT（Optimal，最佳置换，理论上的置换方法）。其他的错在哪就可能自己事后都没发现吧。\n编程只拿到了4分（还是6分？）。羞耻= =，全是在那一道10分题中拿到的，除了long long之外不知道其他分数扣在哪，有可能是因为我当时图快使用的是递归求解，效率赶不上迭代，也有可能是犯了其他某些错误。30分的DP一分没拿到，毕竟我一行代码都没写= =。只有一行注释说“背包问题，可以用DP求解”。\n总的来说，当时笔试完自我感觉并不好。本来以为不会过，等了快一周还没收到短信，所以都已经准备放弃希望了。直到昨天翻快递短信的时候，看到了网易的短信通知，说我笔试过了，可以参加初面了。\n初面 裸面 初面来的猝不及防，没有一点点心理准备的我，在收到短信的当天都还在淡定撸RFID的课程项目代码。结果一下午都在debug，晚上10点才搞完。当时觉得，“完了完了，明天得裸面了”。\n半夜看了一会直播相关的技术帖，白天精力消耗太大，爬上床睡了。\n第二天早上7点多就爬起来继续看了一会，毕竟自己以前没怎么学过这一块，就按照计网知识，再加上自己以前学图像处理时对音频的知识，勉强硬啃下来了。\n但是我忘记了，校招一般不会问太多和工作岗位相关的工作，他们往往问的比较基础。比如最经典的8排序3搜索，比如OOP的虚类，虚函数，继承之类的基础知识。尤其是我简历里面还说了我主力代码是C/C++，之后是Java。\n抱着裸面的心态去的网易大厦。今天的人还不少，不过脸熟的没多少，可能我们院（指我们软件工程（移动信息工程），而不是整个数据科学院啦）的人有的上午就面过了，或者没什么人投这边。整场面试下来就碰到一个认识的人。\n进去之后人挺多了，我们在网易大厦一楼一个放映室等待，然后被一波一波叫出去等待面试。等不多一会，一个应该是HR的小姐姐带我们上了四楼（直播平台开发所在的楼层），十几个人在一个会议室等着被喊去面试。\n全是中大人，我们这一波十几个人就仨本科生，其他都是研究生，我开始有点怂了。。。。那个时候，对面一个研二师姐说上次面试就是手写搜索算法，我才突然想到，我光看直播技术贴，排序搜索什么的都没看= =\n临时用手机翻了一点关于排序和搜索的算法，看了一下时间复杂度，被叫去面试。\n面试 面试环境还好，空间虽然小了点，但是因为是透明玻璃墙，所以也就没有显得拥挤，房间里面有两个面试官。年轻的面试官主要提问算法和其他工程上的问题，另一位大叔感觉像是HR或者主管之类的管理者。\n首先是自我介绍啦，稍微讲一下自己的情况就好（我就讲了讲我来自哪，目前情况怎么样之类的，半分钟就没词了= =）。\n之后试官首先问我兴趣点，因为这个岗位进去之后还是有很多方向，比如前端 ，服务器，移动端之类。我说的是服务器，一方面是因为自己确实对前段没什么兴趣，另一方面去年和今年项目做得多了，就越来越觉得服务器挺重要的，毕竟很多前端的动态处理，移动端的服务，都得靠服务器端进行处理。\n接着面试开始问我的项目经验。年轻面试官从我的简历里面抽了大二时候做的用哈希表实现词典查询的项目进行提问。\n一脸懵逼，两脸茫然，猝不及防。我以为会问我直播技术有哪些瓶颈，我以为会问我怎么降低网络延迟，我以为会问我直播使用什么协议，分别有哪些优缺点，我以为会问我云计算课程实现的利用MapReduce分布式项目，我以为。。。\n然而，他竟然问我大二的项目= =\n还好当时自己在那个项目上折腾了好几天，依稀记得使用Map方法+链表实现的查询功能。然后我开始在草稿上回忆项目思路，一边回忆一遍和面试官口述（虽然一开始有点紧张还回忆错了，面试官仔细听了以后，对我查询方式提了一点质疑，我才重新想起来当时的项目内容。）口述完自己当时的项目之后，考官问我对这个项目有什么改进的想法。\n改进的想法？？？刚刚回忆完整个项目的我又开始陷入了沉思。我开始吧这个项目和这个岗位可能需要的地方开始考虑。\n这个岗位不是应该对分布式要求对点么，那就分布式搜索？？没听说过，不能瞎说。自己唯一写过的分布式架构的也就MapReduce实现的线性回归，自己也暂时没想带怎么使用分布式进行搜索的方法。突然我想到，提问过程中，面试官似乎问过我处理的信息量，我那种实现方法需要将所有数据写进内存，很费空间，这一点似乎可以优化。于是我就根据操作系统里面内存的的多级检索，大致讲了一下在大量数据情况下，减少内存消耗的方法。\n接下来面试官又从我项目经验中挑了一个二维码识别的项目。这个虽然是团队项目，但是前半部分我和队友一人一半，后半部分一人单挑，再加上是上个学期的项目，所以讲起来比较轻松。大致讲了一下自己当时实现的原理（直线在极坐标中的表示，点光源影响去除之类的）。\n又谈了一点项目经验，面试官开始问我主要擅长的领域。\n擅长的领域？？？又开始茫然，大学3年下来，基本都是按照课程项目走过来的，学的很散，也没有做过很成熟的项目。知识面有点广度，但是没有几个领域有深度，开始打算个人项目也是在上周四被网易理论试题打击以后，突然开始搞的。\n那就算法吧，再加个计网。仔细想了想自己的两年半多，算法自己从大一下怼到大二下，一年半下来，比赛奖项也集中在算法比赛上，就提了下自己的比较擅长算法。然后又想到我们上学期我计网理论学的还行，实验课怼交换机也贡献了大部分力气。这两个合起来对我拿到这份offer会不会有帮助。\n面试官开始问我关于网络编程的问题（当时的问题是，tcp编程的时候，什么时候会有time_ wait）。但是我没经历过网络编程啊，上个学期交换器和路由器的实验全部重在配置，在控制台输指令的那种。网络编程这一块我就没接触过啊，我就试探了一下说是不是在网络用塞的时候，因为听到这个变量我以为是TCP的连接超时。面试官否决了我的回答，我只能如实说自己没做过相关项目，面试官说了真确答案是断开连接的时候。（回来查了一下相关知识，time _wait确实是在TCP的四次挥手的时候用到的，拥塞控制是tcp _timestamps，知识来源）\n接着面试官开始问我算法题，比如堆排和快排的对比，两种算法的应用场景之类。我大致分析了一下快排的缺点是最坏情况时间复杂度是(On^2), 堆排整理需要(Onlgn)，但是忘记分析堆排和快拍的空间消耗（自己平时从来没注意过），是否乱序方面也忘记分析了（其实两者都会乱序）。终究还是自己平时项目做得少了，算法也看的少了。。。。\n然后面试官问了我快排的实现方法，我在纸上大致说了一种刚刚在网上看到，回忆起来的教科书上的快排。这种方法对最后的标志位在一开始是不明确的。我看考官没怎么说话，就默默在纸上再说了一下整个整理过程。看完考官提问，没有标志位的么。我就又说了在大一的时候学的预先定位标志位进行快排整理的方法，考官这次就似乎比较满意。\n再接着面试官问了一下STL中Map是用什么实现的。因为我第一个项目中，就是使用的标准STL Map，而不是自己实现。我答了红黑树，这个在很久以前某篇文章中看到过。\n最后就是大叔面试官问，我还想说些什么。（大叔面试官全程比较少提问，感觉他应该是坐在主管位置，年轻的小哥面试官则应该是主要带项目什么的了）我大致说了一下自己在投简历和面试过程中对这个岗位产生的疑问，以及问了下我能够学到什么，基本面试也就结束了。\n面试总结 总的来说，网易的笔试确实有难度，面试关反而没有那么难了，主要重在项目和你擅长的方向的了解。\n在准备方面\n我笔试40分都有机会拿到面试机会，如果有机会参加笔试机会的人可以有信心了。 简历上的项目一定要是你有参与或者主持或者独自完成的项目。混水的项目就不要写上去了，以免面试官问起来自己一脸茫然。 面试前最好准备一下基础的算法知识。因为自己面的是开发岗，所以对算法要求还是比较高的。基本的8大查找，3大搜索要知道。 网易的面试方面不会太难。提前对自己的项目做好整理，看一下自己的项目报告什么的帮助回忆，也就不会像我这样裸面，在面试的时候一边面试一边回忆了。 有些问题还是流程化的，比如对这个工作有什么期待，自我评价（本次面试没有提到），自我介绍什么的。在准备前都好好准备下。 网易技术岗的技术面一共有两轮。我目前只经历了第一轮，希望有机会能够接触到第二轮（并不知道会问什么内容），以及最终的HR面。 面试官不会很严，技术面也不会压力面试什么的，面试环节还是比较轻松的，不用紧张。 最后，希望我还有机会写一个二面以及终面总结吧。\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/%E7%BD%91%E6%98%93%E5%88%9D%E9%9D%A2%E6%8A%80%E6%9C%AF%E9%9D%A2/","section":"post","tags":["面经","网易"],"title":"网易初面（技术面）"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/csdn/","section":"tags","tags":null,"title":"CSDN"},{"body":"本来我一直不会在csdn中转载他人的文章的，知道有一次在网上看到一篇教程（来源已经忘记，但是原理很简答）。\n利用Markdown可以解析html的特点，我们只要在开发者模式中，将需要转载的人的博客地址的文章部分的div块整个复制下来就行了。\n下面我将演示一下如何操作。\n打开浏览器的开发者模式（Chrome为F12，其他的从设置中一般能够找到），点一下开发者模式左上角的小指针图标，这个时候，浏览器就能够通过你鼠标点击的位置定位到相应的html结构中了。\n在本次操作中，我发现我的正文都被放在一个class为“markdown_views”的div块中了。\n我们右键单击这个div块，然后选择Copy-\u0026gt;copy element，就能够将这个块内的元素全部提取下来啦。接下来的事情就是转回自己的博客，使用markdown编辑器，将元素复制进来。标明出处和原始博客地址，就可以发表啦。（如果不小心复制了广告或者“上一篇”之类的元素，删掉就行了）。\n这种方式对转载其他出处的文章一样可用。不过，记得无论怎么转载，都要注明“转载”并且说明出处就是咯。\n下面是我从我另一篇博客中复制过来的内容，可以看看。\n龙云尧个人博客，转载请注明出处。\nCSDN地址：http://blog.csdn.net/Michael753951/article/details/70307694\n个人博客地址：http://123.207.243.115:81/li-yong-ghostzuo-wei-tu-chuang/\n起源 图床一直是一个很让我头疼的问题，在去年开始，我就有用markdown写项目总结的习惯，贴图的时候，怎么找一个好用的图床这个问题却一直没有解决。\n目前我是用过的图床包括网易LOFTER，github，CSDN以及自己搭建的Ghost博客服务器。\n前三种方式中，LOFTER和github直接将图片拖进去，然后右键图片，复制源地址就行了。但是美中不足的是LOFTER的源在其他网站上显示并不是很友好，github在虽然图片显示很清楚，但是上传图片的时候总是会出问题。CSDN和github一样，上传文件时总是会出问题。\n这迫使我有了再重新寻找一个图床的想法。\n解决 今晚（2017/4/21）凌晨在写项目总结的时候，我突然意识到我可以利用自己的博客服务器作为图床。而且服务器ip地址在公网中，地理地质位于华南，作为图床应该会比较稳定。\n果然，在稍微折腾一下之后，我在ghost官网中找到一篇【Upload Images】的教程，有告诉我们怎么向服务器传文件并且在博客中显示。\n我就可以利用这个原理，将Ghost服务器作为图床啦。\n实际操作 操作过程比较简单。\n首先我们进入后台新建一篇文章(New Post)。然后在正文空白部分输入![]()，右侧就会出现一个提示框。如下图所示。\n点击Update an image，我们就能从本地文件中选取一张图片上传上服务器，同时之前![]()中的括号中出现了一个相对路径，比如我的就是/content/images/2017/04/temp.png。\n注意，相对路径是不能在其他地方打开的，只能在本服务器才能打开。\n但是我们的目的是将该图片用在其他，将本服务器作为图床。所以我们这是就需要右键单击右侧显示的图片，选择“复制图片地址”，然后将这个地址粘贴到其他地方，这样这张图片在其他地方也就能够正常显示啦。\n本篇博客就是使用这个原理实现的图像显示。\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/csdn%E5%A6%82%E4%BD%95%E8%BD%AC%E8%BD%BD%E4%BB%96%E4%BA%BA%E6%96%87%E7%AB%A0/","section":"post","tags":["CSDN","blog"],"title":"CSDN如何转载他人文章"},{"body":"龙云尧个人博客，转载请注明出处。\nCSDN地址：http://blog.csdn.net/Michael753951/article/details/70307694\n个人博客地址：http://123.207.243.115:81/li-yong-ghostzuo-wei-tu-chuang/\n起源 图床一直是一个很让我头疼的问题，在去年开始，我就有用markdown写项目总结的习惯，贴图的时候，怎么找一个好用的图床这个问题却一直没有解决。\n目前我是用过的图床包括网易LOFTER，github，CSDN以及自己搭建的Ghost博客服务器。\n前三种方式中，LOFTER和github直接将图片拖进去，然后右键图片，复制源地址就行了。但是美中不足的是LOFTER的源在其他网站上显示并不是很友好，github在虽然图片显示很清楚，但是上传图片的时候总是会出问题。CSDN和github一样，上传文件时总是会出问题。\n这迫使我有了再重新寻找一个图床的想法。\n解决 今晚（2017/4/21）凌晨在写项目总结的时候，我突然意识到我可以利用自己的博客服务器作为图床。而且服务器ip地址在公网中，地理地质位于华南，作为图床应该会比较稳定。\n果然，在稍微折腾一下之后，我在ghost官网中找到一篇【Upload Images】的教程，有告诉我们怎么向服务器传文件并且在博客中显示。\n我就可以利用这个原理，将Ghost服务器作为图床啦。\n实际操作 操作过程比较简单。\n首先我们进入后台新建一篇文章(New Post)。然后在正文空白部分输入![]()，右侧就会出现一个提示框。如下图所示。\n点击Update an image，我们就能从本地文件中选取一张图片上传上服务器，同时之前![]()中的括号中出现了一个相对路径，比如我的就是/content/images/2017/04/temp.png。\n注意，相对路径是不能在其他地方打开的，只能在本服务器才能打开。\n但是我们的目的是将该图片用在其他，将本服务器作为图床。所以我们这是就需要右键单击右侧显示的图片，选择**“复制图片地址”**，然后将这个地址粘贴到其他地方，这样这张图片在其他地方也就能够正常显示啦。\n本篇博客就是使用这个原理实现的图像显示。\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/%E5%88%A9%E7%94%A8ghost%E4%BD%9C%E4%B8%BA%E5%9B%BE%E5%BA%8A/","section":"post","tags":["Ghost","图床"],"title":"利用Ghost作为图床"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E5%9B%BE%E5%BA%8A/","section":"tags","tags":null,"title":"图床"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/categories/python/","section":"categories","tags":null,"title":"Python"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/python/","section":"tags","tags":null,"title":"Python"},{"body":"","link":"https://yunyaolong.github.io/longyunyao.github.io/tags/%E7%88%AC%E8%99%AB/","section":"tags","tags":null,"title":"爬虫"},{"body":"1import requests 2artibody_url = \u0026#39;http://news.sina.com.cn/o/2017-04-18/doc-ifyeimzx6745829.shtml\u0026#39; 3artibody_res = requests.get(artibody_url) 4artibody_res.encoding = \u0026#39;utf-8\u0026#39; 5print(artibody_res.text) \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;!-- [ published at 2017-04-18 04:22:23 ] --\u0026gt; \u0026lt;!-- LLTJ_MT:name =\u0026quot;环球网\u0026quot; --\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;/\u0026gt; \u0026lt;meta name=\u0026quot;sudameta\u0026quot; content=\u0026quot;urlpath:c/; allCIDs:56044,257,51895,200856,51922,56261,258,38790\u0026quot;\u0026gt; \u0026lt;title\u0026gt;美媒:中国奇迹没有结束 而是进入了第二阶段|中国经济_新浪新闻\u0026lt;/title\u0026gt; \u0026lt;meta name=\u0026quot;keywords\u0026quot; content=\u0026quot;中国经济\u0026quot; /\u0026gt; \u0026lt;meta name=\u0026quot;tags\u0026quot; content=\u0026quot;中国经济\u0026quot; /\u0026gt; \u0026lt;meta name=\u0026quot;description\u0026quot; content=\u0026quot;原标题：美媒：中国奇迹没有结束，而是进入了第二阶段[环球时报综合报道]“增长表现超出预期”，对于中国国家统计局公布的今年一季度6.9%的国内生产总值（GDP）增长率，外媒昨天纷纷这样强调。不同的人看到不一样的风景，但一个显而易见的事实是，只\u0026quot; /\u0026gt; \u0026lt;link rel=\u0026quot;mask-icon\u0026quot; sizes=\u0026quot;any\u0026quot; href=\u0026quot;//www.sina.com.cn/favicon.svg\u0026quot; color=\u0026quot;red\u0026quot;\u0026gt; \u0026lt;meta property=\u0026quot;og:type\u0026quot; content=\u0026quot;news\u0026quot; /\u0026gt; \u0026lt;meta property=\u0026quot;og:title\u0026quot; content=\u0026quot;美媒:中国奇迹没有结束 而是进入了第二阶段\u0026quot; /\u0026gt; \u0026lt;meta property=\u0026quot;og:description\u0026quot; content=\u0026quot;美媒:中国奇迹没有结束 而是进入了第二阶段\u0026quot; /\u0026gt; \u0026lt;meta property=\u0026quot;og:url\u0026quot; content=\u0026quot;http://news.sina.com.cn/o/2017-04-18/doc-ifyeimzx6745829.shtml\u0026quot; /\u0026gt; \u0026lt;meta property=\u0026quot;og:image\u0026quot; content=\u0026quot;http://n.sinaimg.cn/news/transform/20170418/UrtA-fyeimrn2749398.jpg\u0026quot; /\u0026gt; \u0026lt;meta name=\u0026quot;weibo: article:create_at\u0026quot; content=\u0026quot;2017-04-18 02:25:00\u0026quot; /\u0026gt; \u0026lt;meta name=\u0026quot;weibo: article:update_at\u0026quot; content=\u0026quot;2017-04-18 04:22:15\u0026quot; /\u0026gt; \u0026lt;meta property=\u0026quot;article:published_time\u0026quot; content=\u0026quot;2017-04-18T02:31:33+08:00\u0026quot; /\u0026gt; \u0026lt;meta property=\u0026quot;article:author\u0026quot; content=\u0026quot;环球网\u0026quot; /\u0026gt; \u0026lt;meta name=\u0026quot;stencil\u0026quot; content=\u0026quot;PGLS000115\u0026quot; /\u0026gt; \u0026lt;meta name=\u0026quot;publishid\u0026quot; content=\u0026quot;fyeimzx6745829\u0026quot; /\u0026gt; \u0026lt;meta name=\u0026quot;comment\u0026quot; content=\u0026quot;gn:comos-fyeimzx6745829\u0026quot; /\u0026gt; \u0026lt;meta name=\u0026quot;sudameta\u0026quot; content=\u0026quot;comment_channel:gn;comment_id:comos-fyeimzx6745829\u0026quot; /\u0026gt; \u0026lt;meta name=\u0026quot;mediaid\u0026quot; content=\u0026quot;环球网\u0026quot;\u0026gt; \u0026lt;meta name=\u0026quot;sudameta\u0026quot; content=\u0026quot;sinaog:0\u0026quot; /\u0026gt; \u0026lt;meta name=\u0026quot;mobile-agent\u0026quot; content=\u0026quot;format=html5; url=http://news.sina.cn/2017-04-18/detail-ifyeimzx6745829.d.html\u0026quot;\u0026gt; \u0026lt;meta name=\u0026quot;mobile-agent\u0026quot; content=\u0026quot;format=xhtml; url=http://news.sina.cn/2017-04-18/detail-ifyeimzx6745829.d.html\u0026quot;\u0026gt; \u0026lt;meta name=\u0026quot;mobile-agent\u0026quot; content=\u0026quot;format=wml; url=http://news.sina.cn/2017-04-18/detail-ifyeimzx6745829.d.html\u0026quot;\u0026gt; \u0026lt;link rel=\u0026quot;alternate\u0026quot; type=\u0026quot;application/rss+xml\u0026quot; title=\u0026quot;新浪新闻中心_国内新闻\u0026quot; href=\u0026quot;http://rss.sina.com.cn/news/china/focus15.xml\u0026quot; /\u0026gt; \u0026lt;!-- 栏目名： 56044 国内新闻 --\u0026gt;\u0026lt;!-- id： fyeimzx6745829 URL： http://news.sina.com.cn/o/2017-04-18/doc-ifyeimzx6745829.shtml --\u0026gt; \u0026lt;meta name=jspreload content=\u0026quot;jspreload\u0026quot;\u0026gt; \u0026lt;script type=\u0026quot;text/javascript\u0026quot;\u0026gt; (function(){ if(navigator.userAgent.indexOf('MSIE') === -1){return}; var list = [\u0026quot;http://int.dpool.sina.com.cn/iplookup/iplookup.php?format=js\u0026quot;,\u0026quot;http://news.sina.com.cn/js/87/content2014/common.js\u0026quot;,\u0026quot;http://d1.sina.com.cn/litong/zhitou/sspnew.js\u0026quot;,\u0026quot;http://d2.sina.com.cn/d1images/button/rotator.js\u0026quot;,\u0026quot;http://i.sso.sina.com.cn/js/ssologin.js\u0026quot;,\u0026quot;http://i.sso.sina.com.cn/js/outlogin_layer.js\u0026quot;,\u0026quot;http://i.sso.sina.com.cn/js/user_panel_new_version_v2.js\u0026quot;,\u0026quot;http://n.sinaimg.cn/ent/wsy/topnav20150402.js\u0026quot;,\u0026quot;http://static.bshare.cn/b/buttonLite.js#style=-1\u0026amp;amp;uuid=cc6dc2b3-f467-40cb-afae-c7c6154a5f54\u0026amp;amp;pophcol=2\u0026amp;amp;lang=zh\u0026quot;,\u0026quot;http://static.bshare.cn/b/bshareC0.js\u0026quot;,\u0026quot;http://news.sina.com.cn/268/2014/0919/bshare_update.js\u0026quot;,\u0026quot;http://news.sina.com.cn/js/87/content2014/d_location.js\u0026quot;,\u0026quot;http://news.sina.com.cn/js/87/20130522/content/piclead.js\u0026quot;,\u0026quot;http://pfp.sina.com.cn/js/17/2013/0621/tb/59.js\u0026quot;,\u0026quot;http://d2.sina.com.cn/d1images/button/rotator.js\u0026quot;,\u0026quot;http://d5.sina.com.cn/litong/zhitou/sinaads/release/sinaads.js\u0026quot;,\u0026quot;http://pfp.sina.com.cn/iframe/14/2011/0517/47zhongshiwangmeng.js\u0026quot;,\u0026quot;http://pfp.sina.com.cn/js/17/2012/0928/china00_300x500.js\u0026quot;,\u0026quot;http://d5.sina.com.cn/litong/zhitou/sinaads/release/sinaads.js\u0026quot;,\u0026quot;http://pfp.sina.com.cn/js/17/2013/0621/tb/58.js\u0026quot;,\u0026quot;http://d5.sina.com.cn/litong/xianwei/taobao0827.js\u0026quot;,\u0026quot;http://d3.sina.com.cn/litong/zhitou/sinaads/release/sinaads.js\u0026quot;,\u0026quot;http://d0.sina.com.cn/litong/zhitou/sinaads/release/sinaads.js\u0026quot;,\u0026quot;http://d5.sina.com.cn/litong/zhitou/sinaads/release/sinaads.js\u0026quot;,\u0026quot;http://tech.sina.com.cn/js/717/20140827/index2014/top.js\u0026quot;,\u0026quot;http://news.sina.com.cn/js/87/20140926/comment.3.min.js\u0026quot;,\u0026quot;http://news.sina.com.cn/js/87/content2014/feed.relatedNews.js\u0026quot;,\u0026quot;http://i1.sinaimg.cn/unipro/pub/suda_m_v629.js\u0026quot;,\u0026quot;http://d3.sina.com.cn/litong/zhitou/sinaads/release/sinaads.js\u0026quot;]; for(var i=0;i\u0026lt;list.length;i++){(new Image()).src = list[i]} })(); \u0026lt;/script\u0026gt; \u0026lt;script type=\u0026quot;text/javascript\u0026quot; src=\u0026quot;http://int.dpool.sina.com.cn/iplookup/iplookup.php?format=js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;link rel=\u0026quot;stylesheet\u0026quot; href=\u0026quot;http://tech.sina.com.cn/css/717/20140911/index2014/feed.1.1.7.css\u0026quot; type=\u0026quot;text/css\u0026quot; /\u0026gt; \u0026lt;link rel=\u0026quot;stylesheet\u0026quot; href=\u0026quot;http://news.sina.com.cn/268/2014/0919/bshare_update.css\u0026quot; type=\u0026quot;text/css\u0026quot;\u0026gt; \u0026lt;link rel=\u0026quot;stylesheet\u0026quot; type=\u0026quot;text/css\u0026quot; href=\u0026quot;http://news.sina.com.cn/css/87/20140926/comment.3.css\u0026quot;\u0026gt; \u0026lt;link rel=\u0026quot;stylesheet\u0026quot; type=\u0026quot;text/css\u0026quot; href=\u0026quot;http://news.sina.com.cn/css/87/content2014/common.min.css\u0026quot; /\u0026gt; \u0026lt;link rel=\u0026quot;stylesheet\u0026quot; type=\u0026quot;text/css\u0026quot; href=\u0026quot;http://news.sina.com.cn/css/87/content2014/style_news.css\u0026quot; /\u0026gt; \u0026lt;script type=\u0026quot;text/javascript\u0026quot; src=\u0026quot;http://news.sina.com.cn/js/87/content2014/common.js\u0026quot; charset=\u0026quot;gbk\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script type=\u0026quot;text/javascript\u0026quot;\u0026gt; (function(){ //var isTouchDevice = 'ontouchstart' in window; var _doc = document; var head, meta; if(SINA_ARTICLE_PAGE_SETTINGS.isPad){ head = _doc.querySelector('head'); meta = document.createElement('meta'); meta.setAttribute('name', 'viewport'); meta.setAttribute('content', 'initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no'); head.appendChild(meta); _doc.write('\u0026lt;link rel=\u0026quot;stylesheet\u0026quot; href=\u0026quot;http://n0.sinaimg.cn/news/4803d74b/20170109/ipad.min.css\u0026quot;\u0026gt;'); _doc.write('\u0026lt;' + 'script type=\u0026quot;text/javascript\u0026quot; src=\u0026quot;http://n.sinaimg.cn/news/content2014/zepto.min.js\u0026quot;\u0026gt;\u0026lt;/' + 'script\u0026gt;'); } else { _doc.write('\u0026lt;link rel=\u0026quot;stylesheet\u0026quot; href=\u0026quot;http://news.sina.com.cn/css/87/content2014/desktop.min.css\u0026quot;\u0026gt;'); _doc.write('\u0026lt;' + 'script type=\u0026quot;text/javascript\u0026quot; src=\u0026quot;http://n.sinaimg.cn/news/content2014/jquery-1.11.1.min.js\u0026quot;\u0026gt;\u0026lt;/' + 'script\u0026gt;'); } })(); \u0026lt;/script\u0026gt; \u0026lt;script\u0026gt;try{document.domain='sina.com.cn'}catch(e){}\u0026lt;/script\u0026gt; \u0026lt;script type=\u0026quot;text/javascript\u0026quot; src=\u0026quot;http://d1.sina.com.cn/litong/zhitou/sspnew.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script language=\u0026quot;javascript\u0026quot; type=\u0026quot;text/javascript\u0026quot; src=\u0026quot;http://d2.sina.com.cn/d1images/button/rotator.js\u0026quot; charset=\u0026quot;gbk\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; //设置本页面的富媒体类型的顺序 var _SINAADS_CONF_PAGE_MEDIA_ORDER = [\u0026quot;PDPS000000056619\u0026quot;, \u0026quot;PDPS000000042133\u0026quot;, \u0026quot;PDPS000000057131\u0026quot;]; //var sinaadsPageMediaOrder = ['bottomstream', 'kzhzh', 'fc']; \u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; (function (d, s, id) { var s, n = d.getElementsByTagName(s)[0]; if (d.getElementById(id)) return; s = d.createElement(s); s.id = id; s.setAttribute('charset', 'utf-8'); s.src = '//d' + Math.floor(0 + Math.random() * (9 - 0 + 1)) + '.sina.com.cn/litong/zhitou/sinaads/release/sinaads.js'; n.parentNode.insertBefore(s, n); })(document, 'script', 'sinaads-script'); \u0026lt;/script\u0026gt; \u0026lt;script language='javascript' charset='utf-8' src='http://i.sso.sina.com.cn/js/ssologin.js'\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script type=\u0026quot;text/javascript\u0026quot; src=\u0026quot;http://i.sso.sina.com.cn/js/outlogin_layer.js\u0026quot; charset=\u0026quot;utf-8\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script type=\u0026quot;text/javascript\u0026quot; src=\u0026quot;http://i.sso.sina.com.cn/js/user_panel_new_version_v2.js\u0026quot; charset=\u0026quot;utf-8\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt;\u0026lt;!-- body code begin --\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 1from bs4 import BeautifulSoup 2artibody_soup = BeautifulSoup(artibody_res.text, \u0026#39;html.parser\u0026#39;) 3artibody_div = artibody_soup.select(\u0026#39;#artibody p\u0026#39;)[1:-2] 4print(artibody_div) [\u0026lt;p\u0026gt;　[环球时报综合报道] “增长表现超出预期”，对于中国国家统计局公布的今年一季度6.9%的国内生产总值（GDP）增长率，外媒昨天纷纷这样强调。不同的人看到不一样的风景，但一个显而易见的事实是，只要中国大体维持目前的相对增长优势，上升的步伐便不可阻挡。正如美国《福布斯》日前所说：中国的经济奇迹没有结束，而是进入了第二阶段。\u0026lt;/p\u0026gt;, \u0026lt;p\u0026gt;　虽然增长放缓，挑战越来越多，但中国的进步有目共睹。《纽约时报》17日称，过去11个季度的官方数据显示，中国经济增长在6.7%到7.2%之间。从国际标准看，这是令人吃惊的长期稳定增长。与此形成鲜明对比的是，美国的季度增长经常仅为一两个百分点。过去12年，中国蓝领工人薪酬激增8倍，这大幅削弱了中国的劳工成本优势，不过同时也促进了经济繁荣，推动消费增长。\u0026lt;/p\u0026gt;, \u0026lt;p\u0026gt;　日本《外交学者》称，过去几十年中国GDP保持两位数增长，但现在增幅仅为6%到7%之间。尽管中国经济增长确实放缓了，但中国消费者强势登上世界舞台的购买力并没有减弱的趋势。事实上，中国消费者的购买力今后还将变得更加显著。麦肯锡分析师预计，到2020年中国将有近4亿家庭收入在1.6万到3.4万美元之间的“主流消费者”，或者说中产阶层消费者。这些消费者的强大实力将震撼世界。\u0026lt;/p\u0026gt;, \u0026lt;p\u0026gt;　19日，第17届上海国际车展将拉开帷幕。法新社称，全球汽车厂商本周汇聚中国，面对世界最大汽车市场上的激烈竞争，业界正在为销售放缓和潜在的价格战做好准备。不过，应该客观认识中国汽车产业遇到的这些麻烦，中国对汽车厂商来说仍是一座金矿。去年美国汽车销量创下历史新高，达到1755万辆，但中国早在8年前就超越这个数字并成为世界第一大汽车市场。\u0026lt;/p\u0026gt;, \u0026lt;p\u0026gt;　“中国奇迹没有结束，而是进入了第二阶段”，美国《福布斯》日前刊文称，1980年，世界人口最多的国家也是最贫困的国家之一。30多年后，中国已成为仅次于美国的世界第二大经济体。去年中国GDP达到10.8万亿美元。此前，从没有一个像中国这样规模如此之大、情况如此之复杂、历史如此之悠久的国家能在如此短的时间内迅速崛起。过去6年来，中国平均增速“仅为”6%到9%之间，这使得有些人宣称中国奇迹结束了。这些人错了，中国只是进入了第二阶段。中国政府在保持稳定的同时寻求发展。我们可将此解释为努力将中国经济从侧重制造和出口转向更成熟的经济发展推动力量。通过致力于现代化增长的四大支柱消费、科技、高端制造和服务业，中国将推动其经济增长奇迹转型和继续发展。\u0026lt;/p\u0026gt;] 1article = [] 2for p in artibody_div: 3 article.append(p.text.strip()) 4print(article) ['[环球时报综合报道] “增长表现超出预期”，对于中国国家统计局公布的今年一季度6.9%的国内生产总值（GDP）增长率，外媒昨天纷纷这样强调。不同的人看到不一样的风景，但一个显而易见的事实是，只要中国大体维持目前的相对增长优势，上升的步伐便不可阻挡。正如美国《福布斯》日前所说：中国的经济奇迹没有结束，而是进入了第二阶段。', '虽然增长放缓，挑战越来越多，但中国的进步有目共睹。《纽约时报》17日称，过去11个季度的官方数据显示，中国经济增长在6.7%到7.2%之间。从国际标准看，这是令人吃惊的长期稳定增长。与此形成鲜明对比的是，美国的季度增长经常仅为一两个百分点。过去12年，中国蓝领工人薪酬激增8倍，这大幅削弱了中国的劳工成本优势，不过同时也促进了经济繁荣，推动消费增长。', '日本《外交学者》称，过去几十年中国GDP保持两位数增长，但现在增幅仅为6%到7%之间。尽管中国经济增长确实放缓了，但中国消费者强势登上世界舞台的购买力并没有减弱的趋势。事实上，中国消费者的购买力今后还将变得更加显著。麦肯锡分析师预计，到2020年中国将有近4亿家庭收入在1.6万到3.4万美元之间的“主流消费者”，或者说中产阶层消费者。这些消费者的强大实力将震撼世界。', '19日，第17届上海国际车展将拉开帷幕。法新社称，全球汽车厂商本周汇聚中国，面对世界最大汽车市场上的激烈竞争，业界正在为销售放缓和潜在的价格战做好准备。不过，应该客观认识中国汽车产业遇到的这些麻烦，中国对汽车厂商来说仍是一座金矿。去年美国汽车销量创下历史新高，达到1755万辆，但中国早在8年前就超越这个数字并成为世界第一大汽车市场。', '“中国奇迹没有结束，而是进入了第二阶段”，美国《福布斯》日前刊文称，1980年，世界人口最多的国家也是最贫困的国家之一。30多年后，中国已成为仅次于美国的世界第二大经济体。去年中国GDP达到10.8万亿美元。此前，从没有一个像中国这样规模如此之大、情况如此之复杂、历史如此之悠久的国家能在如此短的时间内迅速崛起。过去6年来，中国平均增速“仅为”6%到9%之间，这使得有些人宣称中国奇迹结束了。这些人错了，中国只是进入了第二阶段。中国政府在保持稳定的同时寻求发展。我们可将此解释为努力将中国经济从侧重制造和出口转向更成熟的经济发展推动力量。通过致力于现代化增长的四大支柱消费、科技、高端制造和服务业，中国将推动其经济增长奇迹转型和继续发展。'] 1\u0026#39; \u0026#39;.join(article) '[环球时报综合报道] “增长表现超出预期”，对于中国国家统计局公布的今年一季度6.9%的国内生产总值（GDP）增长率，外媒昨天纷纷这样强调。不同的人看到不一样的风景，但一个显而易见的事实是，只要中国大体维持目前的相对增长优势，上升的步伐便不可阻挡。正如美国《福布斯》日前所说：中国的经济奇迹没有结束，而是进入了第二阶段。 虽然增长放缓，挑战越来越多，但中国的进步有目共睹。《纽约时报》17日称，过去11个季度的官方数据显示，中国经济增长在6.7%到7.2%之间。从国际标准看，这是令人吃惊的长期稳定增长。与此形成鲜明对比的是，美国的季度增长经常仅为一两个百分点。过去12年，中国蓝领工人薪酬激增8倍，这大幅削弱了中国的劳工成本优势，不过同时也促进了经济繁荣，推动消费增长。 日本《外交学者》称，过去几十年中国GDP保持两位数增长，但现在增幅仅为6%到7%之间。尽管中国经济增长确实放缓了，但中国消费者强势登上世界舞台的购买力并没有减弱的趋势。事实上，中国消费者的购买力今后还将变得更加显著。麦肯锡分析师预计，到2020年中国将有近4亿家庭收入在1.6万到3.4万美元之间的“主流消费者”，或者说中产阶层消费者。这些消费者的强大实力将震撼世界。 19日，第17届上海国际车展将拉开帷幕。法新社称，全球汽车厂商本周汇聚中国，面对世界最大汽车市场上的激烈竞争，业界正在为销售放缓和潜在的价格战做好准备。不过，应该客观认识中国汽车产业遇到的这些麻烦，中国对汽车厂商来说仍是一座金矿。去年美国汽车销量创下历史新高，达到1755万辆，但中国早在8年前就超越这个数字并成为世界第一大汽车市场。 “中国奇迹没有结束，而是进入了第二阶段”，美国《福布斯》日前刊文称，1980年，世界人口最多的国家也是最贫困的国家之一。30多年后，中国已成为仅次于美国的世界第二大经济体。去年中国GDP达到10.8万亿美元。此前，从没有一个像中国这样规模如此之大、情况如此之复杂、历史如此之悠久的国家能在如此短的时间内迅速崛起。过去6年来，中国平均增速“仅为”6%到9%之间，这使得有些人宣称中国奇迹结束了。这些人错了，中国只是进入了第二阶段。中国政府在保持稳定的同时寻求发展。我们可将此解释为努力将中国经济从侧重制造和出口转向更成熟的经济发展推动力量。通过致力于现代化增长的四大支柱消费、科技、高端制造和服务业，中国将推动其经济增长奇迹转型和继续发展。' 1\u0026#39; \u0026#39;.join([p.text.strip() for p in artibody_soup.select(\u0026#39;#artibody p\u0026#39;)[1:-2]]) '[环球时报综合报道] “增长表现超出预期”，对于中国国家统计局公布的今年一季度6.9%的国内生产总值（GDP）增长率，外媒昨天纷纷这样强调。不同的人看到不一样的风景，但一个显而易见的事实是，只要中国大体维持目前的相对增长优势，上升的步伐便不可阻挡。正如美国《福布斯》日前所说：中国的经济奇迹没有结束，而是进入了第二阶段。 虽然增长放缓，挑战越来越多，但中国的进步有目共睹。《纽约时报》17日称，过去11个季度的官方数据显示，中国经济增长在6.7%到7.2%之间。从国际标准看，这是令人吃惊的长期稳定增长。与此形成鲜明对比的是，美国的季度增长经常仅为一两个百分点。过去12年，中国蓝领工人薪酬激增8倍，这大幅削弱了中国的劳工成本优势，不过同时也促进了经济繁荣，推动消费增长。 日本《外交学者》称，过去几十年中国GDP保持两位数增长，但现在增幅仅为6%到7%之间。尽管中国经济增长确实放缓了，但中国消费者强势登上世界舞台的购买力并没有减弱的趋势。事实上，中国消费者的购买力今后还将变得更加显著。麦肯锡分析师预计，到2020年中国将有近4亿家庭收入在1.6万到3.4万美元之间的“主流消费者”，或者说中产阶层消费者。这些消费者的强大实力将震撼世界。 19日，第17届上海国际车展将拉开帷幕。法新社称，全球汽车厂商本周汇聚中国，面对世界最大汽车市场上的激烈竞争，业界正在为销售放缓和潜在的价格战做好准备。不过，应该客观认识中国汽车产业遇到的这些麻烦，中国对汽车厂商来说仍是一座金矿。去年美国汽车销量创下历史新高，达到1755万辆，但中国早在8年前就超越这个数字并成为世界第一大汽车市场。 “中国奇迹没有结束，而是进入了第二阶段”，美国《福布斯》日前刊文称，1980年，世界人口最多的国家也是最贫困的国家之一。30多年后，中国已成为仅次于美国的世界第二大经济体。去年中国GDP达到10.8万亿美元。此前，从没有一个像中国这样规模如此之大、情况如此之复杂、历史如此之悠久的国家能在如此短的时间内迅速崛起。过去6年来，中国平均增速“仅为”6%到9%之间，这使得有些人宣称中国奇迹结束了。这些人错了，中国只是进入了第二阶段。中国政府在保持稳定的同时寻求发展。我们可将此解释为努力将中国经济从侧重制造和出口转向更成熟的经济发展推动力量。通过致力于现代化增长的四大支柱消费、科技、高端制造和服务业，中国将推动其经济增长奇迹转型和继续发展。' 1artibody_editor = artibody_soup.select(\u0026#39;.article-editor\u0026#39;)[0].text.lstrip(\u0026#39;责任编辑：\u0026#39;) 2print(artibody_editor) 李伟山 1artibody_title = artibody_soup.select(\u0026#39;title\u0026#39;)[0].text 2print(artibody_title) 美媒:中国奇迹没有结束 而是进入了第二阶段|中国经济_新浪新闻 1artibody_p = artibody_div.select(\u0026#39;p\u0026#39;)[0].contents 2print(artibody_p) ['\\u3000\\u3000原标题：美媒：中国奇迹没有结束，而是进入了第二阶段'] 1artibody_time = artibody_soup.select(\u0026#39;.time-source\u0026#39;)[0].contents[0].strip() 2from datetime import datetime 3dt = datetime.strptime(artibody_time, \u0026#39;%Y年%m月%d日%H:%M\u0026#39;) 4print(dt.strftime(\u0026#39;%Y-%m-%d %H:%M\u0026#39;)) 2017-04-18 02:25 1artibody_from = artibody_soup.select(\u0026#39;.time-source span a\u0026#39;)[0].text 2print(artibody_from) 环球网 1artibody_commentCount = artibody_soup.select(\u0026#39;.page-tool-i\u0026#39;) 2print(artibody_commentCount) [\u0026lt;span class=\u0026quot;page-tool-i page-tool-s\u0026quot; title=\u0026quot;分享\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;javascript:;\u0026quot; id=\u0026quot;shareArticleButton\u0026quot; onclick=\u0026quot;_S_uaTrack('index_news_content', 'other_click');\u0026quot;\u0026gt;分享\u0026lt;/a\u0026gt; \u0026lt;/span\u0026gt;, \u0026lt;span class=\u0026quot;page-tool-i page-tool-c page-tool-share\u0026quot; title=\u0026quot;评论\u0026quot;\u0026gt; \u0026lt;span id=\u0026quot;commentCount1\u0026quot;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;a href=\u0026quot;javascript:;\u0026quot; suda-uatrack=\u0026quot;key=index_news_content\u0026amp;amp;value=comment_click\u0026quot;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;/span\u0026gt;, \u0026lt;span class=\u0026quot;page-tool-i page-tool-s\u0026quot; title=\u0026quot;分享\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;javascript:;\u0026quot; id=\u0026quot;shareArticleButton2\u0026quot; onclick=\u0026quot;_S_uaTrack('index_news_content', 'other_roll_click');\u0026quot;\u0026gt;分享\u0026lt;/a\u0026gt; \u0026lt;/span\u0026gt;, \u0026lt;span class=\u0026quot;page-tool-i page-tool-c page-tool-share\u0026quot; id=\u0026quot;pageToolShare\u0026quot; title=\u0026quot;评论\u0026quot;\u0026gt; \u0026lt;a href=\u0026quot;javascript:;\u0026quot; suda-uatrack=\u0026quot;key=index_news_content\u0026amp;amp;value=comment_roll_click\u0026quot;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;span id=\u0026quot;commentCount1M\u0026quot;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/span\u0026gt;] 1comment_url = \u0026#39;http://comment5.news.sina.com.cn/page/info?version=1\u0026amp;format=js\u0026amp;channel=gn\u0026amp;newsid=comos-fyeimzx6745829\u0026amp;group=\u0026amp;compress=0\u0026amp;ie=utf-8\u0026amp;oe=utf-8\u0026amp;page=1\u0026amp;page_size=20\u0026#39; 2comment_res = requests.get(comment_url) 3comment_res.encoding = \u0026#39;utf-8\u0026#39; 4print(comment_res.text) var data={\u0026quot;result\u0026quot;: {\u0026quot;status\u0026quot;: {\u0026quot;msg\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;code\u0026quot;: 0}, \u0026quot;count\u0026quot;: {\u0026quot;qreply\u0026quot;: 10065, \u0026quot;total\u0026quot;: 10756, \u0026quot;show\u0026quot;: 200}, \u0026quot;replydict\u0026quot;: {\u0026quot;58F5941B-CA2D81B7-5D7A2F91-8C6-8ED\u0026quot;: [{\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;219.133.40.14\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5e7f\\u4e1c\\u6df1\\u5733\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F56F0A-DB85280E-EA280EB0-8C6-8D5\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u4e2d\\u56fd\\u6c7d\\u8f662016\\u5e74\\u4ea7\\u9500\\u91cf2800\\u4e07\\u8f86\\uff0c\\u5168\\u7403\\u7b2c\\u4e00\\uff0c\\u7f8e\\u56fd1800\\u4e07\\u8f86\\u7b2c\\u4e8c\\uff0c\\u65e5\\u672c500\\u4e07\\u8f86\\u7b2c\\u4e09\\uff0c\\u4e2d\\u56fd\\u662f\\u7f8e\\u56fd\\u52a0\\u65e5\\u672c\\u52a0\\u5fb7\\u56fd\\u52a0\\u6cd5\\u56fd\\u4e4b\\u548c\\u3002\\u5168\\u7403\\u4e09\\u5206\\u4e4b\\u4e00\\u6c7d\\u8f66\\u88ab\\u4e2d\\u56fd\\u4eba\\u4e70\\u8d70\\u3002\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u7528\\u6237fkh05x1o56\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;77\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;12\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 09:42:34\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;from=qqweb\u0026amp;OS_TYPE=14\u0026amp;SOFT_TYPE=Build/HONORBLN-AL10) Chrome/37.0.0.0 MQQBrowser/6.0 Safari/537.36\u0026amp;area=\\u5e7f\\u4e1c\\u6df1\\u5733\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u7528\\u6237fkh05x1o56\u0026amp;wb_profile_img=http%3A%2F%2Ftvax1.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=1\u0026amp;wb_user_id=3928493744\u0026amp;wb_time=1492479754\u0026amp;area=\\u5e7f\\u4e1c\\u6df1\\u5733\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;11\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;3928493744\u0026quot;}], \u0026quot;58F59478-CA2D81B7-5D7A2F91-8C6-8A2\u0026quot;: [{\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F51574-60EACE16-B8E57407-8C6-9B2\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F51574-60EACE16-B8E57407-8C6-9B2\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;49.87.56.99\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u6c5f\\u82cf\\u6dee\\u5b89\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F547C0-31573863-DCD0C9AA-8C6-89D\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u4f60\\u7684\\u5efa\\u8bae\\u6216\\u613f\\u671b\\u662f\\u7f8e\\u597d\\u7684\\uff0c\\u4f46\\u5728\\u73b0\\u5728\\u7684\\u4e2d\\u56fd\\u4e0d\\u5bb9\\u6613\\u5b9e\\u73b0\\u3002\\u4e00\\u5f53\\u6743\\u8005\\u6ca1\\u6709\\u9510\\u610f\\u6539\\u9769\\u7684\\u52c7\\u6c14\\uff0c\\u4e8c\\u65e2\\u5f97\\u5229\\u76ca\\u8005\\u7684\\u52bf\\u529b\\u53ca\\u963b\\u529b\\u5f88\\u5927\\u3002\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;3704670634\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;54\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;44\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 06:54:56\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u6c5f\\u82cf\\u6dee\\u5b89\u0026amp;area=\\u6c5f\\u82cf\\u6dee\\u5b89\u0026amp;p_nick=Maryland-DC\u0026amp;p_uid=3102045191\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;43\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;3704670634\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F51574-60EACE16-B8E57407-8C6-9B2\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F547C0-31573863-DCD0C9AA-8C6-89D\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;2\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;124.207.17.226\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5317\\u4eac\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F550EF-7CCF11E2-5DFCC6D5-8C6-8F1\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u5475\\u5475\\uff0c\\u4e00\\u8fb9\\u60f3\\u8981\\u514d\\u8d39\\u7684\\u4e00\\u8fb9\\u53c8\\u60f3\\u4f4e\\u7a0e\\u6536\\uff01\\u90a3\\u8bf7\\u95ee\\u94b1\\u4ece\\u54ea\\u91cc\\u6765\\uff1f\\u5317\\u6b27\\u798f\\u5229\\u662f\\u597d\\uff0c\\u4f46\\u662f\\u7a0e\\u7387\\u63a5\\u8fd150%\\uff01\\u4f60\\u53d7\\u5f97\\u4e86\\u5417\\uff1f\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;1576847061\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;50\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;481\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 07:34:07\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u5317\\u4eac\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u871a\\u8bed\\u6d41\\u8a00_74190\u0026amp;wb_profile_img=http%3A%2F%2Ftvax2.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=9\u0026amp;wb_user_id=1576847061\u0026amp;wb_time=1492472047\u0026amp;area=\\u5317\\u4eac\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;478\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;1576847061\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F51574-60EACE16-B8E57407-8C6-9B2\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F550EF-7CCF11E2-5DFCC6D5-8C6-8F1\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;3\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;112.96.33.147\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5e7f\\u4e1c\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F56976-70602193-4B6CF1AD-8C6-8F0\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u4eba\\u5bb6\\u5317\\u6b27\\u624d\\u662f\\u5171\\u540c\\u5bcc\\u88d5\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;today1874\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;10\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;46\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 09:18:46\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;OS_TYPE=13\u0026amp;SOFT_TYPE=Safari/602.1\u0026amp;area=\\u5e7f\\u4e1c\u0026amp;wb_verified=0\u0026amp;wb_screen_name=today1874\u0026amp;wb_profile_img=http%3A%2F%2Ftvax2.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=2\u0026amp;wb_user_id=1265430957\u0026amp;wb_time=1492478326\u0026amp;area=\\u5e7f\\u4e1c\u0026amp;p_nick=\\u871a\\u8bed\\u6d41\\u8a00_74190\u0026amp;p_uid=1576847061\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;45\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;1265430957\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;palmnews\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F51574-60EACE16-B8E57407-8C6-9B2\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F56976-70602193-4B6CF1AD-8C6-8F0\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;4\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;180.173.225.78\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u4e0a\\u6d77\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F56B38-B4ADE14E-16D5DDB9C-8C6-8AC\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u5317\\u6b27\\u5c0f\\u56fd\\u5be1\\u6c11\\u7684\\uff0c\\u5356\\u5356\\u77f3\\u6cb9\\uff0c\\u5f00\\u53d1\\u4e00\\u70b9\\u70b9\\u9ad8\\u79d1\\u6280\\uff0c\\u5c31\\u5168\\u89e3\\u51b3\\u4e86\\u3002\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u4fca\\u6770nautilus\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;28\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;19\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 09:26:17\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;OS_TYPE=\u0026amp;SOFT_TYPE=\u0026amp;area=\\u4e0a\\u6d77\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u4fca\\u6770nautilus\u0026amp;wb_profile_img=http%3A%2F%2Ftva4.sinaimg.cn%2Fcrop.0.0.960.960.50%2F006GQa4Yjw8fcb22s2ya6j30qo0qot9d.jpg\u0026amp;followers_count=8\u0026amp;wb_user_id=6129834908\u0026amp;wb_time=1492478777\u0026amp;area=\\u4e0a\\u6d77\u0026amp;p_nick=today1874\u0026amp;p_uid=1265430957\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;18\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;6129834908\u0026quot;}], \u0026quot;58F595B8-ED7A027-16DF4AF24-8C6-8CD\u0026quot;: [{\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F51574-60EACE16-B8E57407-8C6-9B2\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F51574-60EACE16-B8E57407-8C6-9B2\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;49.87.56.99\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u6c5f\\u82cf\\u6dee\\u5b89\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F547C0-31573863-DCD0C9AA-8C6-89D\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u4f60\\u7684\\u5efa\\u8bae\\u6216\\u613f\\u671b\\u662f\\u7f8e\\u597d\\u7684\\uff0c\\u4f46\\u5728\\u73b0\\u5728\\u7684\\u4e2d\\u56fd\\u4e0d\\u5bb9\\u6613\\u5b9e\\u73b0\\u3002\\u4e00\\u5f53\\u6743\\u8005\\u6ca1\\u6709\\u9510\\u610f\\u6539\\u9769\\u7684\\u52c7\\u6c14\\uff0c\\u4e8c\\u65e2\\u5f97\\u5229\\u76ca\\u8005\\u7684\\u52bf\\u529b\\u53ca\\u963b\\u529b\\u5f88\\u5927\\u3002\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;3704670634\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;54\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;44\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 06:54:56\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u6c5f\\u82cf\\u6dee\\u5b89\u0026amp;area=\\u6c5f\\u82cf\\u6dee\\u5b89\u0026amp;p_nick=Maryland-DC\u0026amp;p_uid=3102045191\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;43\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;3704670634\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F51574-60EACE16-B8E57407-8C6-9B2\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F547C0-31573863-DCD0C9AA-8C6-89D\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;2\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;124.207.17.226\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5317\\u4eac\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F550EF-7CCF11E2-5DFCC6D5-8C6-8F1\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u5475\\u5475\\uff0c\\u4e00\\u8fb9\\u60f3\\u8981\\u514d\\u8d39\\u7684\\u4e00\\u8fb9\\u53c8\\u60f3\\u4f4e\\u7a0e\\u6536\\uff01\\u90a3\\u8bf7\\u95ee\\u94b1\\u4ece\\u54ea\\u91cc\\u6765\\uff1f\\u5317\\u6b27\\u798f\\u5229\\u662f\\u597d\\uff0c\\u4f46\\u662f\\u7a0e\\u7387\\u63a5\\u8fd150%\\uff01\\u4f60\\u53d7\\u5f97\\u4e86\\u5417\\uff1f\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;1576847061\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;50\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;481\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 07:34:07\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u5317\\u4eac\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u871a\\u8bed\\u6d41\\u8a00_74190\u0026amp;wb_profile_img=http%3A%2F%2Ftvax2.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=9\u0026amp;wb_user_id=1576847061\u0026amp;wb_time=1492472047\u0026amp;area=\\u5317\\u4eac\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;478\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;1576847061\u0026quot;}], \u0026quot;58F59210-CA2D81B7-5D7A2F91-8C6-8ED\u0026quot;: [{\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;125.107.105.210\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u6d59\\u6c5f\\u7ecd\\u5174\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F55930-7D6B69D2-52FC936B-8C6-894\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u6211\\u4e2a\\u4eba\\u89c9\\u5f97\\u4e2d\\u56fd\\u7ecf\\u6d4e\\u7684\\u6301\\u7eed\\u9ad8\\u901f\\u53d1\\u5c55\\uff0c\\u6709\\u4e00\\u4e2a\\u6781\\u5176\\u91cd\\u8981\\u7684\\u56e0\\u7d20\\u88ab\\u4e16\\u4eba\\u6240\\u9057\\u5fd8-----\\u90a3\\u5c31\\u662f\\u51e0\\u5343\\u5e74\\u519c\\u8015\\u6587\\u660e\\u6c89\\u6dc0\\u4e0b\\u6765\\u7684\\u751f\\u6d3b\\u6001\\u5ea6\\u201c\\u52e4\\u52b3\\u201d\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;1392284523\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;61\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;27\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 08:09:20\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u6d59\\u6c5f\\u7ecd\\u5174\u0026amp;wb_verified=0\u0026amp;wb_screen_name=70\\u5e74\\u4ee3\\u524d\\u671f\u0026amp;wb_profile_img=http%3A%2F%2Ftvax4.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=0\u0026amp;wb_user_id=1392284523\u0026amp;wb_time=1492474160\u0026amp;area=\\u6d59\\u6c5f\\u7ecd\\u5174\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;26\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;1392284523\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F55930-7D6B69D2-52FC936B-8C6-894\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F55930-7D6B69D2-52FC936B-8C6-894\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;49.87.56.99\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u6c5f\\u82cf\\u6dee\\u5b89\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F55FF1-31573863-DCD0C9AA-8C6-7E6\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u6bdb\\u6cfd\\u4e1c\\u65f6\\u4ee3\\u88ab\\u675f\\u5265\\u7684\\u52b3\\u52a8\\u529b\\u5728\\u9093\\u5c0f\\u5e73\\u6539\\u9769\\u5f00\\u653e\\u4e2d\\u5f97\\u5230\\u6709\\u6548\\u7684\\u91ca\\u653e\\u3002\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;3704670634\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;29\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;9\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 08:38:12\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u6c5f\\u82cf\\u6dee\\u5b89\u0026amp;area=\\u6c5f\\u82cf\\u6dee\\u5b89\u0026amp;p_nick=70\\u5e74\\u4ee3\\u524d\\u671f\u0026amp;p_uid=1392284523\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;8\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;3704670634\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F55930-7D6B69D2-52FC936B-8C6-894\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F55FF1-31573863-DCD0C9AA-8C6-7E6\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;2\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;221.0.94.217\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5c71\\u4e1c\\u70df\\u53f0\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F57CF1-DD005ED9-9F481B41-8C6-8F2\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u4f60\\u786e\\u5b9a\\u6bdb\\u6cfd\\u4e1c\\u65f6\\u4ee3\\u88ab\\u675f\\u7f1a\\uff1f\\u4f60\\u548b\\u4e0d\\u8bf4\\uff0c\\u6bdb\\u6cfd\\u4e1c\\u65f6\\u4ee3\\u79ef\\u7d2f\\u4e86\\u5f3a\\u5927\\u7684\\u4eba\\u53e3\\u7ea2\\u5229\\uff1f\\u5c31\\u50cf\\u4e00\\u4e2a\\u4e00\\u7a77\\u4e8c\\u767d\\u7684\\u5bb6\\u5ead\\uff0c\\u521a\\u5f00\\u59cb\\u548c\\u53d1\\u5c55\\u4e86\\u82e5\\u5e72\\u5e74\\u80fd\\u4e00\\u6837\\u4e48\\uff1f\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;2672302913\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;60\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;31\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 10:41:52\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u5c71\\u4e1c\\u70df\\u53f0\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u91cd\\u9547\\u4e4b\\u8a89\u0026amp;wb_profile_img=http%3A%2F%2Ftva1.sinaimg.cn%2Fcrop.0.0.180.180.50%2F9f481b41jw1e8qgp5bmzyj2050050aa8.jpg\u0026amp;followers_count=77\u0026amp;wb_user_id=2672302913\u0026amp;wb_time=1492483313\u0026amp;area=\\u5c71\\u4e1c\\u70df\\u53f0\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;30\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;2672302913\u0026quot;}], \u0026quot;58F5917A-7A9CDBC6-706633CB-8C6-7D9\u0026quot;: [{\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;client\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;111.121.41.120\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u8d35\\u5dde\\u8d35\\u9633\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F55411-6F792978-812AA718-8C6-83A\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u8fd9\\u662f\\u7f8e\\u56fd\\u4eba\\u7684\\u7cd6\\u8863\\u70ae\\u5f39\\uff0c\\u662f\\u6367\\u6740\\u3002\\u5f53\\u5e74\\u5c31\\u662f\\u8fd9\\u4e48\\u5439\\u57ae\\u5c0f\\u65e5\\u672c\\u7684\\uff0c\\u865a\\u5fc3\\u4f7f\\u4eba\\u8fdb\\u6b65\\uff0c\\u9a84\\u50b2\\u4f7f\\u4eba\\u843d\\u540e\\u3002\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u5200\\u5c16\\u6f2b\\u821e\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;42\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;1099\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 07:47:33\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;OS_TYPE=14\u0026amp;OS_LANG=zh\u0026amp;SOFT_TYPE=SinaNews_v495\u0026amp;LATITUDE=26.564052\u0026amp;LONGITUDE=106.688995\u0026amp;client_ip=111.121.41.120\u0026amp;port=21506\u0026amp;from=palmnews\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u5200\\u5c16\\u6fb7\\u821e\u0026amp;wb_profile_img=http%3A%2F%2Ftva2.sinaimg.cn%2Fcrop.0.0.768.768.50%2F812aa718jw8ex6jtxc0o5j20lc0lcjsl.jpg\u0026amp;followers_count=39\u0026amp;wb_user_id=2167056152\u0026amp;wb_time=1492472849\u0026amp;area=\\u8d35\\u5dde\\u8d35\\u9633\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;1097\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;2167056152\u0026quot;}], \u0026quot;58F591F7-72F2F8E8-A34740CF-8C6-86E\u0026quot;: [{\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F51574-60EACE16-B8E57407-8C6-9B2\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F51574-60EACE16-B8E57407-8C6-9B2\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;49.87.56.99\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u6c5f\\u82cf\\u6dee\\u5b89\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F547C0-31573863-DCD0C9AA-8C6-89D\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u4f60\\u7684\\u5efa\\u8bae\\u6216\\u613f\\u671b\\u662f\\u7f8e\\u597d\\u7684\\uff0c\\u4f46\\u5728\\u73b0\\u5728\\u7684\\u4e2d\\u56fd\\u4e0d\\u5bb9\\u6613\\u5b9e\\u73b0\\u3002\\u4e00\\u5f53\\u6743\\u8005\\u6ca1\\u6709\\u9510\\u610f\\u6539\\u9769\\u7684\\u52c7\\u6c14\\uff0c\\u4e8c\\u65e2\\u5f97\\u5229\\u76ca\\u8005\\u7684\\u52bf\\u529b\\u53ca\\u963b\\u529b\\u5f88\\u5927\\u3002\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;3704670634\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;54\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;44\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 06:54:56\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u6c5f\\u82cf\\u6dee\\u5b89\u0026amp;area=\\u6c5f\\u82cf\\u6dee\\u5b89\u0026amp;p_nick=Maryland-DC\u0026amp;p_uid=3102045191\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;43\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;3704670634\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F51574-60EACE16-B8E57407-8C6-9B2\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F547C0-31573863-DCD0C9AA-8C6-89D\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;2\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;124.207.17.226\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5317\\u4eac\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F550EF-7CCF11E2-5DFCC6D5-8C6-8F1\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u5475\\u5475\\uff0c\\u4e00\\u8fb9\\u60f3\\u8981\\u514d\\u8d39\\u7684\\u4e00\\u8fb9\\u53c8\\u60f3\\u4f4e\\u7a0e\\u6536\\uff01\\u90a3\\u8bf7\\u95ee\\u94b1\\u4ece\\u54ea\\u91cc\\u6765\\uff1f\\u5317\\u6b27\\u798f\\u5229\\u662f\\u597d\\uff0c\\u4f46\\u662f\\u7a0e\\u7387\\u63a5\\u8fd150%\\uff01\\u4f60\\u53d7\\u5f97\\u4e86\\u5417\\uff1f\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;1576847061\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;50\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;481\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 07:34:07\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u5317\\u4eac\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u871a\\u8bed\\u6d41\\u8a00_74190\u0026amp;wb_profile_img=http%3A%2F%2Ftvax2.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=9\u0026amp;wb_user_id=1576847061\u0026amp;wb_time=1492472047\u0026amp;area=\\u5317\\u4eac\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;478\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;1576847061\u0026quot;}], \u0026quot;58F59606-793A120A-16ECC0302-8C6-91B\u0026quot;: [{\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F551FD-6F01419B-544349C6-8C6-88C\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F551FD-6F01419B-544349C6-8C6-88C\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;14.215.161.210\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F5649F-ED7A1D2-14B2F31E2-8C6-948\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u4ee5\\u524d\\u6c11\\u4f17\\u4ec0\\u751f\\u6d3b\\uff0c\\u73b0\\u5728\\u4ec0\\u4e48\\u751f\\u6d3b\\uff1f\\u4e2d\\u56fd\\u73b0\\u5728\\u53ea\\u8981\\u4f60\\u80af\\u52aa\\u529b\\uff0c\\u867d\\u7136\\u4e0d\\u4e00\\u5b9a\\u6709\\u8f66\\u6709\\u623f\\uff0c\\u4f46\\u80af\\u5b9a\\u4e0d\\u6101\\u5403\\u4f4f\\u7a7f\\u3002\\u7535\\u89c6\\u3001\\u6469\\u6258\\u8f66\\u3001\\u6d17\\u8863\\u673a\\u3001\\u7535\\u8111\\u3001\\u624b\\u673a\\u3001\\u8fd9\\u4e9b\\u90fd\\u5df2\\u7ecf\\u662f\\u666e\\u901a\\u5bb6\\u5ead\\u7684\\u914d\\u5907\\u4e86\\u300220\\u5e74\\u524d\\u6709\\u51e0\\u5bb6\\u6709\\uff1f\\u4f60\\u8bf4\\u6ca1\\u6709\\u60e0\\u53ca\\u6c11\\u4f17\\u662f\\u7741\\u773c\\u8bf4\\u778e\\u8bdd\\u3002\\u867d\\u7136\\u8fd8\\u6709\\u5f88\\u591a\\u4e0d\\u8db3\\uff0c\\u4f46\\u4e2d\\u56fd\\u7684\\u751f\\u6d3b\\u6c34\\u5e73\\u7684\\u786e\\u6709\\u5f88\\u5927\\u7684\\u98de\\u8dc3\\u3002\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u68ee\\u6797\\u516c\\u4e3b\\u51c0\\u5316\\u5668499\\u5143\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;127\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;442\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 08:58:08\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;from=ucweb\u0026amp;OS_TYPE=14\u0026amp;SOFT_TYPE=Build/HUAWEIMHA-AL00) Chrome/40.0.2214.89 UCBrowser/11.4.9.941 Safari/537.36\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u68ee\\u6797\\u516c\\u4e3b\\u51c0\\u5316\\u5668499\\u5143\u0026amp;wb_profile_img=http%3A%2F%2Ftva2.sinaimg.cn%2Fcrop.0.0.1180.1180.50%2F00641SPUgw1eq5fm40xnsj30wu0wu0yi.jpg\u0026amp;followers_count=24\u0026amp;wb_user_id=5556351458\u0026amp;wb_time=1492477087\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026amp;p_nick=8866\\u5f00\\u5fc3\u0026amp;p_uid=1413695942\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;441\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;5556351458\u0026quot;}], \u0026quot;58F59540-ED7A091-1485BB312-8C6-8CA\u0026quot;: [{\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F551FD-6F01419B-544349C6-8C6-88C\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F551FD-6F01419B-544349C6-8C6-88C\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;14.215.161.210\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F5649F-ED7A1D2-14B2F31E2-8C6-948\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u4ee5\\u524d\\u6c11\\u4f17\\u4ec0\\u751f\\u6d3b\\uff0c\\u73b0\\u5728\\u4ec0\\u4e48\\u751f\\u6d3b\\uff1f\\u4e2d\\u56fd\\u73b0\\u5728\\u53ea\\u8981\\u4f60\\u80af\\u52aa\\u529b\\uff0c\\u867d\\u7136\\u4e0d\\u4e00\\u5b9a\\u6709\\u8f66\\u6709\\u623f\\uff0c\\u4f46\\u80af\\u5b9a\\u4e0d\\u6101\\u5403\\u4f4f\\u7a7f\\u3002\\u7535\\u89c6\\u3001\\u6469\\u6258\\u8f66\\u3001\\u6d17\\u8863\\u673a\\u3001\\u7535\\u8111\\u3001\\u624b\\u673a\\u3001\\u8fd9\\u4e9b\\u90fd\\u5df2\\u7ecf\\u662f\\u666e\\u901a\\u5bb6\\u5ead\\u7684\\u914d\\u5907\\u4e86\\u300220\\u5e74\\u524d\\u6709\\u51e0\\u5bb6\\u6709\\uff1f\\u4f60\\u8bf4\\u6ca1\\u6709\\u60e0\\u53ca\\u6c11\\u4f17\\u662f\\u7741\\u773c\\u8bf4\\u778e\\u8bdd\\u3002\\u867d\\u7136\\u8fd8\\u6709\\u5f88\\u591a\\u4e0d\\u8db3\\uff0c\\u4f46\\u4e2d\\u56fd\\u7684\\u751f\\u6d3b\\u6c34\\u5e73\\u7684\\u786e\\u6709\\u5f88\\u5927\\u7684\\u98de\\u8dc3\\u3002\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u68ee\\u6797\\u516c\\u4e3b\\u51c0\\u5316\\u5668499\\u5143\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;127\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;442\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 08:58:08\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;from=ucweb\u0026amp;OS_TYPE=14\u0026amp;SOFT_TYPE=Build/HUAWEIMHA-AL00) Chrome/40.0.2214.89 UCBrowser/11.4.9.941 Safari/537.36\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u68ee\\u6797\\u516c\\u4e3b\\u51c0\\u5316\\u5668499\\u5143\u0026amp;wb_profile_img=http%3A%2F%2Ftva2.sinaimg.cn%2Fcrop.0.0.1180.1180.50%2F00641SPUgw1eq5fm40xnsj30wu0wu0yi.jpg\u0026amp;followers_count=24\u0026amp;wb_user_id=5556351458\u0026amp;wb_time=1492477087\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026amp;p_nick=8866\\u5f00\\u5fc3\u0026amp;p_uid=1413695942\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;441\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;5556351458\u0026quot;}], \u0026quot;58F59113-CA2D81B7-5D7A2F91-8C6-95F\u0026quot;: [{\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;117.141.117.161\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5e7f\\u897f\\u5357\\u5b81\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F585C8-758D75A1-1487E0A75-8C6-898\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u4e2d\\u56fd\\u521b\\u4e1a\\u521b\\u65b0\\u6d3b\\u529b\\u65e5\\u76ca\\u589e\\u5f3a\\uff0c\\u793e\\u4f1a\\u7ecf\\u6d4e\\u53d1\\u5c55\\u81ea\\u7136\\u5947\\u8ff9\\u95ea\\u70c1\\uff0c\\u6211\\u4eec\\u76f8\\u4fe1\\u65b0\\u7684\\u4e00\\u5e74\\u91cc\\uff0c\\u5728\\u201c\\u521b\\u65b0\\u3001\\u534f\\u8c03\\u3001\\u7eff\\u8272\\u3001\\u5f00\\u653e\\u3001\\u5171\\u4eab\\u201d\\u4e94\\u5927\\u53d1\\u5c55\\u65b0\\u7406\\u5ff5\\u5f15\\u9886\\u4e0b\\u7684\\u4e2d\\u56fd\\uff0c\\u4f1a\\u53d8\\u5f97\\u66f4\\u597d\\u3002\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;5511187061\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;73\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;23\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 11:19:36\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u5e7f\\u897f\\u5357\\u5b81\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u82b1\\u7530\\u519c\\u592b_54159\u0026amp;wb_profile_img=http%3A%2F%2Ftvax2.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=3\u0026amp;wb_user_id=5511187061\u0026amp;wb_time=1492485576\u0026amp;area=\\u5e7f\\u897f\\u5357\\u5b81\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;22\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;5511187061\u0026quot;}], \u0026quot;58F591AE-CA2D81B7-5D7A2F91-8C6-A08\u0026quot;: [{\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;123.125.193.138\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5317\\u4eac\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F55875-7B7DC18A-160C230EF-8C6-8C8\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u4e2d\\u56fd\\u7684gdp\\u90fd\\u662f\\u623f\\u4ef7\\u63a8\\u4e0a\\u53bb\\u7684\\uff0c\\u5176\\u4ed6\\u4ea7\\u4e1a\\u88ab\\u589e\\u957f\\u4e86\\uff01\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u9060\\u65b9\\u4e0d\\u8fdcKM\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;24\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;10\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 08:06:13\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;from=ucweb\u0026amp;OS_TYPE=14\u0026amp;SOFT_TYPE=Build/MMB29T) Chrome/40.0.2214.89 UCBrowser/11.3.8.909 Safari/537.36\u0026amp;area=\\u5317\\u4eac\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u9060\\u65b9\\u4e0d\\u8fdcKM\u0026amp;wb_profile_img=http%3A%2F%2Ftvax1.sinaimg.cn%2Fcrop.0.0.1328.1328.50%2F006swBT9ly8fdq6a6qejhj310w10w0wi.jpg\u0026amp;followers_count=16\u0026amp;wb_user_id=5918306543\u0026amp;wb_time=1492473973\u0026amp;area=\\u5317\\u4eac\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;10\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;5918306543\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F55875-7B7DC18A-160C230EF-8C6-8C8\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F55875-7B7DC18A-160C230EF-8C6-8C8\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;221.0.94.217\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5c71\\u4e1c\\u70df\\u53f0\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F57D61-DD005ED9-9F481B41-8C6-8ED\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u54c7\\uff0c\\u8fd9\\u4e48\\u597d\\u7528\\uff0c\\u4e3a\\u4ec0\\u4e48\\u5c31\\u4e2d\\u56fd\\u7528\\u5462\\u3002\\u3002\\u771f\\u5947\\u4e86\\u602a\\u3002\\u3002\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;2672302913\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;23\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;19\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 10:43:45\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u5c71\\u4e1c\\u70df\\u53f0\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u91cd\\u9547\\u4e4b\\u8a89\u0026amp;wb_profile_img=http%3A%2F%2Ftva1.sinaimg.cn%2Fcrop.0.0.180.180.50%2F9f481b41jw1e8qgp5bmzyj2050050aa8.jpg\u0026amp;followers_count=77\u0026amp;wb_user_id=2672302913\u0026amp;wb_time=1492483425\u0026amp;area=\\u5c71\\u4e1c\\u70df\\u53f0\u0026amp;p_nick=\\u9060\\u65b9\\u4e0d\\u8fdcKM\u0026amp;p_uid=5918306543\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;18\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;2672302913\u0026quot;}], \u0026quot;58F59278-3B216B15-451467A8-8C6-881\u0026quot;: [{\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F551FD-6F01419B-544349C6-8C6-88C\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F551FD-6F01419B-544349C6-8C6-88C\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;14.215.161.210\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F5649F-ED7A1D2-14B2F31E2-8C6-948\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u4ee5\\u524d\\u6c11\\u4f17\\u4ec0\\u751f\\u6d3b\\uff0c\\u73b0\\u5728\\u4ec0\\u4e48\\u751f\\u6d3b\\uff1f\\u4e2d\\u56fd\\u73b0\\u5728\\u53ea\\u8981\\u4f60\\u80af\\u52aa\\u529b\\uff0c\\u867d\\u7136\\u4e0d\\u4e00\\u5b9a\\u6709\\u8f66\\u6709\\u623f\\uff0c\\u4f46\\u80af\\u5b9a\\u4e0d\\u6101\\u5403\\u4f4f\\u7a7f\\u3002\\u7535\\u89c6\\u3001\\u6469\\u6258\\u8f66\\u3001\\u6d17\\u8863\\u673a\\u3001\\u7535\\u8111\\u3001\\u624b\\u673a\\u3001\\u8fd9\\u4e9b\\u90fd\\u5df2\\u7ecf\\u662f\\u666e\\u901a\\u5bb6\\u5ead\\u7684\\u914d\\u5907\\u4e86\\u300220\\u5e74\\u524d\\u6709\\u51e0\\u5bb6\\u6709\\uff1f\\u4f60\\u8bf4\\u6ca1\\u6709\\u60e0\\u53ca\\u6c11\\u4f17\\u662f\\u7741\\u773c\\u8bf4\\u778e\\u8bdd\\u3002\\u867d\\u7136\\u8fd8\\u6709\\u5f88\\u591a\\u4e0d\\u8db3\\uff0c\\u4f46\\u4e2d\\u56fd\\u7684\\u751f\\u6d3b\\u6c34\\u5e73\\u7684\\u786e\\u6709\\u5f88\\u5927\\u7684\\u98de\\u8dc3\\u3002\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u68ee\\u6797\\u516c\\u4e3b\\u51c0\\u5316\\u5668499\\u5143\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;127\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;442\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 08:58:08\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;from=ucweb\u0026amp;OS_TYPE=14\u0026amp;SOFT_TYPE=Build/HUAWEIMHA-AL00) Chrome/40.0.2214.89 UCBrowser/11.4.9.941 Safari/537.36\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u68ee\\u6797\\u516c\\u4e3b\\u51c0\\u5316\\u5668499\\u5143\u0026amp;wb_profile_img=http%3A%2F%2Ftva2.sinaimg.cn%2Fcrop.0.0.1180.1180.50%2F00641SPUgw1eq5fm40xnsj30wu0wu0yi.jpg\u0026amp;followers_count=24\u0026amp;wb_user_id=5556351458\u0026amp;wb_time=1492477087\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026amp;p_nick=8866\\u5f00\\u5fc3\u0026amp;p_uid=1413695942\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;441\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;5556351458\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F551FD-6F01419B-544349C6-8C6-88C\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F5649F-ED7A1D2-14B2F31E2-8C6-948\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;2\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;117.136.97.39\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5e7f\\u897f\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F58496-75886127-14302C124-8C6-843\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;20\\u5e74\\u524d\\uff1f\\u4f60\\u600e\\u4e48\\u4e0d\\u8bf4500\\u5e74\\u524d\\uff1f\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u7528\\u62375419221284\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;16\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;34\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 11:14:31\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;OS_TYPE=14\u0026amp;SOFT_TYPE=Build/LMY47D) Chrome/35.0.1916.138 Safari/537.36 T7/7.4 baiduboxapp/8.4\u0026amp;area=\\u5e7f\\u897f\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u7528\\u62375419221284\u0026amp;wb_profile_img=http%3A%2F%2Ftvax1.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=3\u0026amp;wb_user_id=5419221284\u0026amp;wb_time=1492485270\u0026amp;area=\\u5e7f\\u897f\u0026amp;p_nick=\\u68ee\\u6797\\u516c\\u4e3b\\u51c0\\u5316\\u5668499\\u5143\u0026amp;p_uid=5556351458\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;33\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;5419221284\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F551FD-6F01419B-544349C6-8C6-88C\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F58496-75886127-14302C124-8C6-843\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;3\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;14.152.68.195\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F58D06-E9844C3-9A001259-8C6-88F\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u56e0\\u4e3a\\u4e2d\\u56fd\\u8fd1\\u4e09\\u5341\\u5e74\\u624d\\u7b97\\u6539\\u9769\\u53d1\\u5c55\\uff0c\\u4e09\\u5341\\u5e74\\u7684\\u53d1\\u5c55\\u8ffd\\u8d76\\u4e0a\\u4e86\\u5f88\\u591a\\u56fd\\u5bb6\\u4e00\\u4e2a\\u4e16\\u7eaa\\u7684\\u811a\\u6b65\\u3002\\u5982\\u679c\\u4f60\\u8981\\u786c\\u626f500\\u5e74\\uff0c\\u6211\\u53ea\\u80fd\\u4ee5\\u5173\\u7231\\u667a\\u969c\\u7684\\u773c\\u795e\\u770b\\u7740\\u4f60\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;waitinlee\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;62\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;50\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 11:50:29\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;from=ucweb\u0026amp;OS_TYPE=14\u0026amp;SOFT_TYPE=Build/HUAWEIFRD-AL00) Chrome/40.0.2214.89 UCBrowser/11.4.2.936 Safari/537.36\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026amp;wb_verified=0\u0026amp;wb_screen_name=waitinlee\u0026amp;wb_profile_img=http%3A%2F%2Ftva4.sinaimg.cn%2Fcrop.0.0.640.640.50%2F9a001259jw8eqi6mc128tj20hs0hs76c.jpg\u0026amp;followers_count=98\u0026amp;wb_user_id=2583695961\u0026amp;wb_time=1492487430\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026amp;p_nick=\\u7528\\u62375419221284\u0026amp;p_uid=5419221284\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;49\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;2583695961\u0026quot;}], \u0026quot;58F593EF-DB85280E-454C19D3-8C6-98B\u0026quot;: [{\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F551FD-6F01419B-544349C6-8C6-88C\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F551FD-6F01419B-544349C6-8C6-88C\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;14.215.161.210\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F5649F-ED7A1D2-14B2F31E2-8C6-948\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u4ee5\\u524d\\u6c11\\u4f17\\u4ec0\\u751f\\u6d3b\\uff0c\\u73b0\\u5728\\u4ec0\\u4e48\\u751f\\u6d3b\\uff1f\\u4e2d\\u56fd\\u73b0\\u5728\\u53ea\\u8981\\u4f60\\u80af\\u52aa\\u529b\\uff0c\\u867d\\u7136\\u4e0d\\u4e00\\u5b9a\\u6709\\u8f66\\u6709\\u623f\\uff0c\\u4f46\\u80af\\u5b9a\\u4e0d\\u6101\\u5403\\u4f4f\\u7a7f\\u3002\\u7535\\u89c6\\u3001\\u6469\\u6258\\u8f66\\u3001\\u6d17\\u8863\\u673a\\u3001\\u7535\\u8111\\u3001\\u624b\\u673a\\u3001\\u8fd9\\u4e9b\\u90fd\\u5df2\\u7ecf\\u662f\\u666e\\u901a\\u5bb6\\u5ead\\u7684\\u914d\\u5907\\u4e86\\u300220\\u5e74\\u524d\\u6709\\u51e0\\u5bb6\\u6709\\uff1f\\u4f60\\u8bf4\\u6ca1\\u6709\\u60e0\\u53ca\\u6c11\\u4f17\\u662f\\u7741\\u773c\\u8bf4\\u778e\\u8bdd\\u3002\\u867d\\u7136\\u8fd8\\u6709\\u5f88\\u591a\\u4e0d\\u8db3\\uff0c\\u4f46\\u4e2d\\u56fd\\u7684\\u751f\\u6d3b\\u6c34\\u5e73\\u7684\\u786e\\u6709\\u5f88\\u5927\\u7684\\u98de\\u8dc3\\u3002\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u68ee\\u6797\\u516c\\u4e3b\\u51c0\\u5316\\u5668499\\u5143\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;127\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;442\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 08:58:08\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;from=ucweb\u0026amp;OS_TYPE=14\u0026amp;SOFT_TYPE=Build/HUAWEIMHA-AL00) Chrome/40.0.2214.89 UCBrowser/11.4.9.941 Safari/537.36\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u68ee\\u6797\\u516c\\u4e3b\\u51c0\\u5316\\u5668499\\u5143\u0026amp;wb_profile_img=http%3A%2F%2Ftva2.sinaimg.cn%2Fcrop.0.0.1180.1180.50%2F00641SPUgw1eq5fm40xnsj30wu0wu0yi.jpg\u0026amp;followers_count=24\u0026amp;wb_user_id=5556351458\u0026amp;wb_time=1492477087\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026amp;p_nick=8866\\u5f00\\u5fc3\u0026amp;p_uid=1413695942\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;441\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;5556351458\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F551FD-6F01419B-544349C6-8C6-88C\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F5649F-ED7A1D2-14B2F31E2-8C6-948\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;2\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;117.136.97.39\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5e7f\\u897f\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F58496-75886127-14302C124-8C6-843\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;20\\u5e74\\u524d\\uff1f\\u4f60\\u600e\\u4e48\\u4e0d\\u8bf4500\\u5e74\\u524d\\uff1f\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u7528\\u62375419221284\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;16\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;34\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 11:14:31\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;OS_TYPE=14\u0026amp;SOFT_TYPE=Build/LMY47D) Chrome/35.0.1916.138 Safari/537.36 T7/7.4 baiduboxapp/8.4\u0026amp;area=\\u5e7f\\u897f\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u7528\\u62375419221284\u0026amp;wb_profile_img=http%3A%2F%2Ftvax1.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=3\u0026amp;wb_user_id=5419221284\u0026amp;wb_time=1492485270\u0026amp;area=\\u5e7f\\u897f\u0026amp;p_nick=\\u68ee\\u6797\\u516c\\u4e3b\\u51c0\\u5316\\u5668499\\u5143\u0026amp;p_uid=5556351458\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;33\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;5419221284\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F551FD-6F01419B-544349C6-8C6-88C\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F58496-75886127-14302C124-8C6-843\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;3\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;14.152.68.195\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F58D06-E9844C3-9A001259-8C6-88F\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u56e0\\u4e3a\\u4e2d\\u56fd\\u8fd1\\u4e09\\u5341\\u5e74\\u624d\\u7b97\\u6539\\u9769\\u53d1\\u5c55\\uff0c\\u4e09\\u5341\\u5e74\\u7684\\u53d1\\u5c55\\u8ffd\\u8d76\\u4e0a\\u4e86\\u5f88\\u591a\\u56fd\\u5bb6\\u4e00\\u4e2a\\u4e16\\u7eaa\\u7684\\u811a\\u6b65\\u3002\\u5982\\u679c\\u4f60\\u8981\\u786c\\u626f500\\u5e74\\uff0c\\u6211\\u53ea\\u80fd\\u4ee5\\u5173\\u7231\\u667a\\u969c\\u7684\\u773c\\u795e\\u770b\\u7740\\u4f60\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;waitinlee\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;62\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;50\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 11:50:29\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;from=ucweb\u0026amp;OS_TYPE=14\u0026amp;SOFT_TYPE=Build/HUAWEIFRD-AL00) Chrome/40.0.2214.89 UCBrowser/11.4.2.936 Safari/537.36\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026amp;wb_verified=0\u0026amp;wb_screen_name=waitinlee\u0026amp;wb_profile_img=http%3A%2F%2Ftva4.sinaimg.cn%2Fcrop.0.0.640.640.50%2F9a001259jw8eqi6mc128tj20hs0hs76c.jpg\u0026amp;followers_count=98\u0026amp;wb_user_id=2583695961\u0026amp;wb_time=1492487430\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026amp;p_nick=\\u7528\\u62375419221284\u0026amp;p_uid=5419221284\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;49\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;2583695961\u0026quot;}]}, \u0026quot;language\u0026quot;: \u0026quot;ch\u0026quot;, \u0026quot;encoding\u0026quot;: \u0026quot;utf-8\u0026quot;, \u0026quot;top\u0026quot;: [], \u0026quot;cmntlist\u0026quot;: [{\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F551FD-6F01419B-544349C6-8C6-88C\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F5649F-ED7A1D2-14B2F31E2-8C6-948\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;2\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;121.58.18.10\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u6d77\\u5357\\u6d77\\u53e3\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F59606-793A120A-16ECC0302-8C6-91B\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u662f\\u7684\\uff01\\u6c11\\u4f17\\u751f\\u6d3b\\u6c34\\u5e73\\u5927\\u6b65\\u63d0\\u9ad8\\u662f\\u4e8b\\u5b9e\\uff01\\u867d\\u7136\\u8fd8\\u6709\\u4e0d\\u8db3\\uff01\\u4f46\\u8981\\u77e5\\u9053\\u4e2d\\u56fd\\u8fd9\\u4e48\\u5927\\uff0c\\u6709\\u95ee\\u9898\\u662f\\u6b63\\u5e38\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u7528\\u62376153831170\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;40\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;13\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 12:28:55\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;OS_TYPE=14\u0026amp;SOFT_TYPE=Build/CHM-CL00) Safari/537.36\u0026amp;area=\\u6d77\\u5357\\u6d77\\u53e3\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u7528\\u62376153831170\u0026amp;wb_profile_img=http%3A%2F%2Ftvax3.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=1\u0026amp;wb_user_id=6153831170\u0026amp;wb_time=1492489734\u0026amp;area=\\u6d77\\u5357\\u6d77\\u53e3\u0026amp;p_nick=\\u68ee\\u6797\\u516c\\u4e3b\\u51c0\\u5316\\u5668499\\u5143\u0026amp;p_uid=5556351458\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;12\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;6153831170\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F51574-60EACE16-B8E57407-8C6-9B2\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F550EF-7CCF11E2-5DFCC6D5-8C6-8F1\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;3\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;14.215.160.39\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F595B8-ED7A027-16DF4AF24-8C6-8CD\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u5317\\u6b27\\u4e0d\\u6b6250%\\u5427\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u7528\\u62376139719460\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;8\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;2\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 12:27:37\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;from=ucweb\u0026amp;OS_TYPE=14\u0026amp;SOFT_TYPE=Build/HUAWEIKNT-AL10) Chrome/40.0.2214.89 UCBrowser/11.4.9.941 Safari/537.36\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u7528\\u62376139719460\u0026amp;wb_profile_img=http%3A%2F%2Ftvax1.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=6\u0026amp;wb_user_id=6139719460\u0026amp;wb_time=1492489656\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026amp;p_nick=\\u871a\\u8bed\\u6d41\\u8a00_74190\u0026amp;p_uid=1576847061\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;6139719460\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F551FD-6F01419B-544349C6-8C6-88C\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F5649F-ED7A1D2-14B2F31E2-8C6-948\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;2\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;14.215.160.145\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F59540-ED7A091-1485BB312-8C6-8CA\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u95ed\\u5173\\u9501\\u56fd\\u53ea\\u4f1a\\u843d\\u540e \\u73b0\\u5728\\u79fb\\u52a8\\u652f\\u4ed8 \\u5feb\\u9012 \\u5916\\u5356\\u53d1\\u5c55\\u592a\\u5feb\\u4e86\\u3002\\u592a\\u65b9\\u4fbf\\u7684\\u3002\\u4e0d\\u8fc7\\u4e0d\\u8981\\u5fd8\\u4e86\\u6211\\u4eec\\u7684\\u98df\\u54c1\\u5b89\\u5168 \\u7a7a\\u6c14\\u8d28\\u91cf \\u4ea4\\u901a\\u72b6\\u51b5\\u7b49\\u7b49 \\u505a\\u7684\\u8fd8\\u8fdc\\u8fdc\\u4e0d\\u591f\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u4e00\\u676f\\u624e\\u5564\\u7684\\u91cf\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;65\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;12\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 12:25:36\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;from=ucweb\u0026amp;OS_TYPE=13\u0026amp;SOFT_TYPE=UCBrowser/11.5.1.957 AliApp(TUnionSDK/0.1.15)\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u4e00\\u676f\\u624e\\u5564\\u7684\\u91cf\u0026amp;wb_profile_img=http%3A%2F%2Ftvax3.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=10\u0026amp;wb_user_id=5508936466\u0026amp;wb_time=1492489536\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026amp;p_nick=\\u68ee\\u6797\\u516c\\u4e3b\\u51c0\\u5316\\u5668499\\u5143\u0026amp;p_uid=5556351458\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;11\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;5508936466\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;117.12.74.210\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5929\\u6d25\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F594AE-750C4AD2-7F9E30AF-8C6-9DA\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u4e2d\\u56fd\\u8fd8\\u662f\\u8981\\u6212\\u9a84\\u6212\\u8e81\\uff0c\\u8e0f\\u5b9e\\u53d1\\u5c55\\u81ea\\u5df1\\uff0c\\u505a\\u597d\\u6211\\u4eec\\u81ea\\u5df1\\u7684\\u4e8b\\u4e1a\\u3002\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;2141073583\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;27\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;9\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 12:23:10\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u5929\\u6d25\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u5a01\\u4e0d\\u9732\u0026amp;wb_profile_img=http%3A%2F%2Ftvax4.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=34\u0026amp;wb_user_id=2141073583\u0026amp;wb_time=1492489390\u0026amp;area=\\u5929\\u6d25\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;9\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;2141073583\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F51574-60EACE16-B8E57407-8C6-9B2\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F56B38-B4ADE14E-16D5DDB9C-8C6-8AC\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;5\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;202.45.129.183\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u65e5\\u672c\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F59478-CA2D81B7-5D7A2F91-8C6-8A2\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u5317\\u6b27\\u5356\\u6cb9\\uff1f\\u5927\\u4e0a\\u6d77\\u4eba\\u771f\\u6709\\u89c1\\u8bc6\\uff01\\u8fd8\\u6709\\u8bf4\\u5f97\\u9ad8\\u79d1\\u6280\\u597d\\u50cf\\u5f88\\u7b80\\u5355\\u4e00\\u6837\\uff0c\\u5927\\u4e0a\\u6d77\\u51fa\\u4eba\\u624d[\\u5077\\u7b11][\\u54c8\\u54c8]\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;1568288657\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;43\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;8\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 12:22:15\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u65e5\\u672c\u0026amp;area=\\u65e5\\u672c\u0026amp;p_nick=\\u4fca\\u6770nautilus\u0026amp;p_uid=6129834908\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;7\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;1568288657\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;36.187.228.208\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u65b0\\u7586\\u54c8\\u5bc6\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F59445-24BBE4D0-451438C1-8C6-92C\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u52a0\\u6cb9\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;1158953153\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;2\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 12:21:24\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u65b0\\u7586\\u54c8\\u5bc6\u0026amp;wb_verified=0\u0026amp;wb_screen_name=xhs421120\u0026amp;wb_profile_img=http%3A%2F%2Ftva2.sinaimg.cn%2Fcrop.0.0.180.180.50%2F451438c1jw1e8qgp5bmzyj2050050aa8.jpg\u0026amp;followers_count=30\u0026amp;wb_user_id=1158953153\u0026amp;wb_time=1492489285\u0026amp;area=\\u65b0\\u7586\\u54c8\\u5bc6\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;1158953153\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;10.71.2.95\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5317\\u4eac\\u6d77\\u6dc0\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F5941F-A47025F-3C11E60C-8C6-8D0\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u8fc7\\u53bb\\u5341\\u4e8c\\u5e74\\uff0c\\u4e2d\\u56fd\\u84dd\\u9886\\u6536\\u5165\\u6fc0\\u589e8\\u500d\\u2026\\u2026\\u8fd9\\u4e2a\\u6570\\u636e\\u5e76\\u4e0d\\u5ba2\\u89c2\\u2026\\u2026\\u62112005\\u5e74\\u51fa\\u6765\\u505a\\u5de5\\uff0c\\u5c0f\\u5382\\u7684\\u666e\\u5de5\\u5de5\\u8d44\\u4e00\\u5343\\u4e94\\u5de6\\u53f3\\uff0c\\u5230\\u4e86\\u4eca\\u5e74\\uff0c\\u6211\\u5728\\u4e00\\u4e2a\\u653f\\u5e9c\\u6ce8\\u8d44\\u7684\\u6db2\\u6676\\u9762\\u677f\\u4f01\\u4e1a\\u505a\\u4e2d\\u7ea7\\u6280\\u672f\\u5458\\uff0c\\u5de5\\u8d44\\u516d\\u5343\\u5230\\u4e03\\u5343\\uff0c\\u4e0d\\u8bba\\u8fd9\\u4e2d\\u95f4\\u6211\\u81ea\\u5df1\\u7684\\u8fdb\\u6b65\\uff0c\\u7ea7\\u522b\\u7684\\u63d0\\u9ad8\\uff0c\\u5355\\u8bba\\u5de5\\u8d44\\uff0c\\u4e5f\\u5c31\\u7ffb\\u4e86\\u56db\\u500d\\u591a\\u4e00\\u70b9\\uff0c\\uff08\\u5982\\u679c\\u505a\\u666e\\u5de5\\uff0c\\u6216\\u8005\\u552e\\u8d27\\u5458\\uff0c\\u670d\\u52a1\\u5458\\u4e4b\\u7c7b\\uff0c\\u5de5\\u8d44\\u4e09\\u56db\\u5343\\u7684\\u5927\\u6709\\u4eba\\u5728\\uff09\\uff0c\\u5355\\u8bba\\u8d2d\\u4e70\\u529b\\uff0c\\u6211\\u89c9\\u5f97\\u6211\\u73b0\\u5728\\u7684\\u516d\\u4e03\\u5343\\u8ddf\\u90a3\\u65f6\\u5019\\u7684\\u4e00\\u5343\\u591a\\u6bd4\\u8f83\\uff0c\\u6ca1\\u6709\\u591a\\u5927\\u5dee\\u522b\\uff0c\\u90a3\\u65f6\\u5019\\u8857\\u5934\\u5403\\u4e00\\u4e2a\\u7092\\u996d2.5\\u5143\\uff0c\\u73b0\\u5728\\u516b\\u5143\\u8d77\\uff0c\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u98ce\\u4e2d\\u52b2\\u8349198702\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;206\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;12\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 12:20:47\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;from=ucweb\u0026amp;OS_TYPE=14\u0026amp;SOFT_TYPE=Build/LRX21M) Chrome/40.0.2214.89 UCBrowser/11.4.9.941 Safari/537.36\u0026amp;area=\\u5317\\u4eac\\u6d77\\u6dc0\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u98ce\\u4e2d\\u52b2\\u8349198702\u0026amp;wb_profile_img=http%3A%2F%2Ftva2.sinaimg.cn%2Fcrop.0.0.996.996.50%2F3c11e60cjw8f3c9sj2rivj20ro0rpq59.jpg\u0026amp;followers_count=1\u0026amp;wb_user_id=1007805964\u0026amp;wb_time=1492489247\u0026amp;area=\\u5317\\u4eac\\u6d77\\u6dc0\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;11\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;1007805964\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F56F0A-DB85280E-EA280EB0-8C6-8D5\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F56F0A-DB85280E-EA280EB0-8C6-8D5\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;202.45.129.183\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u65e5\\u672c\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F5941B-CA2D81B7-5D7A2F91-8C6-8ED\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u4e0a\\u6c7d\\u901a\\u7528\\u4e94\\u83f1\\u5417\\uff1f[\\u5077\\u7b11][\\u54c8\\u54c8]\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;1568288657\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;16\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;3\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 12:20:42\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u65e5\\u672c\u0026amp;area=\\u65e5\\u672c\u0026amp;p_nick=\\u7528\\u6237fkh05x1o56\u0026amp;p_uid=3928493744\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;2\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;1568288657\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;palmnews\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;183.37.211.59\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5e7f\\u4e1c\\u6df1\\u5733\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F593FA-B725D33B-1643E5602-8C6-911\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u6367\\u6740\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u7231\\u5728\\u53bb\\u5e74\\u6628\\u5929\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;2\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;3\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 12:20:10\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;OS_TYPE=\u0026amp;SOFT_TYPE=\u0026amp;area=\\u5e7f\\u4e1c\\u6df1\\u5733\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u7231\\u5728\\u53bb\\u5e74\\u6628\\u5929\u0026amp;wb_profile_img=http%3A%2F%2Ftvax3.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=46\u0026amp;wb_user_id=5976774146\u0026amp;wb_time=1492489210\u0026amp;area=\\u5e7f\\u4e1c\\u6df1\\u5733\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;3\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;5976774146\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F551FD-6F01419B-544349C6-8C6-88C\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F58D06-E9844C3-9A001259-8C6-88F\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;4\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;219.133.40.14\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5317\\u4eac\\u6d77\\u6dc0\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F593EF-DB85280E-454C19D3-8C6-98B\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u8bf4\\u7684\\u597d\\uff01\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;yanghua5725\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;4\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;4\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 12:20:01\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;from=qqweb\u0026amp;OS_TYPE=14\u0026amp;SOFT_TYPE=Build/LMY47I) Chrome/37.0.0.0 MQQBrowser/7.4 Safari/537.36\u0026amp;area=\\u5317\\u4eac\\u6d77\\u6dc0\u0026amp;wb_verified=0\u0026amp;wb_screen_name=yanghua5725\u0026amp;wb_profile_img=http%3A%2F%2Ftvax4.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=16\u0026amp;wb_user_id=1162615251\u0026amp;wb_time=1492489201\u0026amp;area=\\u5317\\u4eac\\u6d77\\u6dc0\u0026amp;p_nick=waitinlee\u0026amp;p_uid=2583695961\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;3\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;1162615251\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;14.152.68.162\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F593CC-E9844A2-6F2D2985-8C6-827\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u5915\\u9633\\u65e0\\u9650\\u597d\\uff0c\\u53ea\\u662f\\u8fd1\\u9ec4\\u660f\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u5112\\u5efa\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;11\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 12:19:23\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;from=ucweb\u0026amp;OS_TYPE=14\u0026amp;SOFT_TYPE=Build/MRA58K) Chrome/40.0.2214.89 UCBrowser/11.4.2.936 Safari/537.36\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u5112\\u5efa\u0026amp;wb_profile_img=http%3A%2F%2Ftvax2.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=22\u0026amp;wb_user_id=1865230725\u0026amp;wb_time=1492489164\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;1865230725\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;palmnews\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;222.223.56.115\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u6cb3\\u5317\\u6ca7\\u5dde\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F5927D-DEDF3873-163BE44DA-8C6-92A\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u793e\\u4f1a\\u4fdd\\u969c\\u6ca1\\u6709\\u672c\\u8d28\\u63d0\\u5347 \\u9664\\u4e86\\u5c11\\u6570\\u51e0\\u4e2a\\u5927\\u57ce\\u5e02\\u5176\\u4ed6\\u4eba\\u90fd\\u662f\\u4e8c\\u7b49\\u516c\\u6c11\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;Amrice199606\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;29\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;9\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 12:13:49\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;OS_TYPE=\u0026amp;SOFT_TYPE=\u0026amp;area=\\u6cb3\\u5317\\u6ca7\\u5dde\u0026amp;wb_verified=0\u0026amp;wb_screen_name=Amrice199606\u0026amp;wb_profile_img=http%3A%2F%2Ftva4.sinaimg.cn%2Fcrop.0.12.640.640.50%2F006vUIA2jw8f95gxe90ykj30hs0igt9m.jpg\u0026amp;followers_count=9\u0026amp;wb_user_id=5968381146\u0026amp;wb_time=1492488829\u0026amp;area=\\u6cb3\\u5317\\u6ca7\\u5dde\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;9\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;5968381146\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F551FD-6F01419B-544349C6-8C6-88C\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F58D06-E9844C3-9A001259-8C6-88F\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;4\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;59.33.107.21\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5e7f\\u4e1c\\u4e2d\\u5c71\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F59278-3B216B15-451467A8-8C6-881\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u4e8c\\u697c\\u8fd9\\u62ac\\u6760\\u592a\\u641e\\u7b11\\u4e86\\uff0c\\u8981\\u77e5\\u9053\\u5f88\\u591a\\u56fd\\u5bb6\\u7684\\u751f\\u6d3b\\u6c34\\u5e73\\u8fd8\\u5982\\u4ed6\\u4eec20\\u5e74\\u524d\\u7684\\u6c34\\u5e73\\u5462\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;1158965160\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;34\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;8\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 12:13:44\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u5e7f\\u4e1c\\u4e2d\\u5c71\u0026amp;wb_verified=0\u0026amp;wb_screen_name=tanxu08\u0026amp;wb_profile_img=http%3A%2F%2Ftvax1.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=1\u0026amp;wb_user_id=1158965160\u0026amp;wb_time=1492488824\u0026amp;area=\\u5e7f\\u4e1c\\u4e2d\\u5c71\u0026amp;p_nick=waitinlee\u0026amp;p_uid=2583695961\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;7\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;1158965160\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;121.207.75.51\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u798f\\u5efa\\u6cc9\\u5dde\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F59246-79CF4B33-C2C552ED-8C6-8C2\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u5f52\\u529f\\u4e8e\\u4f1f\\u5927\\u7684\\uff0c\\u52e4\\u52b3\\u7684\\uff0c\\u667a\\u6167\\u7684\\uff0c\\u4f20\\u7edf\\u7684\\u4e2d\\u56fd\\u4eba\\u6c11\\u3002\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u5bd2\\u6c5f\\u5782\\u9493\\u56fe\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;23\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;5\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 12:12:55\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;OS_TYPE=14\u0026amp;SOFT_TYPE=Build/MMB29M) Chrome/53.0.2785.146 Safari/537.36 XiaoMi/MiuiBrowser/8.7.5\u0026amp;area=\\u798f\\u5efa\\u6cc9\\u5dde\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u5bd2\\u6c5f\\u5782\\u9493\\u56fe\u0026amp;wb_profile_img=http%3A%2F%2Ftva2.sinaimg.cn%2Fcrop.78.7.235.235.50%2Fc2c552edgw1fb0xb8wi9bj20aw070js4.jpg\u0026amp;followers_count=3\u0026amp;wb_user_id=3267711725\u0026amp;wb_time=1492488774\u0026amp;area=\\u798f\\u5efa\\u6cc9\\u5dde\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;5\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;3267711725\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F55930-7D6B69D2-52FC936B-8C6-894\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F57CF1-DD005ED9-9F481B41-8C6-8F2\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;3\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;202.45.129.183\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u65e5\\u672c\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F59210-CA2D81B7-5D7A2F91-8C6-8ED\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u4e00\\u770b\\u5c31\\u662fM\\u5de6\\uff0c\\u751f\\u591a\\u4e86\\u90fd\\u517b\\u4e0d\\u8d77\\uff0c\\u8fd8\\u4eba\\u53e3\\u7ea2\\u5229\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;1568288657\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;20\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;3\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 12:11:59\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u65e5\\u672c\u0026amp;area=\\u65e5\\u672c\u0026amp;p_nick=\\u91cd\\u9547\\u4e4b\\u8a89\u0026amp;p_uid=2672302913\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;2\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;1568288657\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;palmnews\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F51574-60EACE16-B8E57407-8C6-9B2\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F550EF-7CCF11E2-5DFCC6D5-8C6-8F1\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;3\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;114.242.248.232\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5317\\u4eac\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F591F7-72F2F8E8-A34740CF-8C6-86E\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u65e0\\u77e5\\u548c\\u611a\\u6627\\u7684 loser\\u624d\\u4f1a\\u544a\\u8bc9\\u7f51\\u6c11\\u201c\\u5916\\u56fd\\u7684\\u6708\\u4eae\\u6bd4\\u56fd\\u5185\\u7684\\u5706\\u201d\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u72fc\\u4eba\\u6740\\u5e38\\u5e74\\u83b7\\u80dc\\u8005\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;30\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 12:11:35\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;OS_TYPE=\u0026amp;SOFT_TYPE=\u0026amp;area=\\u5317\\u4eac\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u72fc\\u4eba\\u6740\\u5e38\\u5e74\\u83b7\\u80dc\\u8005\u0026amp;wb_profile_img=http%3A%2F%2Ftvax3.sinaimg.cn%2Fcrop.1.0.510.510.50%2Fa34740cfly8fek52dsg8bj20e80e63zz.jpg\u0026amp;followers_count=1511\u0026amp;wb_user_id=2739355855\u0026amp;wb_time=1492488695\u0026amp;area=\\u5317\\u4eac\u0026amp;p_nick=\\u871a\\u8bed\\u6d41\\u8a00_74190\u0026amp;p_uid=1576847061\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;2739355855\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;palmnews\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;125.111.82.100\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u6d59\\u6c5f\\u5b81\\u6ce2\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F591DB-7D6F5264-97B14195-8C6-940\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u4e2d\\u56fd\\u4eba\\u7684\\u52e4\\u52b3 \\u806a\\u660e\\u5728\\u5168\\u4e16\\u754c\\u5404\\u6c11\\u65cf\\u4e2d\\u65e0\\u4e0e\\u4f26\\u6bd4\\uff0c\\u52a0\\u4e0a\\u7a33\\u5b9a\\u7684\\u73af\\u5883\\u548c\\u56fd\\u4eba\\u7684\\u53d1\\u8d22\\u81f4\\u5bcc\\u4e4b\\u5fc3\\u524d\\u6240\\u672a\\u6709\\uff0c\\u6210\\u4e3a\\u4e16\\u754c\\u7b2c\\u4e00\\u5f3a\\u56fd\\u6307\\u65e5\\u53ef\\u5f85\\u3002\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u9a6c\\u4e0a\\u6709\\u623f\\u7f51_\\u6d77\\u5357\\u4e09\\u4e9a\\u5b81\\u6ce2\\u623f\\u4ea7\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;57\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;5\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 12:11:07\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;OS_TYPE=\u0026amp;SOFT_TYPE=\u0026amp;area=\\u6d59\\u6c5f\\u5b81\\u6ce2\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u9a6c\\u4e0a\\u6709\\u623f\\u7f51_\\u6d77\\u5357\\u4e09\\u4e9a\\u5b81\\u6ce2\\u623f\\u4ea7\u0026amp;wb_profile_img=http%3A%2F%2Ftva1.sinaimg.cn%2Fcrop.0.0.199.199.50%2F97b14195gw1f9ctatrzrlj205k05kdg8.jpg\u0026amp;followers_count=4098\u0026amp;wb_user_id=2544976277\u0026amp;wb_time=1492488667\u0026amp;area=\\u6d59\\u6c5f\\u5b81\\u6ce2\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;4\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;2544976277\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F55875-7B7DC18A-160C230EF-8C6-8C8\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F57D61-DD005ED9-9F481B41-8C6-8ED\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;2\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;202.45.129.183\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u65e5\\u672c\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F591AE-CA2D81B7-5D7A2F91-8C6-A08\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u6ede\\u80c0\\u903b\\u8f91\\uff0c\\u600e\\u4e48\\u5c31\\u8fd9\\u4e2a\\u5730\\u65b9\\u5f3a\\u76d7\\u591a\\u5462\\uff1f\\u5176\\u4ed6\\u5730\\u65b9\\u5f3a\\u76d7\\u600e\\u4e48\\u4e0d\\u591a\\u5462\\uff1f\\u81ea\\u5df1\\u7528\\u8111\\u60f3\\u53bb\\uff0c\\u5982\\u679c\\u4f60\\u6709\\u8111\\u7684\\u8bdd[\\u5077\\u7b11][\\u54c8\\u54c8]\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;1568288657\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;51\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;2\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 12:10:21\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u65e5\\u672c\u0026amp;area=\\u65e5\\u672c\u0026amp;p_nick=\\u91cd\\u9547\\u4e4b\\u8a89\u0026amp;p_uid=2672302913\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;1568288657\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;palmnews\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F55411-6F792978-812AA718-8C6-83A\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F55411-6F792978-812AA718-8C6-83A\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;122.156.219.198\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u9ed1\\u9f99\\u6c5f\\u5927\\u5e86\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F5917A-7A9CDBC6-706633CB-8C6-7D9\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u56fd\\u5bb6\\u4e0d\\u662f\\u4e00\\u4e2a\\u4eba\\u7ec4\\u6210\\u7684\\uff0c\\u5341\\u51e0\\u4ebf\\u4eba\\u6c11\\u7ec4\\u6210\\u7684\\uff0c\\u4f60\\u4ee5\\u4e3a\\u90fd\\u50cf\\u4f60\\u4e0d\\u4ea2\\u5ffd\\u60a0\\u5462\\uff1f\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u51b0\\u96ea\\u5c0f\\u738b\\u5b50\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;32\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;7\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 12:09:29\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;OS_TYPE=\u0026amp;SOFT_TYPE=\u0026amp;area=\\u9ed1\\u9f99\\u6c5f\\u5927\\u5e86\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u51b0\\u96ea\\u5c0f\\u738b\\u5b50\u0026amp;wb_profile_img=http%3A%2F%2Ftva3.sinaimg.cn%2Fcrop.0.0.180.180.50%2F706633cbjw1e8qgp5bmzyj2050050aa8.jpg\u0026amp;followers_count=61\u0026amp;wb_user_id=1885746123\u0026amp;wb_time=1492488570\u0026amp;area=\\u9ed1\\u9f99\\u6c5f\\u5927\\u5e86\u0026amp;p_nick=\\u5200\\u5c16\\u6fb7\\u821e\u0026amp;p_uid=2167056152\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;6\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;1885746123\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F585C8-758D75A1-1487E0A75-8C6-898\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F585C8-758D75A1-1487E0A75-8C6-898\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;202.45.129.183\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u65e5\\u672c\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F59113-CA2D81B7-5D7A2F91-8C6-95F\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;50\\u90a3\\u597d\\uff0c\\u518d\\u53d19\\u4e2a\\u5e16\\u4eca\\u5929\\u7684\\u996d\\u94b1\\u6709\\u4e86[\\u5077\\u7b11][\\u54c8\\u54c8]\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;1568288657\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;25\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;5\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 12:07:46\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u65e5\\u672c\u0026amp;area=\\u65e5\\u672c\u0026amp;p_nick=\\u82b1\\u7530\\u519c\\u592b_54159\u0026amp;p_uid=5511187061\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;4\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;1568288657\u0026quot;}], \u0026quot;news\u0026quot;: {\u0026quot;status\u0026quot;: \u0026quot;N_NORMAL\u0026quot;, \u0026quot;groups\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;show\u0026quot;: \u0026quot;M_DEFAULT\u0026quot;, \u0026quot;default\u0026quot;: \u0026quot;M_CHECK\u0026quot;, \u0026quot;title\u0026quot;: \u0026quot;\\u7f8e\\u5a92:\\u4e2d\\u56fd\\u5947\\u8ff9\\u6ca1\\u6709\\u7ed3\\u675f \\u800c\\u662f\\u8fdb\\u5165\\u4e86\\u7b2c\\u4e8c\\u9636\\u6bb5\u0026quot;, \u0026quot;tagalias\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;column\u0026quot;: \u0026quot;comos-56044\u0026quot;, \u0026quot;topic\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;subnum\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;script\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;base\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;url\u0026quot;: \u0026quot;http://news.sina.com.cn/o/2017-04-18/doc-ifyeimzx6745829.shtml\u0026quot;, \u0026quot;anonymous\u0026quot;: \u0026quot;A_DEFAULT\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 02:49:10\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;countmode\u0026quot;: \u0026quot;C_HIDE,C_QREPLY,C_SHOW\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;url_wap=http%3A%2F%2Fnews.sina.cn%2F2017-04-18%2Fdetail-ifyeimzx6745829.d.html\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;}, \u0026quot;grouplist\u0026quot;: [], \u0026quot;hot_list\u0026quot;: [{\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;124.207.17.226\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5317\\u4eac\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F54F60-7CCF11E2-5DFCC6D5-8C6-89D\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u4e2d\\u56fd\\u81ea\\u53e4\\u90fd\\u662f\\u6062\\u590d\\u529b\\u5f3a\\uff01\\u65e0\\u8bba\\u90a3\\u4e2a\\u65f6\\u671f\\u53ea\\u8981\\u662f\\u653f\\u6cbb\\u3001\\u519b\\u4e8b\\u7a33\\u5b9a\\u5e76\\u4e14\\u5f00\\u653e\\u7684\\u60c5\\u51b5\\u4e0b\\u7528\\u4e0d\\u4e86\\u591a\\u5c11\\u5e74\\u5c31\\u53ef\\u4ee5\\u8fc5\\u901f\\u53d1\\u5c55\\u5230\\u4e00\\u4e2a\\u6bd4\\u8f83\\u9ad8\\u7684\\u6c34\\u5e73\\uff01\\u8fd9\\u662f\\u4e16\\u754c\\u4e0a\\u4efb\\u4f55\\u4e00\\u4e2a\\u56fd\\u5bb6\\u548c\\u6c11\\u65cf\\u65e0\\u6cd5\\u6bd4\\u62df\\u7684\\uff01\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;1576847061\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;78\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;1232\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 07:27:31\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u5317\\u4eac\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u871a\\u8bed\\u6d41\\u8a00_74190\u0026amp;wb_profile_img=http%3A%2F%2Ftvax2.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=9\u0026amp;wb_user_id=1576847061\u0026amp;wb_time=1492471648\u0026amp;area=\\u5317\\u4eac\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;1227\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;1576847061\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;client\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;111.121.41.120\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u8d35\\u5dde\\u8d35\\u9633\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F55411-6F792978-812AA718-8C6-83A\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u8fd9\\u662f\\u7f8e\\u56fd\\u4eba\\u7684\\u7cd6\\u8863\\u70ae\\u5f39\\uff0c\\u662f\\u6367\\u6740\\u3002\\u5f53\\u5e74\\u5c31\\u662f\\u8fd9\\u4e48\\u5439\\u57ae\\u5c0f\\u65e5\\u672c\\u7684\\uff0c\\u865a\\u5fc3\\u4f7f\\u4eba\\u8fdb\\u6b65\\uff0c\\u9a84\\u50b2\\u4f7f\\u4eba\\u843d\\u540e\\u3002\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u5200\\u5c16\\u6f2b\\u821e\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;42\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;1099\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 07:47:33\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;OS_TYPE=14\u0026amp;OS_LANG=zh\u0026amp;SOFT_TYPE=SinaNews_v495\u0026amp;LATITUDE=26.564052\u0026amp;LONGITUDE=106.688995\u0026amp;client_ip=111.121.41.120\u0026amp;port=21506\u0026amp;from=palmnews\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u5200\\u5c16\\u6fb7\\u821e\u0026amp;wb_profile_img=http%3A%2F%2Ftva2.sinaimg.cn%2Fcrop.0.0.768.768.50%2F812aa718jw8ex6jtxc0o5j20lc0lcjsl.jpg\u0026amp;followers_count=39\u0026amp;wb_user_id=2167056152\u0026amp;wb_time=1492472849\u0026amp;area=\\u8d35\\u5dde\\u8d35\\u9633\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;1097\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;2167056152\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;14.152.68.63\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F548DB-E98443F-9BB1F267-8C6-90C\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u5947\\u8ff9\\u6240\\u521b\\u9020\\u7684\\u6210\\u679c\\u5e94\\u591a\\u591a\\u60e0\\u53ca\\u4e8e\\u5e7f\\u5927\\u6c11\\u4f17\\uff01\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;561017abc_106\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;19\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;1037\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 06:59:39\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;from=ucweb\u0026amp;OS_TYPE=14\u0026amp;SOFT_TYPE=Build/HuaweiMediaPad) UCBrowser/10.9.1.711 U3/0.8.0 Safari/534.30\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026amp;wb_verified=0\u0026amp;wb_screen_name=561017abc_106\u0026amp;wb_profile_img=http%3A%2F%2Ftvax4.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=0\u0026amp;wb_user_id=2612130407\u0026amp;wb_time=1492469979\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;1035\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;2612130407\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;111.161.46.229\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5929\\u6d25\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F55364-6FA12EE5-12CBD6D6E-8C6-932\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u57fa\\u672c\\u90fd\\u662f\\u623f\\u5b50\\u6da8\\u7684\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u7528\\u6237pkje9oqkf7\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;8\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;756\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 07:44:39\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;from=ucweb\u0026amp;OS_TYPE=14\u0026amp;SOFT_TYPE=Build/MMB29M) Chrome/40.0.2214.89 UCBrowser/11.4.5.937 Safari/537.36\u0026amp;area=\\u5929\\u6d25\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u7528\\u6237pkje9oqkf7\u0026amp;wb_profile_img=http%3A%2F%2Ftvax3.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=1\u0026amp;wb_user_id=5045579118\u0026amp;wb_time=1492472676\u0026amp;area=\\u5929\\u6d25\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;756\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;5045579118\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F51574-60EACE16-B8E57407-8C6-9B2\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F547C0-31573863-DCD0C9AA-8C6-89D\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;2\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;124.207.17.226\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5317\\u4eac\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F550EF-7CCF11E2-5DFCC6D5-8C6-8F1\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u5475\\u5475\\uff0c\\u4e00\\u8fb9\\u60f3\\u8981\\u514d\\u8d39\\u7684\\u4e00\\u8fb9\\u53c8\\u60f3\\u4f4e\\u7a0e\\u6536\\uff01\\u90a3\\u8bf7\\u95ee\\u94b1\\u4ece\\u54ea\\u91cc\\u6765\\uff1f\\u5317\\u6b27\\u798f\\u5229\\u662f\\u597d\\uff0c\\u4f46\\u662f\\u7a0e\\u7387\\u63a5\\u8fd150%\\uff01\\u4f60\\u53d7\\u5f97\\u4e86\\u5417\\uff1f\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;1576847061\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;50\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;481\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 07:34:07\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u5317\\u4eac\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u871a\\u8bed\\u6d41\\u8a00_74190\u0026amp;wb_profile_img=http%3A%2F%2Ftvax2.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=9\u0026amp;wb_user_id=1576847061\u0026amp;wb_time=1492472047\u0026amp;area=\\u5317\\u4eac\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;478\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;1576847061\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;183.193.185.176\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u4e0a\\u6d77\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F55631-B7C1B9B0-15AFD8BF3-8C6-88F\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u7b2c\\u4e00\\u9636\\u6bb5\\uff1a\\u5947\\u8ff9\\u3002\\u7b2c\\u4e8c\\u9636\\u6bb5\\uff1a\\u5947\\u8469\\u3002\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u7528\\u62375821533171\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;16\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;460\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 07:56:34\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;OS_TYPE=14\u0026amp;SOFT_TYPE=Build/SANFRANCISCO) Chrome/46.0.2490.11 Safari/537.36\u0026amp;area=\\u4e0a\\u6d77\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u7528\\u62375821533171\u0026amp;wb_profile_img=http%3A%2F%2Ftvax4.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=2\u0026amp;wb_user_id=5821533171\u0026amp;wb_time=1492473393\u0026amp;area=\\u4e0a\\u6d77\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;460\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;5821533171\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F54F60-7CCF11E2-5DFCC6D5-8C6-89D\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F54F60-7CCF11E2-5DFCC6D5-8C6-89D\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;202.116.70.152\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F55D3C-CA744698-ABEFEB0E-8C6-923\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u8fd9\\u4e9b\\u90fd\\u8981\\u5f52\\u529f\\u4e8e\\u5343\\u767e\\u5e74\\u6765\\u7684\\u5112\\u5bb6\\u601d\\u60f3\\u548c\\u4efb\\u52b3\\u4efb\\u6028\\u7684\\u4e2d\\u56fd\\u4eba\\u6c11\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;2884627214\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;26\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;448\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 08:26:40\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026amp;wb_verified=0\u0026amp;wb_screen_name=Hello_\\u5e7f\\u5dde\u0026amp;wb_profile_img=http%3A%2F%2Ftva1.sinaimg.cn%2Fcrop.0.0.198.198.50%2Fabefeb0egw1e839n9chjmj205k05jaa4.jpg\u0026amp;followers_count=72\u0026amp;wb_user_id=2884627214\u0026amp;wb_time=1492475197\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026amp;p_nick=\\u871a\\u8bed\\u6d41\\u8a00_74190\u0026amp;p_uid=1576847061\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;447\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;2884627214\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F551FD-6F01419B-544349C6-8C6-88C\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F551FD-6F01419B-544349C6-8C6-88C\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;14.215.161.210\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F5649F-ED7A1D2-14B2F31E2-8C6-948\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u4ee5\\u524d\\u6c11\\u4f17\\u4ec0\\u751f\\u6d3b\\uff0c\\u73b0\\u5728\\u4ec0\\u4e48\\u751f\\u6d3b\\uff1f\\u4e2d\\u56fd\\u73b0\\u5728\\u53ea\\u8981\\u4f60\\u80af\\u52aa\\u529b\\uff0c\\u867d\\u7136\\u4e0d\\u4e00\\u5b9a\\u6709\\u8f66\\u6709\\u623f\\uff0c\\u4f46\\u80af\\u5b9a\\u4e0d\\u6101\\u5403\\u4f4f\\u7a7f\\u3002\\u7535\\u89c6\\u3001\\u6469\\u6258\\u8f66\\u3001\\u6d17\\u8863\\u673a\\u3001\\u7535\\u8111\\u3001\\u624b\\u673a\\u3001\\u8fd9\\u4e9b\\u90fd\\u5df2\\u7ecf\\u662f\\u666e\\u901a\\u5bb6\\u5ead\\u7684\\u914d\\u5907\\u4e86\\u300220\\u5e74\\u524d\\u6709\\u51e0\\u5bb6\\u6709\\uff1f\\u4f60\\u8bf4\\u6ca1\\u6709\\u60e0\\u53ca\\u6c11\\u4f17\\u662f\\u7741\\u773c\\u8bf4\\u778e\\u8bdd\\u3002\\u867d\\u7136\\u8fd8\\u6709\\u5f88\\u591a\\u4e0d\\u8db3\\uff0c\\u4f46\\u4e2d\\u56fd\\u7684\\u751f\\u6d3b\\u6c34\\u5e73\\u7684\\u786e\\u6709\\u5f88\\u5927\\u7684\\u98de\\u8dc3\\u3002\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;\\u68ee\\u6797\\u516c\\u4e3b\\u51c0\\u5316\\u5668499\\u5143\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;127\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;442\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 08:58:08\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;from=ucweb\u0026amp;OS_TYPE=14\u0026amp;SOFT_TYPE=Build/HUAWEIMHA-AL00) Chrome/40.0.2214.89 UCBrowser/11.4.9.941 Safari/537.36\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u68ee\\u6797\\u516c\\u4e3b\\u51c0\\u5316\\u5668499\\u5143\u0026amp;wb_profile_img=http%3A%2F%2Ftva2.sinaimg.cn%2Fcrop.0.0.1180.1180.50%2F00641SPUgw1eq5fm40xnsj30wu0wu0yi.jpg\u0026amp;followers_count=24\u0026amp;wb_user_id=5556351458\u0026amp;wb_time=1492477087\u0026amp;area=\\u5e7f\\u4e1c\\u5e7f\\u5dde\u0026amp;p_nick=8866\\u5f00\\u5fc3\u0026amp;p_uid=1413695942\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;441\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;5556351458\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;wap\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;58F51574-60EACE16-B8E57407-8C6-9B2\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;58F51574-60EACE16-B8E57407-8C6-9B2\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;101.90.253.194\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u4e0a\\u6d77\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F54759-655AFDC2-696EE40E-8C6-992\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u770b\\u5230\\u4f4e\\u4ef7\\u4f4f\\u623f\\u5c31\\u7279\\u4e48\\u7b11\\u4e86\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;Neil_de_\\u8089\\u8089\\u548c\\u7403\\u7403\\u54d2\\u5bb6\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;11\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;315\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 06:53:16\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;OS_TYPE=14\u0026amp;SOFT_TYPE=Build/NRD90M) SamsungBrowser/5.0 Chrome/51.0.2704.106 Safari/537.36\u0026amp;area=\\u4e0a\\u6d77\u0026amp;wb_verified=1\u0026amp;wb_screen_name=Neil_de_\\u8089\\u8089\\u548c\\u7403\\u7403\\u54d2\\u5bb6\u0026amp;wb_profile_img=http%3A%2F%2Ftva2.sinaimg.cn%2Fcrop.83.0.493.493.50%2F696ee40ejw8eozry1zu5sj20ik0dpdgk.jpg\u0026amp;wb_description=\\u4e1c\\u822a\\u5de5\\u7a0b\\u6280\\u672f\\u516c\\u53f8\\u6ce2\\u97f3\\u98de\\u673a\\u7ef4\\u4fee\\u5e08\\u8c22\\u4e00\\u6625\u0026amp;followers_count=242\u0026amp;wb_user_id=1768875022\u0026amp;wb_verified_type=0\u0026amp;wb_time=1492469593\u0026amp;area=\\u4e0a\\u6d77\u0026amp;p_nick=Maryland-DC\u0026amp;p_uid=3102045191\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;314\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;1768875022\u0026quot;}, {\u0026quot;status\u0026quot;: \u0026quot;M_PASS\u0026quot;, \u0026quot;usertype\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;thread\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;parent\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;level\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;118.124.239.246\u0026quot;, \u0026quot;area\u0026quot;: \u0026quot;\\u56db\\u5ddd\\u4e50\\u5c71\u0026quot;, \u0026quot;newsid\u0026quot;: \u0026quot;comos-fyeimzx6745829\u0026quot;, \u0026quot;mid\u0026quot;: \u0026quot;58F54990-767CEFF6-1313DBE69-8C6-921\u0026quot;, \u0026quot;against\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;\\u6539\\u9769\\u5f00\\u653e\\u7684\\u6210\\u679c\\uff0c\\u5e94\\u8be5\\u66f4\\u591a\\u5730\\u548c\\u8001\\u767e\\u59d3\\u5171\\u4eab\\uff01\u0026quot;, \u0026quot;nick\u0026quot;: \u0026quot;5121097321\u0026quot;, \u0026quot;length\u0026quot;: \u0026quot;20\u0026quot;, \u0026quot;rank\u0026quot;: \u0026quot;251\u0026quot;, \u0026quot;time\u0026quot;: \u0026quot;2017-04-18 07:02:41\u0026quot;, \u0026quot;vote\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;config\u0026quot;: \u0026quot;client_port=0\u0026amp;area=\\u56db\\u5ddd\\u4e50\\u5c71\u0026amp;wb_verified=0\u0026amp;wb_screen_name=\\u4e00\\u9519\\u5728\\u951938379\u0026amp;wb_profile_img=http%3A%2F%2Ftvax2.sinaimg.cn%2Fdefault%2Fimages%2Fdefault_avatar_male_50.gif\u0026amp;followers_count=1\u0026amp;wb_user_id=5121097321\u0026amp;wb_time=1492470160\u0026amp;area=\\u56db\\u5ddd\\u4e50\\u5c71\u0026quot;, \u0026quot;agree\u0026quot;: \u0026quot;251\u0026quot;, \u0026quot;channel\u0026quot;: \u0026quot;gn\u0026quot;, \u0026quot;uid\u0026quot;: \u0026quot;5121097321\u0026quot;}]}} 1import json 2jd = json.loads(comment_res.text.strip(\u0026#39;var data=\u0026#39;)) 3jd[\u0026#39;result\u0026#39;][\u0026#39;count\u0026#39;][\u0026#39;total\u0026#39;] 10756 1#artibody_url.split(\u0026#39;/\u0026#39;)[-1].rstrip(\u0026#39;.shtml\u0026#39;) 2# newsid=comos-fyeimzx6745829 3#news_id = artibody_url.split(\u0026#39;/\u0026#39;)[-1].lstrip(\u0026#39;doc-i\u0026#39;).rstrip(\u0026#39;.shtml\u0026#39;) 4import re 5news_id = re.search(\u0026#39;doc-i(.*).shtml\u0026#39;, artibody_url).group(1) 1form_comment_url = \u0026#39;http://comment5.news.sina.com.cn/page/info?version=1\u0026amp;\\ 2format=js\u0026amp;channel=gn\u0026amp;newsid=comos-{}\u0026amp;group=\u0026amp;compress=0\u0026amp;ie=utf-8\u0026amp;oe=utf-8\u0026amp;page=1\u0026amp;page_size=20\u0026#39; 3form_comment_url.format(news_id) 'http://comment5.news.sina.com.cn/page/info?version=1\u0026amp;format=js\u0026amp;channel=gn\u0026amp;newsid=comos-fyeimzx6745829\u0026amp;group=\u0026amp;compress=0\u0026amp;ie=utf-8\u0026amp;oe=utf-8\u0026amp;page=1\u0026amp;page_size=20' 1import re 2artibody_url = \u0026#39;http://news.sina.com.cn/o/2017-04-18/doc-ifyeimzx6745829.shtml\u0026#39; 3def getCommentCounts(news_url): 4 news_id = re.search(\u0026#39;doc-i(.*).shtml\u0026#39;, news_url).group(1) 5 comments = requests.get(form_comment_url.format(news_id)) 6 jd = json.loads(comments.text.lstrip(\u0026#39;var data=\u0026#39;)) 7 return jd[\u0026#39;result\u0026#39;][\u0026#39;count\u0026#39;][\u0026#39;total\u0026#39;] 1getCommentCounts(artibody_url) 13051 1import requests 2from bs4 import BeautifulSoup 3import re 4import json 5from datetime import datetime 6def getNewsDetail(newsurl): 7 result = {} 8 res = requests.get(newsurl) 9 res.encoding = \u0026#39;utf-8\u0026#39; 10 soup = BeautifulSoup(res.text, \u0026#39;html.parser\u0026#39;) 11 result[\u0026#39;title\u0026#39;] = soup.select(\u0026#39;title\u0026#39;)[0].text 12 result[\u0026#39;newssource\u0026#39;] = soup.select(\u0026#39;p\u0026#39;)[0].contents[0].strip() 13 artibody_time = soup.select(\u0026#39;.time-source\u0026#39;)[0].contents[0].strip() 14 result[\u0026#39;dt\u0026#39;] = datetime.strptime(artibody_time, \u0026#39;%Y年%m月%d日%H:%M\u0026#39;) 15 result[\u0026#39;article\u0026#39;] = \u0026#39; \u0026#39;.join([p.text.strip() for p in soup.select(\u0026#39;#artibody p\u0026#39;)[1:-2]]) 16 result[\u0026#39;editor\u0026#39;] = soup.select(\u0026#39;.article-editor\u0026#39;)[0].text.lstrip(\u0026#39;责任编辑：\u0026#39;) 17 result[\u0026#39;comments\u0026#39;] = getCommentCounts(newsurl) 18 return result 1getNewsDetail(artibody_url) {'article': '[环球时报综合报道] “增长表现超出预期”，对于中国国家统计局公布的今年一季度6.9%的国内生产总值（GDP）增长率，外媒昨天纷纷这样强调。不同的人看到不一样的风景，但一个显而易见的事实是，只要中国大体维持目前的相对增长优势，上升的步伐便不可阻挡。正如美国《福布斯》日前所说：中国的经济奇迹没有结束，而是进入了第二阶段。 虽然增长放缓，挑战越来越多，但中国的进步有目共睹。《纽约时报》17日称，过去11个季度的官方数据显示，中国经济增长在6.7%到7.2%之间。从国际标准看，这是令人吃惊的长期稳定增长。与此形成鲜明对比的是，美国的季度增长经常仅为一两个百分点。过去12年，中国蓝领工人薪酬激增8倍，这大幅削弱了中国的劳工成本优势，不过同时也促进了经济繁荣，推动消费增长。 日本《外交学者》称，过去几十年中国GDP保持两位数增长，但现在增幅仅为6%到7%之间。尽管中国经济增长确实放缓了，但中国消费者强势登上世界舞台的购买力并没有减弱的趋势。事实上，中国消费者的购买力今后还将变得更加显著。麦肯锡分析师预计，到2020年中国将有近4亿家庭收入在1.6万到3.4万美元之间的“主流消费者”，或者说中产阶层消费者。这些消费者的强大实力将震撼世界。 19日，第17届上海国际车展将拉开帷幕。法新社称，全球汽车厂商本周汇聚中国，面对世界最大汽车市场上的激烈竞争，业界正在为销售放缓和潜在的价格战做好准备。不过，应该客观认识中国汽车产业遇到的这些麻烦，中国对汽车厂商来说仍是一座金矿。去年美国汽车销量创下历史新高，达到1755万辆，但中国早在8年前就超越这个数字并成为世界第一大汽车市场。 “中国奇迹没有结束，而是进入了第二阶段”，美国《福布斯》日前刊文称，1980年，世界人口最多的国家也是最贫困的国家之一。30多年后，中国已成为仅次于美国的世界第二大经济体。去年中国GDP达到10.8万亿美元。此前，从没有一个像中国这样规模如此之大、情况如此之复杂、历史如此之悠久的国家能在如此短的时间内迅速崛起。过去6年来，中国平均增速“仅为”6%到9%之间，这使得有些人宣称中国奇迹结束了。这些人错了，中国只是进入了第二阶段。中国政府在保持稳定的同时寻求发展。我们可将此解释为努力将中国经济从侧重制造和出口转向更成熟的经济发展推动力量。通过致力于现代化增长的四大支柱消费、科技、高端制造和服务业，中国将推动其经济增长奇迹转型和继续发展。', 'comments': 13152, 'dt': datetime.datetime(2017, 4, 18, 2, 25), 'editor': '李伟山 ', 'newssource': '原标题：美媒：中国奇迹没有结束，而是进入了第二阶段', 'title': '美媒:中国奇迹没有结束 而是进入了第二阶段|中国经济_新浪新闻'} ","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%88%AC%E8%99%AB%E5%AE%9E%E9%AA%8C%E4%BB%A3%E7%A0%81%E5%8F%8A%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9Chtml%E6%96%87%E6%9C%AC%E8%BF%9B%E8%A1%8C%E9%80%82%E5%BD%93%E5%88%A0%E9%99%A4%E4%BB%A5%E5%8E%8B%E7%BC%A9%E7%89%88%E9%9D%A2/","section":"post","tags":["Python","爬虫"],"title":"第一次爬虫实验代码及运行结果（html文本进行适当删除以压缩版面）"},{"body":"龙云尧个人博客，转载请注明出处\n初步了解网络爬虫的工具使用和代码编写\n学习地址见网易云课堂《Python网络实战》\n前言 工具\n1.Python编辑工具\n实验中使用到的Python工具为Anaconda，工具的安装参照Anaconda使用总结（Linux下）以及Python科学计算的瑞士军刀——Anaconda 安装与配置（windows下）相关教程。\n在视频教学过程中，讲师也会有一点安装指导。\n初学过程中推荐使用Jupyter notebook工具在浏览器中编辑，这样可以每次只执行几行函数，而不用一次从头到尾执行完毕。调试完成以后，可以在Spyder中一次运行。\nJupyter notebook工具中，ctrl+enter表示执行当前cell的代码，alt+enter表示新建一个cell，其他的在本次实验中用不到。\n2.辅助工具\n使用Chrome辅助元素选择。需要对Chrome的开发者模式有较多的使用经验。\n不过在视频中，讲师会反复示范怎么使用Chrome的开发者模式，所以使用起来不必太担心。\n知识储备\n1.语法\n基本的Python语法知识可以参照Python 基础语法（推荐）和Python基本语法，python入门到精通[二]（页面很low）\n注：runoob.com是一个好网站\n在语法和知识结构上，Python的概念和C++/Java这类面向对象型语言很相似，比如类似的对象概念.\n比如类似于数组的列表(List)，类似于map的字典(dictdict)。其他部分自行体会.\n因为本次教学课程中，实验较为简单，所以我其实也只是对Python有一个基本的了解。\n2.工具使用\nBeautifulSoap的使用教程参见Python爬虫利器二之Beautiful Soup的用法\n在本次实验中，网络爬虫需要对爬取的网页进行解析，故而不可避免的需要使用到html的相关知识。不过难度不大，一边实验一边回忆都已经足够了。\n在实验中使用了BeautifulSoup工具能够很方便的将抓取的网页解析成一个文档树。然后我们就可以对这个文档树进行select，选择出特定的标签，进而分析出我们想要的信息。\n举个例子：\n1import requests # 导入工具包 2artibody_url = \u0026#39;http://news.sina.com.cn/o/2017-04-18/doc-ifyeimzx6745829.shtml\u0026#39; 3artibody_res = requests.get(artibody_url) # 模仿浏览器，使用get方法获取url指向的网页资源 4artibody_res.encoding = \u0026#39;utf-8\u0026#39; # 设置编码，否则抓取的文档会出现乱码 5 6 7from bs4 import BeautifulSoup # 从bs4中导入BeautifulSoap包 8artibody_soup = BeautifulSoup(artibody_res.text, \u0026#39;html.parser\u0026#39;) # 将抓取的网页扔进BeautifulSoap生成一个文档树 9artibody_div = artibody_soup.select(\u0026#39;#artibody p\u0026#39;)[1:-2] # 使用select方法获取想要的内容 10# select中内容的使用和css的选择器类似，id使用\u0026#39;#xxx\u0026#39;， 类使用\u0026#39;.xxx\u0026#39;，普通标签使用\u0026#39;p\u0026#39;，另外还可以有子代选择器\u0026#39;body div #artibody p\u0026#39; 3.本篇博客系个人学习所总结的知识，如果有什么概念或者其他错误，欢迎喷。但是不小心对你们造成误导，那就概不负责了2333\n##正题\n课程知识总结 将这个部分写在最前面，是为了在课程开始之前就对整个课程的目的，以及coding过程中，每一步的目的有所了解。避免盲目跟着打代码，而不知道整个项目目的。\n本课程实现了从网易新闻网页中抓取新闻信息，封装成结构化数据的过程。\n课程一共18讲，每一讲2-10分钟不等，一般为5分钟。\n第1-3讲，为课程入门，大致介绍课程目的，对Python编写网络爬虫进行初步介绍。 第4讲，实现模拟浏览器，使用get方法获取网页信息的方法。 第5-6讲，介绍BeautifulSoap，介绍基本使用方法 第7-16讲，利用BeautifulSoap构造的文档树剖析整个网页，并且通过网页一步一步获取\u0026quot;title\u0026quot;(标题), \u0026quot;newssource\u0026quot;(原标题), \u0026quot;date\u0026quot;(发稿时间), \u0026quot;article\u0026quot;(新闻主题), \u0026quot;article\u0026quot;(编辑), \u0026quot;comments\u0026quot;(评论数)。 第17讲，函数封装指导 第18讲，将前17章中所实现的功能封装成一个函数，最终实现输入一个网页，返回一个封装好的结构化数据。 代码解释 1.requests获取网页信息\n1# 导入requests包 2import requests 3artibody_url = \u0026#39;http://news.sina.com.cn/o/2017-04-18/doc-ifyeimzx6745829.shtml\u0026#39; 4# 模仿浏览器发送一个get请求，获取链接指向的网页，将获取的数据存进artibody_res 5artibody_res = requests.get(artibody_url) 6# 设置编码，以免乱码 7artibody_res.encoding = \u0026#39;utf-8\u0026#39; 8# 打印text 9print(artibody_res.text) 2.利用BeautifulSoap将网页装进文档树\n1# 从bs4中导入BeautifulSoup数据 2from bs4 import BeautifulSoup 3# 选择解析器为Python标准库(html.parser)，如果不设置就会有warnning 4artibody_soup = BeautifulSoup(artibody_res.text, \u0026#39;html.parser\u0026#39;) 5# 调用BeautifulSoap中的select方法进行，[1:-2]表示选择从第1个元素到倒数第二个元素（Python从0开始计数） 6artibody_div = artibody_soup.select(\u0026#39;#artibody p\u0026#39;)[1:-2] 7print(artibody_div) 3.获取文本信息\nstrip函数的使用可以参考python strip()函数 介绍\n1# 构建一个List，用于存放文本 2article = [] 3# for循环，记得for语句最后有一个\u0026#39;:\u0026#39;（注，Python没有括号，而是以缩进代替） 4for p in artibody_div: 5 # 调用append方法，将text一个一个加入list，调用strip()是为了去掉空白字符 6 article.append(p.text.strip()) 7print(article) 4.文本合并\n1# 调用join方法，两article中的元素全部合并，原本List中不同的元素之间使用\u0026#39; \u0026#39;隔开，换成\u0026#39;\\n\u0026#39;也可 2#只不过Juphter Notebook会直接将\u0026#39;\\n\u0026#39;显示出来而已 3\u0026#39; \u0026#39;.join(article) 5.一行实现文本合并\n1# 不用解释了吧 2\u0026#39; \u0026#39;.join([p.text.strip() for p in artibody_soup.select(\u0026#39;#artibody p\u0026#39;)[1:-2]]) 6.编辑提取\n1# 调用lstrip左切除 2artibody_editor = artibody_soup.select(\u0026#39;.article-editor\u0026#39;)[0].text.lstrip(\u0026#39;责任编辑：\u0026#39;) 3print(artibody_editor) 7.title获取\n1artibody_title = artibody_soup.select(\u0026#39;title\u0026#39;)[0].text 2print(artibody_title) 8.引用获取\ncontents的使用请继续参照开头提到的文章Python爬虫利器二之Beautiful Soup的用法\n1# 在较为复杂的层级结构中，调用contents获得其子节点 2artibody_p = artibody_div.select(\u0026#39;p\u0026#39;)[0].contents[0].strip() 3print(artibody_p) 9.日期获取\n关于datetime的使用，参见python 常用 time, datetime处理。\n（其实只要只要strptime和strftime的用法，在本次实验就足够了。）\n1artibody_time = artibody_soup.select(\u0026#39;.time-source\u0026#39;)[0].contents[0].strip() 2from datetime import datetime 3# 使用datetime进行日期获取，strptime表示将str转换成时间 4dt = datetime.strptime(artibody_time, \u0026#39;%Y年%m月%d日%H:%M\u0026#39;) 5# strftime表示将时间转换成文字 6print(dt.strftime(\u0026#39;%Y-%m-%d %H:%M\u0026#39;)) 10.来源获取\n1# 不解释 2artibody_from = artibody_soup.select(\u0026#39;.time-source span a\u0026#39;)[0].text 3print(artibody_from) 11.评论数获取\n在课程中，最难抓的也就是这货了。因为使用的是js从后台获取数据，所以不能直接从静态网页抓取。\n下面代码就展示了，明明使用了正确的定位，但是抓取不到数值的情况。\n1artibody_commentCount = artibody_soup.select(\u0026#39;.page-tool-i\u0026#39;) 2print(artibody_commentCount) 结果如下：\n1[\u0026lt;span class=\u0026#34;page-tool-i page-tool-s\u0026#34; title=\u0026#34;分享\u0026#34;\u0026gt; 2\u0026lt;a href=\u0026#34;javascript:;\u0026#34; id=\u0026#34;shareArticleButton\u0026#34; onclick=\u0026#34;_S_uaTrack(\u0026#39;index_news_content\u0026#39;, \u0026#39;other_click\u0026#39;);\u0026#34;\u0026gt;分享\u0026lt;/a\u0026gt; 3\u0026lt;/span\u0026gt;, \u0026lt;span class=\u0026#34;page-tool-i page-tool-c page-tool-share\u0026#34; title=\u0026#34;评论\u0026#34;\u0026gt; 4\u0026lt;span id=\u0026#34;commentCount1\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; 5\u0026lt;a href=\u0026#34;javascript:;\u0026#34; suda-uatrack=\u0026#34;key=index_news_content\u0026amp;amp;value=comment_click\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; 6\u0026lt;/span\u0026gt;, \u0026lt;span class=\u0026#34;page-tool-i page-tool-s\u0026#34; title=\u0026#34;分享\u0026#34;\u0026gt; 7\u0026lt;a href=\u0026#34;javascript:;\u0026#34; id=\u0026#34;shareArticleButton2\u0026#34; onclick=\u0026#34;_S_uaTrack(\u0026#39;index_news_content\u0026#39;, \u0026#39;other_roll_click\u0026#39;);\u0026#34;\u0026gt;分享\u0026lt;/a\u0026gt; 8\u0026lt;/span\u0026gt;, \u0026lt;span class=\u0026#34;page-tool-i page-tool-c page-tool-share\u0026#34; id=\u0026#34;pageToolShare\u0026#34; title=\u0026#34;评论\u0026#34;\u0026gt; 9\u0026lt;a href=\u0026#34;javascript:;\u0026#34; suda-uatrack=\u0026#34;key=index_news_content\u0026amp;amp;value=comment_roll_click\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; 10\u0026lt;span id=\u0026#34;commentCount1M\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; 11\u0026lt;/span\u0026gt;] 只有span标签，而没有任何a标签。\n所以我们只能从仿照js抓取数据了。不要问我那个老师是怎么知道是哪个js文件的= =，我也觉得很神奇。\n抓取过程中可以用一点小技巧。\n在网页加载过程中盯着评论数。\n在评论加载出来之后，立即停止Chrome中开发者模式下控制台的监控。这样从后向前找会轻松一点（虽然还是需要寻找很久）。\n寻找的过程中好好利用控制台的preview功能。\n抓取过程中，代码如下。\n1comment_url = \u0026#39;http://comment5.news.sina.com.cn/page/info?version=1\u0026amp;format=js\u0026amp;channel=gn\u0026amp;newsid=comos-fyeimzx6745829\u0026amp;group=\u0026amp;compress=0\u0026amp;ie=utf-8\u0026amp;oe=utf-8\u0026amp;page=1\u0026amp;page_size=20\u0026#39; 2comment_res = requests.get(comment_url) 3comment_res.encoding = \u0026#39;utf-8\u0026#39; 4print(comment_res.text) 然后你就能够抓到如下结果\n1var data={\u0026#34;result\u0026#34;: {\u0026#34;status\u0026#34;: {\u0026#34;msg\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;code\u0026#34;: 0}, \u0026#34;count\u0026#34;: {\u0026#34;qreply\u0026#34;: 10065, \u0026#34;total\u0026#34;: 10756, \u0026#34;show\u0026#34;: 200}, \u0026#34;replydict\u0026#34;: ...中间省去真·1w字..., \u0026#34;agree\u0026#34;: \u0026#34;251\u0026#34;, \u0026#34;channel\u0026#34;: \u0026#34;gn\u0026#34;, \u0026#34;uid\u0026#34;: \u0026#34;5121097321\u0026#34;}]}} 将js返回的这一段数据，使用json存放起来。\njson的基本操作参见python解析json\n1import json 2jd = json.loads(comment_res.text.strip(\u0026#39;var data=\u0026#39;)) 3# 获取jd下\u0026#39;result\u0026#39;标签中‘count\u0026#39;标签中’total‘内容 4jd[\u0026#39;result\u0026#39;][\u0026#39;count\u0026#39;][\u0026#39;total\u0026#39;] 到这里评论数的获取就结束了，有点麻烦们也有点蛋疼。\n12.获取newsid\n这一步获取newsid能够让我们在后面实现批量导入。\n关于正则表示式的使用，参见Python正则表达式。\n1# 有两种实现方法，第一种，先split，然后去头去尾提取出来就是了 2#artibody_url.split(\u0026#39;/\u0026#39;)[-1].rstrip(\u0026#39;.shtml\u0026#39;) 3# newsid=comos-fyeimzx6745829 4#news_id = artibody_url.split(\u0026#39;/\u0026#39;)[-1].lstrip(\u0026#39;doc-i\u0026#39;).rstrip(\u0026#39;.shtml\u0026#39;) 5#另一种是使用正则表达式 6# group(1)表示匹配的字符串， group(0)会将整个字符串返回回来 7import re 8news_id = re.search(\u0026#39;doc-i(.*).shtml\u0026#39;, artibody_url).group(1) 13.使用newsid\n1# 将newsis填入form_comment_url的括号内 2form_comment_url = \u0026#39;http://comment5.news.sina.com.cn/page/info?version=1\u0026amp;\\ 3format=js\u0026amp;channel=gn\u0026amp;newsid=comos-{}\u0026amp;group=\u0026amp;compress=0\u0026amp;ie=utf-8\u0026amp;oe=utf-8\u0026amp;page=1\u0026amp;page_size=20\u0026#39; 4form_comment_url.format(news_id) 14.封装函数\n封装函数之后，我们就能够实现，传入一个新闻的网址，就获取这个新闻的评论数的功能了。\n1import re 2artibody_url = \u0026#39;http://news.sina.com.cn/o/2017-04-18/doc-ifyeimzx6745829.shtml\u0026#39; 3def getCommentCounts(news_url): 4 news_id = re.search(\u0026#39;doc-i(.*).shtml\u0026#39;, news_url).group(1) 5 comments = requests.get(form_comment_url.format(news_id)) 6 jd = json.loads(comments.text.lstrip(\u0026#39;var data=\u0026#39;)) 7 return jd[\u0026#39;result\u0026#39;][\u0026#39;count\u0026#39;][\u0026#39;total\u0026#39;] 15.整体封装\n前面步骤全部走了一遍之后，我们就可以将它们封装起来，称为一个函数了。\n通过这一步，我们可以就可以把news.sina.com.cn/china中所有的href获取下来，然后逐一传入这个函数，就能够得到每一条新闻的结构化数据了。剩下的任务就是看我们怎么使用咯。\n1import requests 2from bs4 import BeautifulSoup 3import re 4import json 5from datetime import datetime 6def getNewsDetail(newsurl): 7 result = {} 8 res = requests.get(newsurl) 9 res.encoding = \u0026#39;utf-8\u0026#39; 10 soup = BeautifulSoup(res.text, \u0026#39;html.parser\u0026#39;) 11 result[\u0026#39;title\u0026#39;] = soup.select(\u0026#39;title\u0026#39;)[0].text 12 result[\u0026#39;newssource\u0026#39;] = soup.select(\u0026#39;p\u0026#39;)[0].contents[0].strip() 13 artibody_time = soup.select(\u0026#39;.time-source\u0026#39;)[0].contents[0].strip() 14 result[\u0026#39;dt\u0026#39;] = datetime.strptime(artibody_time, \u0026#39;%Y年%m月%d日%H:%M\u0026#39;) 15 result[\u0026#39;article\u0026#39;] = \u0026#39; \u0026#39;.join([p.text.strip() for p in soup.select(\u0026#39;#artibody p\u0026#39;)[1:-2]]) 16 result[\u0026#39;editor\u0026#39;] = soup.select(\u0026#39;.article-editor\u0026#39;)[0].text.lstrip(\u0026#39;责任编辑：\u0026#39;) 17 result[\u0026#39;comments\u0026#39;] = getCommentCounts(newsurl) 18 return result 整个Python网络爬虫实战课程到这里也就结束了。丘祐玮讲师讲课比较细致，整个课程浅显易懂，对于有JS基础或者java基础或者C++基础或者Matlab基础的人来说，应该不难。\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0/","section":"post","tags":["Python","爬虫"],"title":"Python网络爬虫学习"},{"body":" 一个病人除了说他自己病了以外，还能说什么呢？——塞·约翰逊\n现在正在看这篇推送的你对艾滋病了解多少？ 你可能知道艾滋病是由HIV病毒引起的； 你可能知道HIV病毒传播途径主要包括血液传播、性传播和母婴传播，此外还有可能通过尿液、泪液等其他体液传播（但是飞沫、握手等日常行为并不会传播）； 你可能知道HIV在人体内的潜伏期平均为8～9年，一旦爆发就是临床上表现的艾滋病； 你可能知道艾滋病爆发会破坏病人的免疫系统，造成病人的免疫系统紊乱，使病人极易受到各种感染或者罹患癌症； 你还可能知道一个良好的心态和健康的锻炼对艾滋病的治疗会有所帮助。 可是你知道的内容大概也就仅限于此了。\n初访艾滋 出发的高铁上，我刷着VICE的 [ 我们问了几个艾滋携带者，愿意这辈子只吃饺子皮还是感染 HIV？ ]，想着待会该怎么说话，想着可以拿到几个公益时，想着还能不能赶回来拿快递，想着今天的晚餐。\n一切似乎就像在广州地下来来往往的地铁一样，按部就班。\n笼 沉寂。\n所有人都带着口罩。\n病人躺在病床上，没有呻吟。电子屏规律的跳动，没有一点干扰。家属在病人旁边或削水果，或枕着床沿休息，或在走廊外的小板凳上想些什么。护工在走廊上自顾地擦着玻璃。\n一切似乎都很安静，安静中夹杂着一丝灰色。\n第一个病房，拥挤，稍显杂乱。三个病人躺在里面。\n突然进入的我们5个人，几乎占据了病房剩余空间的一半。\n介绍完此行的目的猴，我开始试着和靠在门口的病人进行交流。\n这是我第一次访问重症病人，我没察觉他旁边起伏的呼吸机显示着他已经很虚弱，甚至当我们刚开始对话时我都没察觉他说话已经颇为费力。\n他很瘦，露在被单的小腿已经不像我们那般结实，嶙峋的胸膛贴着呼吸机的某种贴片，眼看体重不会超过100斤。\n他用一支空闲的手轻轻的笔画，配合着几乎已经模糊的吐字介绍着他现在正在进行的治疗。\n我突然反应过来他现在并不适合说话。和另一名同行队员将手中的水果放在床头柜，送上祈愿，退出走廊和他的弟弟开始了对话。\n1“他原来有170斤。” 2 3病人的家属指了指床上的哥哥。“病发后一直瘦，就 4变成了现在这个样子。” 5 6“我们也只有平时多安抚他啊，要对活下去有希望 7啊。但是他本身（求生）欲望其实不高。”家属看 8了看走廊中部某个病房，“两天前刚从那间病房拉 9走一个人。” 平淡的语气，似乎已经司空见惯。\n1“不管情况怎么糟，总要对生存下去抱有希望啊，” 2我开始根据我仅知道的一点艾滋病知识安慰他， 3“艾滋病只要能够好好控制，按时吃药，拥有一个良 4好的心态，其实生活和正常人差不多。你平时给他多 5打气，多带他出去走走，对他的治疗会有好处的。” 6 7“他现在已经基本走不动了。其实很久以前他就查出 8来了身上有异常。去医院好不容易压（制）下来，医 9生告诫他，不能停药，病才能控制得住。但是回去没 10几天他还是自己停了，”家属看着病床上的哥哥，小 11声说，“但是其实药是可以免费领的。前两年还挺正 12常的。但是后面他慢慢的发现老是咳嗽，偏偏他自己 13又喜欢拖着，等到严重了才去大医院检查。结果透析 14的时候发现，病灶转移了。肺里面有一团絮状阴影， 15真菌感染的。” 我突然语塞，不知道该怎么继续安抚家人，因为我发现我既无法站在一个旁观者的角度说“要保持一个良好的心态接受治疗”，也无法冷静的说“如果他当时及时吃药，是不会有这样的境况的”。\n一个只能靠呼吸机维生的人，浑身痛楚的人，怎么谈心态良好。\n一个消瘦至此、离不开床的人，怎么能后悔“如果当初”。\n1但是还是得给家属鼓气，至少树立点信心还是好的， 2我想。 3 4“家人还是多劝导他，艾滋虽然可怕，但是好好疗养， 5能够过上正常的生活就好了。” 6 7“其实糖尿病也是很惨的”。我开始比惨，“糖尿病也 8是终生没法治疗，只能保守治疗。糖尿病平常也是要 9控制饮食加上不停吃药。如果碰上其他并发症，血管 10病变之类了，也是很痛苦的。” 11 12“不不不，艾滋可怕多了。艾滋（HIV病毒）潜伏周期 13长，10年都可以和没事人一样。这段时间你要是发现 14了，提早预防，提早控制，说不定还能一辈子不爆发 15（艾滋病）。但是你如果没发现，还一点不照顾自己 16身体，有一点毛病就开药打针，你的免疫力下降了， 17提前爆发都有可能。一旦发病，就要格外小心，你的 18免疫力那么差，万一不小心交叉感染就很容易出事 19了……” 终于，病房中一直捂着头的大爷打断了我们对这个病房的探视，他有点不耐烦的比划着让我们离开。\n大概是我们打扰了他的休息，或者是空气被我们搅动的有些浑浊让他不舒服，亦或是担心我们带来什么传染源。\n我们当然不敢多问，离开后开始继续往后探访。\n……\n整个楼层差不多10间病房，大部分是中年或者老年人。\n只碰到一个和我们年纪相仿的年轻人。不过他听完我们的介绍，便静静地拿着手机翻了个身，背朝着我们，面朝自己母亲。\n我们自然很识趣的不去“打扰”他。\n我们在这层楼呆了差不多3个小时。基本没见过病人走出病房走动，那些看上去还挺健康，能起身走动的人被悬在床上的吊瓶束缚着不能到处走动。\n唯独有一个老大爷。\n大爷其实还挺精神的，虽然头发已经开始稀疏，但是胜在黑多白少，清澈的眼眸总透着一股睿智。他扶着板凳走出病房，吹着徐凤，闭目养神。有一个队友看见他出来以后便走向他，我也慢步跟了上去。\n1“我80了。” 老爷子在凳子上给我们讲述他年轻时候的故事。\n从大学毕业开始，到被分配至广州，再到在广州扎根，以及现在两个儿子还有孙子已经彻底融入广州的故事。\n很平淡，但是老人说的津津有味。\n……\n6点，我们这一支队伍探访完毕，等着另一只队伍结束一起返校。\n一个大叔提着一个板凳，走到楼梯拐角，试探性的问我们——“你们是中山大学的？”。\n这个我们在进入病房前就已经说过了。\n很明显，他是在有话想跟我们说，只是故意用那这句话作为开场白。\n我们队伍两名女生走了过去。\n不多时，那边传来了啜泣声——是那位中年大叔的。\n我在楼梯口让队伍另一名女生递了一份餐巾纸过去——我知道我对安抚人这种事情并不擅长。\n然而，大叔的哭声在那之后愈发嚎啕。\n他哭的像个孩子。\n差不多7点，女生们才安抚完大叔。我们开始准备启程返校。\n路上我从另一名女生口中知道了事情的缘由。\n大叔只有两周时间筹集手术费用，原本是通过轻松筹筹款的。但是大叔家住农村，担心因为自己的事情影响了家人在其他人眼中的形象，他停掉了轻松筹上的筹款。\n他想通过抵押房产贷款手续费，但是房产证还没过户，银行办不了。想走法律程序拿到房产证，但是时间已经由不得他。\n另外家人现在对他的态度也不是很好，不是很支持他。\n他很无助，想从我们队伍中寻求帮助。\n囚 晚上在寝室，我和一个学医的朋友谈到这次行程。\n谈着谈着，我开始感觉艾滋病患者们生活在一个囚笼中。\n**舆论** 不光之前那个向我们哭诉的大叔。现在几乎没有人敢坦诚自己是艾滋病患者（HIV携带者）。\n有的人担心舆论会影响自己的正常利益受损——工作受阻，或者在公众场合受到歧视等 也有人担心舆论会影响自己的名声——社会上普遍认为艾滋病患者不是当年风流落下的，就认为他吸毒\n舆论之下，他们宁愿躲在囚牢的阴影里。\n**治疗** 探访中，我和一名能够自由起身吃饭的患者闲聊，“多走动走动呗，有利于身体健康，也有利于治疗”。\n这句话我在无数宣传册上看到过，想必应该不会有问题。\n病人无奈的笑笑，“我基本一天吊水就有十几个小时，哪有什么机会出去走动。”\n“而且外面空气太乱了，不小心就有可能交叉感染。”她的妻子扒了一口饭，补充到。\n能将这一切看开的大抵也就只有那位80岁的老大爷了。\n大多数患者经历着长时间的治疗，再者担心自己一不小心被感染，只能在牢笼中过着提心吊胆的日子。\n**未知** 集中式的病房一定程度上减少了交叉感染的概率，也让医院的管理更加高效。\n但是这也造就了这里压抑的氛围。\n在这里的病人，睡觉之前不知道自己能不能看见第二天的太阳，也不知道下一个被“狱卒”带走的是谁，甚至都不知道自己肉体和精神还能在这种环境中撑到什么时候。\n囚笼外面，狱卒始终在徘徊。\n**社会** 目前社会上依然处于谈艾色变的环境。\n广大普通人对艾滋的了解还是有不足。人们对待艾滋病患者（甚至HIV携带者）依旧处于一种排斥的态度。\n这也就造成了艾滋病患者（以及HIV携带者）对自我在社会定位中的不足。他们自己将自己的画作“其他人”，害怕遭受周围人的歧视。患者从心理上被画牢“囚禁”起来。\n艾滋面临的不仅仅是身体上的问题，其实更包含心理上的问题。\n无形的囚笼笼罩了他们，笼内的人渴望自由。\n结语 这次探访其实挺沉重的。\n我抱着蹭公益时的心出发，回程却再无心顾念公益时。脑子里反复旋转的是今天见到的一张张面孔。\n我曾因伤住院，那一个星期憋在病房就已经差点逼疯我，不敢想艾滋病病人们要在病房中熬过被囚禁的日日夜夜。\n我们的艾滋病的知识普及度正在不断扩展，关于艾滋病的讲座也在不断开展。但是想要打破这个囚笼依然有很长一段路要走。\n我们在和病人的实际接触中，发现尽管我们对患者抱有希望，但是患者对自身却常处于一种放弃的态度。尽我们所能为他们重拾希望，想必就是我们此行最大的意义了吧。\n最后，希望有一天HIV等病毒能够想天牛病毒一样，在这个世界上消失吧。\n再说点什么 对于艾滋，依旧有很多人是恐惧的。但是它的传播途径始终有限，正常人和艾滋病患者接触过程中的正常接触是不会出问题的。在探访过程中，我也是披长衣长裤戴口罩的，避免有自己不注意的伤口暴露在空气中。\n另外，也挺庆幸自己进大学之后每年有献血这个习惯的。毕竟像我这么懒的人，每年能够进行一次严格的，免费的血检能给我免去很多麻烦。\n最后的最后，希望认识的或者不认识的，健康的或者正在和病魔斗争的你们，好好照顾自己的身体。\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/%E5%9B%9A%E7%AC%BC/","section":"post","tags":["杂谈","随笔"],"title":"囚笼"},{"body":"代码合并的prompt (http ) \u0026amp;\u0026amp; (tcp.dstport == 11434)\n1\u0026lt;|im_start|\u0026gt;user\\n```python\\n# 本文件实现一个基于 MQTT 的智能家居控制方案\\n# 包含传感器数据解析、设备联动控制、语音交互逻辑\\n# 需要安装依赖库：paho-mqtt（用于 MQTT 通信）\\n\\nimport os\\nimport json\\nimport logging\\nimport time\\nimport mqtt\\nimport yaml\\n\\n# 定义设备信息\\nDEVICE_INFO = {\\n \\\u0026#34;central_gateway\\\u0026#34;: {\\n \\\u0026#34;topic\\\u0026#34;: \\\u0026#34;homeassistant\\\u0026#34;,\\n \\\u0026#34;username\\\u0026#34;: \\\u0026#34;homeassistant\\\u0026#34;,\\n \\\u0026#34;password\\\u0026#34;: \\\u0026#34;your_password\\\u0026#34;\\n },\\n \\\u0026#34;multi_mod_gateway\\\u0026#34;: {\\n \\\u0026#34;topic\\\u0026#34;: \\\u0026#34;multi_mod\\\u0026#34;,\\n \\\u0026#34;username\\\u0026#34;: \\\u0026#34;multi_mod\\\u0026#34;,\\n \\\u0026#34;password\\\u0026#34;: \\\u0026#34;your_password\\\u0026#34;\\n },\\n \\\u0026#34;alexa_devices\\\u0026#34;: [\\n {\\\u0026#34;name\\\u0026#34;: \\\u0026#34;小爱同学1\\\u0026#34;, \\\u0026#34;topic\\\u0026#34;: \\\u0026#34;alexa/1\\\u0026#34;},\\n {\\\u0026#34;name\\\u0026#34;: \\\u0026#34;小爱同学2\\\u0026#34;, \\\u0026#34;topic\\\u0026#34;: \\\u0026#34;alexa/2\\\u0026#34;},\\n {\\\u0026#34;name\\\u0026#34;: \\\u0026#34;小爱同学3\\\u0026#34;, \\\u0026#34;topic\\\u0026#34;: \\\u0026#34;alexa/3\\\u0026#34;}\\n ]\\n}\\n\\n# 读取日志文件\\ndef parse_log_file(log_file_path):\\n sensors = {\\n \\\u0026#34;door_sensor\\\u0026#34;: {\\\u0026#34;state\\\u0026#34;: \\\u0026#34;closed\\\u0026#34;},\\n \\\u0026#34;light\\\u0026#34;: {\\\u0026#34;state\\\u0026#34;: \\\u0026#34;off\\\u0026#34;, \\\u0026#34;brightness\\\u0026#34;: 100, \\\u0026#34;color_temp\\\u0026#34;: 2700}\\n }\\n with open(log_file_path, \u0026#39;r\u0026#39;) as f:\\n for line in f:\\n if \\\u0026#34;switch\\\u0026#34; in line:\\n sensors[\\\u0026#34;light\\\u0026#34;][\\\u0026#34;state\\\u0026#34;] = line.split(\\\u0026#34; \\\u0026#34;)[1]\\n elif \\\u0026#34;brightness\\\u0026#34; in line:\\n sensors[\\\u0026#34;light\\\u0026#34;][\\\u0026#34;brightness\\\u0026#34;] = int(line.split(\\\u0026#34; \\\u0026#34;)[1])\\n elif \\\u0026#34;color_temp\\\u0026#34; in line:\\n sensors[\\\u0026#34;light\\\u0026#34;][\\\u0026#34;color_temp\\\u0026#34;] = int(line.split(\\\u0026#34; \\\u0026#34;)[1])\\n return sensors\\n\\n# 通过MQTT控制设备\\ndef call_device_api(device_name, action, payload=None):\\n client = mqtt.Client(f\\\u0026#34;{device_name}/1\\\u0026#34;)\\n client.connect(DEVICE_INFO[device_name][\\\u0026#34;topic\\\u0026#34;])\\n client.publish(f\\\u0026#34;{device_name}/{action}\\\u0026#34;, str(payload).encode())\\n client.disconnect()\\n\\n# 主程序\\ndef main():\\n log_file_path = \\\u0026#34;sensor_log.txt\\\u0026#34; # 替换为您的日志文件路径\\n sensors = parse_log_file(log_file_path)\\n \\n # 模拟传感器数据（实际应从日志文件读取）\\n print(\\\u0026#34;当前传感器状态：\\\u0026#34;)\\n for key, value in sensors.items():\\n print(f\\\u0026#34;{key}: {value}\\\u0026#34;)\\n \\n # 自动化规则（示例）\\n if sensors[\\\u0026#34;door_sensor\\\u0026#34;][\\\u0026#34;state\\\u0026#34;] == \\\u0026#34;closed\\\u0026#34;:\\n call_device_api(\\\u0026#34;light\\\u0026#34;, \\\u0026#34;off\\\u0026#34;)\\n elif sensors[\\\u0026#34;light\\\u0026#34;][\\\u0026#34;brightness\\\u0026#34;] \u0026lt; 100:\\n call_device_api(\\\u0026#34;light\\\u0026#34;, \\\u0026#34;dim\\\u0026#34;, {\\\u0026#34;brightness\\\u0026#34;: 100})\\n \\n # 语音交互（示例）\\n if input(\\\u0026#34;输入语音指令（如：开灯）：\\\u0026#34;) == \\\u0026#34;开灯\\\u0026#34;:\\n call_device_api(\\\u0026#34;light\\\u0026#34;, \\\u0026#34;on\\\u0026#34;)\\n\\nif __name__ == \\\u0026#34;__main__\\\u0026#34;:\\n main()\\n```\\n\\nThis code block includes the necessary imports, device information, log file parsing, MQTT control functions, and a main program that reads sensor data from a log file, applies automation rules based on the sensor states, and handles voice interactions.\\n\\n\\n```\\n\\nPlease rewrite the entire code block above in order to satisfy the following request: \\\u0026#34;The following code was suggested as an edit:\\n```\\n# 设备信息配置\\n# 用于通过 MQTT 与中枢网关、多模网关及小爱同学设备通信\\nDEVICE_INFO = {\\n \\\u0026#34;central_gateway\\\u0026#34;: {\\n \\\u0026#34;topic\\\u0026#34;: \\\u0026#34;homeassistant\\\u0026#34;, # MQTT 主题\\n \\\u0026#34;username\\\u0026#34;: \\\u0026#34;homeassistant\\\u0026#34;, # 认证用户名\\n \\\u0026#34;password\\\u0026#34;: \\\u0026#34;your_password\\\u0026#34; # 认证密码（需替换为实际值）\\n },\\n \\\u0026#34;multi_mod_gateway\\\u0026#34;: {\\n \\\u0026#34;topic\\\u0026#34;: \\\u0026#34;multi_mod\\\u0026#34;, # 多模网关主题\\n \\\u0026#34;username\\\u0026#34;: \\\u0026#34;multi_mod\\\u0026#34;, # 认证用户名\\n \\\u0026#34;password\\\u0026#34;: \\\u0026#34;your_password\\\u0026#34; # 认证密码\\n },\\n \\\u0026#34;alexa_devices\\\u0026#34;: [\\n {\\\u0026#34;name\\\u0026#34;: \\\u0026#34;小爱同学1\\\u0026#34;, \\\u0026#34;topic\\\u0026#34;: \\\u0026#34;alexa/1\\\u0026#34;}, # 小爱同学设备主题\\n {\\\u0026#34;name\\\u0026#34;: \\\u0026#34;小爱同学2\\\u0026#34;, \\\u0026#34;topic\\\u0026#34;: \\\u0026#34;alexa/2\\\u0026#34;},\\n {\\\u0026#34;name\\\u0026#34;: \\\u0026#34;小爱同学3\\\u0026#34;, \\\u0026#34;topic\\\u0026#34;: \\\u0026#34;alexa/3\\\u0026#34;}\\n ]\\n}\\n```\\nPlease apply it to the previous code.\\\u0026#34;. You should rewrite the entire code block without leaving placeholders, even if the code is the same as before.\u0026lt;|im_end|\u0026gt;\\n\u0026lt;|im_start|\u0026gt;assistant\\nSure! Here\u0026#39;s the entire rewritten code block:\\n```python\\n agent模式下的qpi请求 1{\u0026#34;model\u0026#34;:\u0026#34;qwen3:1.7b-q4_K_M\u0026#34;,\u0026#34;messages\u0026#34;:[{\u0026#34;role\u0026#34;:\u0026#34;system\u0026#34;,\u0026#34;content\u0026#34;:\u0026#34;\u0026lt;important_rules\u0026gt;\\n You are in agent mode.\\n\\n If you need to use multiple tools, you can call multiple read only tools simultaneously.\\n\\n Always include the language and file name in the info string when you write code blocks.\\n If you are editing \\\u0026#34;src/main.py\\\u0026#34; for example, your code block should start with \u0026#39;```python src/main.py\u0026#39;\\n\\n\\nFor larger codeblocks (\u0026gt;20 lines), use brief language-appropriate placeholders for unmodified sections, e.g. \u0026#39;// ... existing code ...\u0026#39;\\n\\nHowever, only output codeblocks for suggestion and demonstration purposes, for example, when enumerating multiple hypothetical options. For implementing changes, use the edit tools.\\n\\n\u0026lt;/important_rules\u0026gt;\u0026#34;},{\u0026#34;role\u0026#34;:\u0026#34;user\u0026#34;,\u0026#34;content\u0026#34;:\u0026#34;This is the currently open file:\\n\\n```README.md\\n# 💡 Qwen3 AI 编程助手（Docker 化部署）\\n\\n一个轻量、隐私友好、无需本地依赖的 AI 编程环境，通过 Docker 快速启动 [Qwen3](https://github.com/QwenLM) 模型服务，替代 GitHub Copilot，在 VSCode 中实现智能代码补全、生成和解释。\\n\\n\u0026gt; 🔥 特点：\\n\u0026gt; - ✅ 不在本地安装任何 AI 框架（Ollama / PyTorch / llama.cpp）\\n\u0026gt; - ✅ 所有运行都在容器中完成\\n\u0026gt; - ✅ 支持中文注释、函数生成、单元测试\\n\u0026gt; - ✅ 无额度限制，完全可控\\n\u0026gt; - ✅ 可搭配 GPU 加速（NVIDIA 用户）\\n\\n---\\n\\n## 🚀 快速开始\\n\\n### 1. 安装依赖\\n\\n确保你已安装：\\n- [Docker Engine](https://docs.docker.com/get-docker/)\\n- [Docker Compose](https://docs.docker.com/compose/install/)（v2.23+）\\n- [VSCode](https://code.visualstudio.com/)\\n- [Continue 插件](https://marketplace.visualstudio.com/items?itemName=continue.continue)\\n\\n\u0026gt; 💡 推荐使用 Linux/macOS 或 WSL2（Windows）\\n\\n### 2. 克隆项目\\n\\n```bash\\ngit clone https://github.com/yourname/qwen-coder.git\\ncd qwen-coder\\n\\n\\n```\\n\\n```docker-compose.yml\\n# docker-compose.yml\\nservices:\\n ollama:\\n image: ollama/ollama:latest\\n ports:\\n - \\\u0026#34;11434:11434\\\u0026#34;\\n volumes:\\n - ./models:/root/.ollama/models\\n environment:\\n - OLLAMA_HOST=0.0.0.0\\n - OLLAMA_MAX_LOADED_MODELS=1 # 只加载一个模型\\n - OLLAMA_KEEP_ALIVE=5m # 模型常驻内存，避免反复加载\\n deploy:\\n resources:\\n limits:\\n memory: 12G # 显式限制，防止超用\\n restart: unless-stopped\\n # 彻底重置 entrypoint 为 shell，并传入命令\\n entrypoint: [\\\u0026#34;/bin/sh\\\u0026#34;, \\\u0026#34;-c\\\u0026#34;]\\n command: |\\n \\\u0026#34;\\n # 启动 ollama 服务（后台）\\n ollama serve \u0026amp;\\n \\n # 等待服务启动\\n sleep 5\\n\\n # 拉取模型\\n echo \u0026#39;📥 开始下载 qwen:7b-chat-q4_K_M...\u0026#39;\\n ollama pull qwen:7b-chat-q4_K_M || echo \u0026#39;⚠️ 下载失败\u0026#39;\\n\\n echo \u0026#39;📥 开始下载 qwen3:4b-instruct-2507-q4_K_M...\u0026#39;\\n ollama pull qwen3:4b-instruct-2507-q4_K_M || echo \u0026#39;⚠️ 下载失败\u0026#39;\\n\\n echo \u0026#39;📥 开始下载 qwen3:4b-instruct...\u0026#39;\\n ollama pull qwen3:4b-instruct || echo \u0026#39;⚠️ 下载失败\u0026#39;\\n\\n echo \u0026#39;📥 开始下载 qwen2.5-coder:3b...\u0026#39;\\n ollama pull qwen2.5-coder:3b || echo \u0026#39;⚠️ 下载失败\u0026#39;\\n\\n echo \u0026#39;📥 开始下载 qwen3:1.7b-fp16...\u0026#39;\\n ollama pull qwen3:1.7b-fp16 || echo \u0026#39;⚠️ 下载失败\u0026#39;\\n\\n echo \u0026#39;📥 开始下载 qwen3:1.7b-q4_K_M...\u0026#39;\\n ollama pull qwen3:1.7b-q4_K_M || echo \u0026#39;⚠️ 下载失败\u0026#39;\\n\\n echo \u0026#39;📥 开始下载 qwen2.5-coder:1.5b-instruct-q5_K_M...\u0026#39;\\n ollama pull qwen2.5-coder:1.5b-instruct-q5_K_M || echo \u0026#39;⚠️ 下载失败\u0026#39;\\n\\n echo \u0026#39;✅ 所有模型下载完成！服务持续运行中...\u0026#39;\\n \\n # 保持容器不退出（等待 ollama serve）\\n wait\\n \\\u0026#34;\\n```\\n\\n```.continue/config.json\\n{\\n \\\u0026#34;models\\\u0026#34;: [\\n {\\n \\\u0026#34;title\\\u0026#34;: \\\u0026#34;qwen2.5-1.5b-instruct\\\u0026#34;,\\n \\\u0026#34;name\\\u0026#34;: \\\u0026#34;qwen2.5-1.5b-instruct\\\u0026#34;,\\n \\\u0026#34;model\\\u0026#34;: \\\u0026#34;qwen2.5-coder:1.5b-instruct-q5_K_M\\\u0026#34;,\\n \\\u0026#34;apiBase\\\u0026#34;: \\\u0026#34;http://localhost:11434\\\u0026#34;,\\n \\\u0026#34;contextLength\\\u0026#34;: 32768,\\n \\\u0026#34;maxContextTokens\\\u0026#34;: 4096,\\n \\\u0026#34;temperature\\\u0026#34;: 0.7,\\n \\\u0026#34;topP\\\u0026#34;: 0.9,\\n \\\u0026#34;type\\\u0026#34;: \\\u0026#34;ollama\\\u0026#34;,\\n \\\u0026#34;provider\\\u0026#34;: \\\u0026#34;ollama\\\u0026#34;\\n },\\n {\\n \\\u0026#34;title\\\u0026#34;: \\\u0026#34;qwen3_1.7b-q4\\\u0026#34;,\\n \\\u0026#34;name\\\u0026#34;: \\\u0026#34;qwen3_1.7b-q4\\\u0026#34;,\\n \\\u0026#34;model\\\u0026#34;: \\\u0026#34;qwen3:1.7b-q4_K_M\\\u0026#34;,\\n \\\u0026#34;apiBase\\\u0026#34;: \\\u0026#34;http://localhost:11434\\\u0026#34;,\\n \\\u0026#34;contextLength\\\u0026#34;: 32768,\\n \\\u0026#34;maxContextTokens\\\u0026#34;: 4096,\\n \\\u0026#34;temperature\\\u0026#34;: 0.7,\\n \\\u0026#34;topP\\\u0026#34;: 0.9,\\n \\\u0026#34;type\\\u0026#34;: \\\u0026#34;ollama\\\u0026#34;,\\n \\\u0026#34;provider\\\u0026#34;: \\\u0026#34;ollama\\\u0026#34;\\n }\\n ],\\n \\\u0026#34;tabAutocompleteModel\\\u0026#34;: {\\n \\\u0026#34;model\\\u0026#34;: \\\u0026#34;qwen2.5-coder:1.5b-instruct-q5_K_M\\\u0026#34;,\\n \\\u0026#34;apiBase\\\u0026#34;: \\\u0026#34;http://localhost:11434\\\u0026#34;,\\n \\\u0026#34;provider\\\u0026#34;: \\\u0026#34;ollama\\\u0026#34;,\\n \\\u0026#34;title\\\u0026#34;: \\\u0026#34;qwen2.5-1.5b-instruct\\\u0026#34;\\n },\\n \\\u0026#34;autocomplete\\\u0026#34;: {\\n \\\u0026#34;prefixLines\\\u0026#34;: 20,\\n \\\u0026#34;suffixLines\\\u0026#34;: 5,\\n \\\u0026#34;debounceTime\\\u0026#34;: 150,\\n \\\u0026#34;timeout\\\u0026#34;: 6000,\\n \\\u0026#34;maxContextTokens\\\u0026#34;: 2048\\n }\\n}\\n```\\n\\ndocker-compose.yml config.json \\n请根据当前ollama的启动配置，刷新一下README.md文件\u0026#34;}],\u0026#34;options\u0026#34;:{\u0026#34;num_predict\u0026#34;:4096,\u0026#34;stop\u0026#34;:[\u0026#34;\u0026lt;|im_start|\u0026gt;\u0026#34;,\u0026#34;\u0026lt;|im_end|\u0026gt;\u0026#34;],\u0026#34;num_ctx\u0026#34;:32768},\u0026#34;keep_alive\u0026#34;:1800,\u0026#34;tools\u0026#34;:[{\u0026#34;type\u0026#34;:\u0026#34;function\u0026#34;,\u0026#34;function\u0026#34;:{\u0026#34;name\u0026#34;:\u0026#34;read_file\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Use this tool if you need to view the contents of an existing file.\u0026#34;,\u0026#34;parameters\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;object\u0026#34;,\u0026#34;required\u0026#34;:[\u0026#34;filepath\u0026#34;],\u0026#34;properties\u0026#34;:{\u0026#34;filepath\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;The path of the file to read, relative to the root of the workspace (NOT uri or absolute path)\u0026#34;}}}}},{\u0026#34;type\u0026#34;:\u0026#34;function\u0026#34;,\u0026#34;function\u0026#34;:{\u0026#34;name\u0026#34;:\u0026#34;create_new_file\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Create a new file. Only use this when a file doesn\u0026#39;t exist and should be created\u0026#34;,\u0026#34;parameters\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;object\u0026#34;,\u0026#34;required\u0026#34;:[\u0026#34;filepath\u0026#34;,\u0026#34;contents\u0026#34;],\u0026#34;properties\u0026#34;:{\u0026#34;filepath\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;The path where the new file should be created, relative to the root of the workspace\u0026#34;},\u0026#34;contents\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;The contents to write to the new file\u0026#34;}}}}},{\u0026#34;type\u0026#34;:\u0026#34;function\u0026#34;,\u0026#34;function\u0026#34;:{\u0026#34;name\u0026#34;:\u0026#34;run_terminal_command\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Run a terminal command in the current directory.\\nThe shell is not stateful and will not remember any previous commands. When a command is run in the background ALWAYS suggest using shell commands to stop it; NEVER suggest using Ctrl+C. When suggesting subsequent shell commands ALWAYS format them in shell command blocks. Do NOT perform actions requiring special/admin privileges. Choose terminal commands and scripts optimized for darwin and arm64 and shell /bin/zsh.\u0026#34;,\u0026#34;parameters\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;object\u0026#34;,\u0026#34;required\u0026#34;:[\u0026#34;command\u0026#34;],\u0026#34;properties\u0026#34;:{\u0026#34;command\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;The command to run. This will be passed directly into the IDE shell.\u0026#34;},\u0026#34;waitForCompletion\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;boolean\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Whether to wait for the command to complete before returning. Default is true. Set to false to run the command in the background. Set to true to run the command in the foreground and wait to collect the output.\u0026#34;}}}}},{\u0026#34;type\u0026#34;:\u0026#34;function\u0026#34;,\u0026#34;function\u0026#34;:{\u0026#34;name\u0026#34;:\u0026#34;file_glob_search\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Search for files recursively in the project using glob patterns. Supports ** for recursive directory search. Output may be truncated; use targeted patterns\u0026#34;,\u0026#34;parameters\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;object\u0026#34;,\u0026#34;required\u0026#34;:[\u0026#34;pattern\u0026#34;],\u0026#34;properties\u0026#34;:{\u0026#34;pattern\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Glob pattern for file path matching\u0026#34;}}}}},{\u0026#34;type\u0026#34;:\u0026#34;function\u0026#34;,\u0026#34;function\u0026#34;:{\u0026#34;name\u0026#34;:\u0026#34;view_diff\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;View the current diff of working changes\u0026#34;,\u0026#34;parameters\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;object\u0026#34;,\u0026#34;properties\u0026#34;:{}}}},{\u0026#34;type\u0026#34;:\u0026#34;function\u0026#34;,\u0026#34;function\u0026#34;:{\u0026#34;name\u0026#34;:\u0026#34;read_currently_open_file\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Read the currently open file in the IDE. If the user seems to be referring to a file that you can\u0026#39;t see, or is requesting an action on content that seems missing, try using this tool.\u0026#34;,\u0026#34;parameters\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;object\u0026#34;,\u0026#34;properties\u0026#34;:{}}}},{\u0026#34;type\u0026#34;:\u0026#34;function\u0026#34;,\u0026#34;function\u0026#34;:{\u0026#34;name\u0026#34;:\u0026#34;ls\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;List files and folders in a given directory\u0026#34;,\u0026#34;parameters\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;object\u0026#34;,\u0026#34;properties\u0026#34;:{\u0026#34;dirPath\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;The directory path relative to the root of the project. Use forward slash paths like \u0026#39;/\u0026#39;. rather than e.g. \u0026#39;.\u0026#39;\u0026#34;},\u0026#34;recursive\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;boolean\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;If true, lists files and folders recursively. To prevent unexpected large results, use this sparingly\u0026#34;}}}}},{\u0026#34;type\u0026#34;:\u0026#34;function\u0026#34;,\u0026#34;function\u0026#34;:{\u0026#34;name\u0026#34;:\u0026#34;create_rule_block\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Creates a \\\u0026#34;rule\\\u0026#34; that can be referenced in future conversations. This should be used whenever you want to establish code standards / preferences that should be applied consistently, or when you want to avoid making a mistake again. To modify existing rules, use the edit tool instead.\\n\\nRule Types:\\n- Always: Include only \\\u0026#34;rule\\\u0026#34; (always included in model context)\\n- Auto Attached: Include \\\u0026#34;rule\\\u0026#34;, \\\u0026#34;globs\\\u0026#34;, and/or \\\u0026#34;regex\\\u0026#34; (included when files match patterns)\\n- Agent Requested: Include \\\u0026#34;rule\\\u0026#34; and \\\u0026#34;description\\\u0026#34; (AI decides when to apply based on description)\\n- Manual: Include only \\\u0026#34;rule\\\u0026#34; (only included when explicitly mentioned using @ruleName)\u0026#34;,\u0026#34;parameters\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;object\u0026#34;,\u0026#34;required\u0026#34;:[\u0026#34;name\u0026#34;,\u0026#34;rule\u0026#34;],\u0026#34;properties\u0026#34;:{\u0026#34;name\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Short, descriptive name summarizing the rule\u0026#39;s purpose (e.g. \u0026#39;React Standards\u0026#39;, \u0026#39;Type Hints\u0026#39;)\u0026#34;},\u0026#34;rule\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Clear, imperative instruction for future code generation (e.g. \u0026#39;Use named exports\u0026#39;, \u0026#39;Add Python type hints\u0026#39;). Each rule should focus on one specific standard.\u0026#34;},\u0026#34;description\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Description of when this rule should be applied. Required for Agent Requested rules (AI decides when to apply). Optional for other types.\u0026#34;},\u0026#34;globs\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Optional file patterns to which this rule applies (e.g. [\u0026#39;**/*.{ts,tsx}\u0026#39;] or [\u0026#39;src/**/*.ts\u0026#39;, \u0026#39;tests/**/*.ts\u0026#39;])\u0026#34;},\u0026#34;regex\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Optional regex patterns to match against file content. Rule applies only to files whose content matches the pattern (e.g. \u0026#39;useEffect\u0026#39; for React hooks or \u0026#39;\\\\bclass\\\\b\u0026#39; for class definitions)\u0026#34;},\u0026#34;alwaysApply\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;boolean\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Whether this rule should always be applied. Set to false for Agent Requested and Manual rules. Omit or set to true for Always and Auto Attached rules.\u0026#34;}}}}},{\u0026#34;type\u0026#34;:\u0026#34;function\u0026#34;,\u0026#34;function\u0026#34;:{\u0026#34;name\u0026#34;:\u0026#34;fetch_url_content\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Can be used to view the contents of a website using a URL. Do NOT use this for files.\u0026#34;,\u0026#34;parameters\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;object\u0026#34;,\u0026#34;required\u0026#34;:[\u0026#34;url\u0026#34;],\u0026#34;properties\u0026#34;:{\u0026#34;url\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;The URL to read\u0026#34;}}}}},{\u0026#34;type\u0026#34;:\u0026#34;function\u0026#34;,\u0026#34;function\u0026#34;:{\u0026#34;name\u0026#34;:\u0026#34;single_find_and_replace\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Performs exact string replacements in files.\\n\\nUsage:\\n\\n- You must use your `read_file` tool at least once in the conversation before\\nediting. This tool will error if you attempt an edit without reading the file.\\n\\n- When editing text from read_file tool output, ensure you preserve the exact\\nindentation (tabs/spaces) as it appears AFTER the line number prefix. The line\\nnumber prefix format is: spaces + line number + tab. Everything after that tab\\nis the actual file content to match. Never include any part of the line number\\nprefix in the old_string or new_string.\\n\\n- ALWAYS prefer editing existing files in the codebase. NEVER write new files\\nunless explicitly required.\\n\\n- Only use emojis if the user explicitly requests it. Avoid adding emojis to\\nfiles unless asked.\\n\\n- Note this tool CANNOT be called in parallel with other tools.\\n\\n- The edit will FAIL if `old_string` is not unique in the file. Either provide\\na larger string with more surrounding context to make it unique or use\\n`replace_all` to change every instance of `old_string`.\\n\\n- Use `replace_all` for replacing and renaming strings across the file. This\\nparameter is useful if you want to rename a variable for instance.\u0026#34;,\u0026#34;parameters\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;object\u0026#34;,\u0026#34;required\u0026#34;:[\u0026#34;filepath\u0026#34;,\u0026#34;old_string\u0026#34;,\u0026#34;new_string\u0026#34;],\u0026#34;properties\u0026#34;:{\u0026#34;filepath\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;The path to the file to modify, relative to the root of the workspace\u0026#34;},\u0026#34;old_string\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;The text to replace\u0026#34;},\u0026#34;new_string\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;The text to replace it with (must be different from old_string)\u0026#34;},\u0026#34;replace_all\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;boolean\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Replace all occurrences of old_string (default false)\u0026#34;}}}}},{\u0026#34;type\u0026#34;:\u0026#34;function\u0026#34;,\u0026#34;function\u0026#34;:{\u0026#34;name\u0026#34;:\u0026#34;search_web\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Performs a web search, returning top results. Use this tool sparingly - only for questions that require specialized, external, and/or up-to-date knowledege. Common programming questions do not require web search.\u0026#34;,\u0026#34;parameters\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;object\u0026#34;,\u0026#34;required\u0026#34;:[\u0026#34;query\u0026#34;],\u0026#34;properties\u0026#34;:{\u0026#34;query\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;The natural language search query\u0026#34;}}}}},{\u0026#34;type\u0026#34;:\u0026#34;function\u0026#34;,\u0026#34;function\u0026#34;:{\u0026#34;name\u0026#34;:\u0026#34;edit_existing_file\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Use this tool to edit an existing file. If you don\u0026#39;t know the contents of the file, read it first.\\n When addressing code modification requests, present a concise code snippet that\\n emphasizes only the necessary changes and uses abbreviated placeholders for\\n unmodified sections. For example:\\n\\n ```language /path/to/file\\n // ... existing code ...\\n\\n {{ modified code here }}\\n\\n // ... existing code ...\\n\\n {{ another modification }}\\n\\n // ... rest of code ...\\n ```\\n\\n In existing files, you should always restate the function or class that the snippet belongs to:\\n\\n ```language /path/to/file\\n // ... existing code ...\\n\\n function exampleFunction() {\\n // ... existing code ...\\n\\n {{ modified code here }}\\n\\n // ... rest of function ...\\n }\\n\\n // ... rest of code ...\\n ```\\n\\n Since users have access to their complete file, they prefer reading only the\\n relevant modifications. It\u0026#39;s perfectly acceptable to omit unmodified portions\\n at the beginning, middle, or end of files using these \\\u0026#34;lazy\\\u0026#34; comments. Only\\n provide the complete file when explicitly requested. Include a concise explanation\\n of changes unless the user specifically asks for code only.\\n\\nNote this tool CANNOT be called in parallel with other tools.\u0026#34;,\u0026#34;parameters\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;object\u0026#34;,\u0026#34;required\u0026#34;:[\u0026#34;filepath\u0026#34;,\u0026#34;changes\u0026#34;],\u0026#34;properties\u0026#34;:{\u0026#34;filepath\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;The path of the file to edit, relative to the root of the workspace.\u0026#34;},\u0026#34;changes\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Any modifications to the file, showing only needed changes. Do NOT wrap this in a codeblock or write anything besides the code changes. In larger files, use brief language-appropriate placeholders for large unmodified sections, e.g. \u0026#39;// ... existing code ...\u0026#39;\u0026#34;}}}}},{\u0026#34;type\u0026#34;:\u0026#34;function\u0026#34;,\u0026#34;function\u0026#34;:{\u0026#34;name\u0026#34;:\u0026#34;grep_search\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Perform a search over the repository using ripgrep. Output may be truncated, so use targeted queries\u0026#34;,\u0026#34;parameters\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;object\u0026#34;,\u0026#34;required\u0026#34;:[\u0026#34;query\u0026#34;],\u0026#34;properties\u0026#34;:{\u0026#34;query\u0026#34;:{\u0026#34;type\u0026#34;:\u0026#34;string\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;The search query to use. Must be a valid ripgrep regex expression, escaped where needed\u0026#34;}}}}}]} chat 模式下的请求 1{\u0026#34;model\u0026#34;:\u0026#34;qwen3:1.7b-q4_K_M\u0026#34;,\u0026#34;messages\u0026#34;:[{\u0026#34;role\u0026#34;:\u0026#34;system\u0026#34;,\u0026#34;content\u0026#34;:\u0026#34;\u0026lt;important_rules\u0026gt;\\n You are in chat mode.\\n\\n If the user asks to make changes to files offer that they can use the Apply Button on the code block, or switch to Agent Mode to make the suggested updates automatically.\\n If needed concisely explain to the user they can switch to agent mode using the Mode Selector dropdown and provide no other details.\\n\\n Always include the language and file name in the info string when you write code blocks.\\n If you are editing \\\u0026#34;src/main.py\\\u0026#34; for example, your code block should start with \u0026#39;```python src/main.py\u0026#39;\\n\\n When addressing code modification requests, present a concise code snippet that\\n emphasizes only the necessary changes and uses abbreviated placeholders for\\n unmodified sections. For example:\\n\\n ```language /path/to/file\\n // ... existing code ...\\n\\n {{ modified code here }}\\n\\n // ... existing code ...\\n\\n {{ another modification }}\\n\\n // ... rest of code ...\\n ```\\n\\n In existing files, you should always restate the function or class that the snippet belongs to:\\n\\n ```language /path/to/file\\n // ... existing code ...\\n\\n function exampleFunction() {\\n // ... existing code ...\\n\\n {{ modified code here }}\\n\\n // ... rest of function ...\\n }\\n\\n // ... rest of code ...\\n ```\\n\\n Since users have access to their complete file, they prefer reading only the\\n relevant modifications. It\u0026#39;s perfectly acceptable to omit unmodified portions\\n at the beginning, middle, or end of files using these \\\u0026#34;lazy\\\u0026#34; comments. Only\\n provide the complete file when explicitly requested. Include a concise explanation\\n of changes unless the user specifically asks for code only.\\n\\n\u0026lt;/important_rules\u0026gt;\u0026#34;},{\u0026#34;role\u0026#34;:\u0026#34;user\u0026#34;,\u0026#34;content\u0026#34;:\u0026#34;接下来我会与你进行多轮对话，请你做好准备\u0026#34;},{\u0026#34;role\u0026#34;:\u0026#34;assistant\u0026#34;,\u0026#34;content\u0026#34;:\u0026#34;I\u0026#39;m ready to assist with any programming tasks or development work you\u0026#39;d like to tackle. Please let me know what specific problem or feature you\u0026#39;d like to address, and I\u0026#39;ll follow the rules for code modifications and communication as outlined. For example, if you want to implement a feature in src/main.py, I\u0026#39;ll format the code changes properly with file paths and concise explanations. Just share your request and I\u0026#39;ll prepare the response accordingly.\u0026#34;},{\u0026#34;role\u0026#34;:\u0026#34;user\u0026#34;,\u0026#34;content\u0026#34;:\u0026#34;首先请介绍一些你自己\u0026#34;},{\u0026#34;role\u0026#34;:\u0026#34;assistant\u0026#34;,\u0026#34;content\u0026#34;:\u0026#34;I\u0026#39;m a large language model developed by Alibaba Cloud, designed to assist with programming tasks, provide technical support, and offer helpful information. I can help with coding, debugging, explaining concepts, and more. However, I cannot replace human experts and should be used as a complementary tool. Let me know if you need assistance with any specific task!\u0026#34;},{\u0026#34;role\u0026#34;:\u0026#34;user\u0026#34;,\u0026#34;content\u0026#34;:\u0026#34;接着用英语、法语、俄语 分别翻译一下“你好”\u0026#34;}],\u0026#34;options\u0026#34;:{\u0026#34;num_predict\u0026#34;:4096,\u0026#34;stop\u0026#34;:[\u0026#34;\u0026lt;|im_start|\u0026gt;\u0026#34;,\u0026#34;\u0026lt;|im_end|\u0026gt;\u0026#34;],\u0026#34;num_ctx\u0026#34;:32768},\u0026#34;keep_alive\u0026#34;:1800} ","link":"https://yunyaolong.github.io/longyunyao.github.io/post/2025/ai-agent%E6%A2%B3%E7%90%86/","section":"post","tags":null,"title":""},{"body":"continue插件配置参考 https://hub.continue.dev/ollama/qwen2.5-coder-1.5b?view=config\n","link":"https://yunyaolong.github.io/longyunyao.github.io/post/2025/%E5%9F%BA%E4%BA%8Econtinue%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8%E5%A4%A7%E6%A8%A1%E5%9E%8B/","section":"post","tags":null,"title":""},{"body":"代码问题 不合理地使用观察者模式 不合理的实现多对多的通知机制 当前代码架构中，CloudDesign和SmartNDP在解决微服务内部模块的push - push方式的主动消息通知的时候使用了观察者模式。\n由于模块众多，且消息发送方和消息接收方均有多个，使用该方式便出现了多对多的上下游关系。同时由于上下游之间存在不同事务的触发，因此Observer在接收到Observable的消息之后，还需要经过一次Eent拆分，用于区分不同的事务。\n这种网状式的拓扑结构存在以下缺点：\n较难维护，该拓扑图中每增加一个ConcreteObservable，就会有一组新的外出弧指向需要接受该消息的ConcreteObserver对这个ConcreteObservable进行依赖，用于Observer注册。很难从全貌上维护这张拓扑图，且违背依赖倒置原则。 所有的Observer除了要维护自己所有需要观察的Observable之外，还需要维护接受消息之后的Event的消费策略。 同一个消息串行发送导致消息延迟 传统的观察者模式，在Observable发送消息时，通常使用循环遍历列表中所有的的Observer，然后逐次进行消息的串行发送，这就造成观察者队列中越靠后注册，就会越晚消费。\n这在经典1对多的观察者模式中该问题不是特别明显，但是在网状的消息通知网中，越在下游的模块，消费的时间越晚，同时存在重复消费相同消息的问题。\n不合理的架构实现 SmartNDP除了上述两个问题外，还存在另外两个问题：\n不合理的依赖关系 不合理的观察者实现方式 不合理的依赖关系 在SmartNDP中，实现者没有在所有的ConcreteObserver中维护自己感兴趣的ConcreteObservable，而是反向的在ConcreteObservable中维护了一份ConcreteObserver的引用（准确说是bean在IoC容器中的名字）。\n目的是为了IoC容器启动之后，避免反复查找。\n结果导致有一个新的ConcreteObserver需要对一个已有的观察者的某一个Event感兴趣的时候，除了需要修改ConcreteObserver中对于Event的策略之外，还要\n不合理的观察者实现方式 重构思路 利用推送订阅模式解决网状通知问题 为了解决当前这种复杂的网状通知模式，我参考了Oracle官网对于发布订阅模式的概念图和角色定义以及功能建议。同时参考了Design Patterns: Elements of Reusable Object-Oriented Software中，Observer章节中的建议：“When the dependency relationship between subjects and observers is particularly complex, an object that maintains these relationships might be required. We call such an object a ChangeManager. Its purpose is to minimize the work required to make observers reflect a change in their subject...”，以及上述书籍中的代码框架。\n最终定义了如下UML类图。同时手绘了一份工作逻辑图用于帮助编码和实现。\n利用并发解决消息延迟问题 利用构造模式 + 可访问性最小化原则保证消息传递过程中的不可变 消息传递过程中，我希望一个Message的实例对象在传送出去之后，不应该再被篡改内部的对象的值，因此Message的定义中，我使用Builder(构造)模式一次性的完成Message的构造，同时显性的屏蔽了Message的setter。（这里我特地让Message不同于J2EE规范中的bean的规范，而是遵循了Java中String、基本类型的封装类等天然具有线程安全属性的类的设计模式）\n参考资料——Effective Java, 3rd Edition 第2条、第17条约定。\n使用单例模式 + 消息总线保证消息处理和分发的一致性 在初始设计的UML类图之上，我让MessageBroker的实现类保持单例，用于保证分发过程的一致性。\n同时我在该实现类中设计并且定义了一个单实例的MessagePipelne用于实际完成分发任务，在MessagePipelne中，定义并且维护了一个消息总线，保证消息分发的线程安全和避免某一组消息被一直抢占导致饥饿（注1：某类消息可能一直发送导致其一直占据管道，从而使每分配上的消息存在无法分发的可能；注2：业务上消息分发不及时造成的影响比消息不停切换管道在性能上造成的影响更大）；\n使用多管道 + 开放地址法 + 空对象模式进行消息的快速分发和动态扩容 一个Message的封装类，携带了当前这个Message发送时的Feature计算函数；\n消息分发完成之后，我对分发下来的相同Feature的Message\n一个Pipeline类用于实际的同一个特征的消息的实际下发（这里对重复消息作了抢占和非抢占两种信息调度算法，用于解决上述问题中的重复消息问题）。 MessageBroker中包级私有类的实现参考资料——Effective Java, 3rd Edition 第15条约定。\n利用策略模式驱动消费者的事件处理 代码框架 代码样例 ","link":"https://yunyaolong.github.io/longyunyao.github.io/post/%E5%8E%86%E5%8F%B2/%E9%87%8D%E6%9E%84%E6%80%9D%E8%B7%AF/","section":"post","tags":null,"title":""}]