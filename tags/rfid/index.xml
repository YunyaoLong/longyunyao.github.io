<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RFID on Clarity</title>
    <link>https://yaoyl.cn//tags/rfid/</link>
    <description>Recent content in RFID on Clarity</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>Copyright © 2017–2025, Yunyao Long and the Hugo Authors; 粤ICP备-17050867-1号</copyright>
    <lastBuildDate>Tue, 23 May 2017 01:19:42 +0000</lastBuildDate><atom:link href="https://yaoyl.cn//tags/rfid/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RFID实验三总结</title>
      <link>https://yaoyl.cn//post/%E5%8E%86%E5%8F%B2/rfid%E5%AE%9E%E9%AA%8C%E4%B8%89%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 23 May 2017 01:19:42 +0000</pubDate>
      
      <guid>https://yaoyl.cn//post/%E5%8E%86%E5%8F%B2/rfid%E5%AE%9E%E9%AA%8C%E4%B8%89%E6%80%BB%E7%BB%93/</guid>
      <description>
        
          
            &lt;blockquote&gt;
&lt;p&gt;一次debug到哭泣的经历。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;龙云尧个人博客，转载请注明出处。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;CSDN地址：&lt;/p&gt;
&lt;p&gt;个人blog地址：http://123.207.243.115:81/rfidshi-yan-san-zong-jie/&lt;/p&gt;
&lt;p&gt;在实验过程中，需要不断翻阅实验课PPT之**《04 电子钱包的功能》&lt;strong&gt;，word之&lt;/strong&gt;《实验3文档》**，以及不知名大佬的&lt;a href=&#34;http://www.tqcto.com/article/software/83894.html&#34;&gt;课程总代码&lt;/a&gt;，CSDN大佬吕浪的&lt;a href=&#34;http://blog.csdn.net/lv_victor/article/details/51028930&#34;&gt;Java card开发系列文章&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;本次实验和前两次实验相比，代码量多&lt;strong&gt;很多&lt;/strong&gt;，并且&lt;strong&gt;实验思路稍有区别&lt;/strong&gt;。实验之前可以不太懂实验流程（主要是因为流程本身就太复杂了），但是一定要&lt;strong&gt;一遍又一遍阅读源代码&lt;/strong&gt;，只有在读源码的过程中，才能体会整个验证过程，对项目中涉及到的函数方法的使用才能有一个更加深入的了解。接着自己不断重写代码，理解整个实现过程，才能对这个课程实验有较为深入的了解。&lt;/p&gt;
&lt;p&gt;最终的代码地址：https://github.com/LongyunYao/RFID_lab/&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;代码在未征得本人同意之前，请勿直接Ctrl+C，Ctrl+V，谢谢。&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;正式实验&#34;&gt;正式实验&lt;/h1&gt;
&lt;h2 id=&#34;实验分析&#34;&gt;实验分析&lt;/h2&gt;
&lt;p&gt;首先我们在PPT中知道本次实验的主要需要实现的功能是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;圈存&lt;/li&gt;
&lt;li&gt;消费&lt;/li&gt;
&lt;li&gt;余额查询&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来我们开始看ppt《04 电子钱包的功能》和《实验3文档》。&lt;/p&gt;
&lt;p&gt;首先是圈存功能的流程图。&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;圈存流程&#34;
      
        class=&#34;image_figure image_external image_unprocessed&#34;
        src=&#34;http://img.blog.csdn.net/20170423014034933?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;流程图中我们可以分析出圈存一共有4个步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;终端发送消息初始化&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IC响应初始化，并且发送MAC1验证&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;终端验证MAC1，确认IC卡是否合法，然后发送包含MAC2的圈存命令&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IC卡验证终端机的合法性，执行完成以后返回TAC响应操作完成&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来我们将一步一步仔细分析圈存是如何实现的。&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;圈存初始化命令&#34;
      
        class=&#34;image_figure image_external image_unprocessed&#34;
        src=&#34;http://img.blog.csdn.net/20170423013823877?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;step1：圈存机发送的初始信息如下所示。消息中包含了&lt;strong&gt;秘钥标识符&lt;/strong&gt;，&lt;strong&gt;交易金额&lt;/strong&gt;，&lt;strong&gt;终端机编号&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;IC卡响应圈存初始化命令&#34;
      
        class=&#34;image_figure image_external image_unprocessed&#34;
        src=&#34;http://img.blog.csdn.net/20170423014006004?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;IC卡处理圈存初始化信息流程&#34;
      
        class=&#34;image_figure image_external image_unprocessed&#34;
        src=&#34;http://img.blog.csdn.net/20170423020343856?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;step2：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;IC卡根据秘钥标识符寻找圈存秘钥&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;生成过程秘钥。输入数据为[伪随机数||电子钱包联机交易序号||8000]，秘钥为圈存秘钥，使用3DES加密算法。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;生成MAC1。输入数据为[电子钱包余额（交易前）||交易金额||交易类型标识||终端机编号]，秘钥为过程秘钥，使用我们在上一次实现的MAC生成函数gmac4，计算出MAC1用来表明身份。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IC卡返回[余额||联机交易序列号||秘钥版本号||算法标识||伪随机数||MAC1]。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;圈存指令&#34;
      
        class=&#34;image_figure image_external image_unprocessed&#34;
        src=&#34;http://img.blog.csdn.net/20170423014058551?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;圈存指令流程&#34;
      
        class=&#34;image_figure image_external image_unprocessed&#34;
        src=&#34;http://img.blog.csdn.net/20170423025731193?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;step3：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;圈存机对IC卡发挥的MAC1信息进行校验，如果正确就说明IC卡信息合法。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;计算MAC2。输入信息为[交易金额||交易类型标识||终端机编号||交易日期（主机）||交易时间（主机）]，秘钥为过程秘钥，加密算法为依然为gmac4。用来表明自己的身份。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;发送圈存指令。消息中包含[交易日期||交易时间||MAC2]。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;圈存TAC&#34;
      
        class=&#34;image_figure image_external image_unprocessed&#34;
        src=&#34;http://img.blog.csdn.net/20170423030729769?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;TAC&#34;
      
        class=&#34;image_figure image_external image_unprocessed&#34;
        src=&#34;http://img.blog.csdn.net/20170423124717634?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTWljaGFlbDc1Mzk1MQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;step4：&lt;strong&gt;IC使用同样的算法计算MAC2，如果计算结果和终端返回的MAC2一致，就说明终端的身份合法。IC卡就会执行圈存命令。同时返回TAC。其中TAC计算时，输入数据为[电子钱包余额（交易后）||电子钱包联机交易序号（加１前）||交易金额||交易类型标识||终端机编号||交易日期（主机）||交易时间（主机）]，密钥为TAC密码最左8个字节与TAC密码最右8个字节异或的结果。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;到这里整个圈存过程就结束了。消费以及查询和圈存的实现原理一致，这里就不赘述了。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>RFID实验二总结</title>
      <link>https://yaoyl.cn//post/%E5%8E%86%E5%8F%B2/rfid%E5%AE%9E%E9%AA%8C%E4%BA%8C%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 21 May 2017 02:55:05 +0000</pubDate>
      
      <guid>https://yaoyl.cn//post/%E5%8E%86%E5%8F%B2/rfid%E5%AE%9E%E9%AA%8C%E4%BA%8C%E6%80%BB%E7%BB%93/</guid>
      <description>
        
          
            &lt;blockquote&gt;
&lt;p&gt;没见过debug还这么麻烦的。。。。&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;龙云尧个人博客，转载请注明出处。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;CSDN地址：http://blog.csdn.net/michael753951/article/details/70307683&lt;/p&gt;
&lt;p&gt;个人blog地址：http://123.207.243.115:81/rfidshi-yan-er-zong-jie-2/&lt;/p&gt;
&lt;p&gt;在实验过程中，需要不断翻阅实验课PPT之《03 电子钱包的安全管理》，《实验3文档》，以及不知名大佬的&lt;a href=&#34;http://www.tqcto.com/article/software/83894.html&#34;&gt;课程总代码&lt;/a&gt;，CSDN大佬吕浪的&lt;a href=&#34;http://blog.csdn.net/lv_victor/article/details/51028930&#34;&gt;Java card开发系列文章&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;然后再自己不断重写代码，理解整个实现过程，才能对这个课程实验有较为深入的了解。&lt;/p&gt;
&lt;p&gt;最终的代码地址：https://github.com/LongyunYao/RFID_lab/&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;代码在未征得本人同意之前，请勿直接Ctrl+C，Ctrl+V，谢谢。&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;正式实验&#34;&gt;正式实验&lt;/h1&gt;
&lt;h2 id=&#34;实验分析&#34;&gt;实验分析&lt;/h2&gt;
&lt;p&gt;首先我们要知道本次实验中需要修改哪些函数，实现那哪些功能。&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;主要内容&#34;
      
        class=&#34;image_figure image_internal image_unprocessed&#34;
        src=&#34;https://yaoyl.cn/&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;首先我们在PPT中知道本次实验的主要目的是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;过程密钥的生成&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;消息验证码MAC或交易验证码TAC的生成&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;过程秘钥的产生&#34;
      
        class=&#34;image_figure image_internal image_unprocessed&#34;
        src=&#34;https://yaoyl.cn/&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;3DES&#34;
      
        class=&#34;image_figure image_internal image_unprocessed&#34;
        src=&#34;https://yaoyl.cn/&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;MACorTAC&#34;
      
        class=&#34;image_figure image_internal image_unprocessed&#34;
        src=&#34;https://yaoyl.cn/&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;MACorTAC2&#34;
      
        class=&#34;image_figure image_internal image_unprocessed&#34;
        src=&#34;https://yaoyl.cn/&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;再看详细内容，我们大概可以捋清如下关系：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;过程密钥的生成
&lt;ul&gt;
&lt;li&gt;输入数据包括“伪随机数+电子钱包联机交易序列号+8000”&lt;/li&gt;
&lt;li&gt;子密钥指的是圈存或消费密钥&lt;/li&gt;
&lt;li&gt;秘钥8字节长密钥&lt;/li&gt;
&lt;li&gt;秘钥生成过程由3次完成
&lt;ul&gt;
&lt;li&gt;子秘钥左半部分&lt;strong&gt;加密&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;子秘钥有半部分&lt;strong&gt;解密&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;子秘钥左半部分&lt;strong&gt;加密&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MAC_TAC的生成
&lt;ul&gt;
&lt;li&gt;数组初始化为0&lt;/li&gt;
&lt;li&gt;数据&lt;strong&gt;末尾填充0x80&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;数组&lt;strong&gt;补0x00直到数组长度为8的倍数&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;数组分割成数据块&lt;/li&gt;
&lt;li&gt;按照PPT**《03 电子钱包的安全管理》P13**的过程，生成MAC或者TAC&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在有了大概思路以后，我们开始阅读源代码。经过简单寻找，我们发现本次实验涉及的代码大多集中在PenCipher.java中。&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;PenCipher构造函数&#34;
      
        class=&#34;image_figure image_internal image_unprocessed&#34;
        src=&#34;https://yaoyl.cn/&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;des运算函数&#34;
      
        class=&#34;image_figure image_internal image_unprocessed&#34;
        src=&#34;https://yaoyl.cn/&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;基本的构造函数和对称加密des的运算函数，这部分函数在ppt上都有解释，推荐把ppt代码复制上来方便阅读和理解。&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;需要填充&#34;
      
        class=&#34;image_figure image_internal image_unprocessed&#34;
        src=&#34;https://yaoyl.cn/&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;这几个函数就是我们本此实验需要填写的函数了。第一个gen_SESPK是过程秘钥生成函数，后面3个都是MAC或者TAC生成中需要使用的函数。&lt;/p&gt;
&lt;h2 id=&#34;开始打码&#34;&gt;开始打码&lt;/h2&gt;
&lt;p&gt;前面的分析中，我们已经对本次实验有了大致的了解，接下来就是开始打码的过程了。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>RFID实验一总结</title>
      <link>https://yaoyl.cn//post/%E5%8E%86%E5%8F%B2/rfid%E5%AE%9E%E9%AA%8C%E4%B8%80%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sat, 20 May 2017 14:11:32 +0000</pubDate>
      
      <guid>https://yaoyl.cn//post/%E5%8E%86%E5%8F%B2/rfid%E5%AE%9E%E9%AA%8C%E4%B8%80%E6%80%BB%E7%BB%93/</guid>
      <description>
        
          
            &lt;p&gt;刚接到这个课程项目的时候，是一脸懵逼的。毕竟是第一次接触JavaCard编程（其实就是自己没认真听课）。不过在围观各路大佬的博客之后，总算对整个项目有了较为深入的了解。&lt;/p&gt;
&lt;p&gt;在实验过程中，需要不断翻阅实验课PPT之《01 Java智能卡之概述》，《02 电子钱包的文件系统》，《实验2文档》，以及不知名大佬的&lt;a href=&#34;http://www.tqcto.com/article/software/83894.html&#34;&gt;课程总代码&lt;/a&gt;，CSDN大佬吕浪的&lt;a href=&#34;http://blog.csdn.net/lv_victor/article/details/51028930&#34;&gt;Java card开发系列文章&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;然后再自己不断重写代码，理解整个实现过程，才能对这个课程实验有较为深入的了解。&lt;/p&gt;
&lt;p&gt;最终的代码地址：https://github.com/LongyunYao/RFID_lab/&lt;/p&gt;
&lt;p&gt;代码在未征得本人同意之前，请勿直接Ctrl+C，Ctrl+V，谢谢。&lt;/p&gt;
&lt;h1 id=&#34;正式实验&#34;&gt;正式实验&lt;/h1&gt;
&lt;h2 id=&#34;实验分析&#34;&gt;实验分析&lt;/h2&gt;
&lt;p&gt;首先我们要知道本次实验中需要修改哪些函数，实现那哪些功能。&lt;/p&gt;
&lt;p&gt;首先我们在PPT最后知道本次实验的主要目的是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建文件&lt;/li&gt;
&lt;li&gt;写秘钥&lt;/li&gt;
&lt;li&gt;读写二进制文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;再看详细内容，我们大概可以捋清如下关系：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建文件
&lt;ul&gt;
&lt;li&gt;卡片收到命令并且开始解析&lt;/li&gt;
&lt;li&gt;所谓的解析就是判断是何种文件，然后再进行创建&lt;/li&gt;
&lt;li&gt;异常处理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;写秘钥
&lt;ul&gt;
&lt;li&gt;秘钥消息是一条一条接受的，每次只会写入一条秘钥&lt;/li&gt;
&lt;li&gt;卡片收到命令以后，取出数据，然后写入秘钥文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;读写二进制文件
&lt;ul&gt;
&lt;li&gt;写指令只需要一条&lt;/li&gt;
&lt;li&gt;根据指令内容获得需要的参数，然后将其写入持卡人文件或者应用文件中&lt;/li&gt;
&lt;li&gt;注意：写入之前需要检查数据时候超过限定大小&lt;/li&gt;
&lt;li&gt;读取和写类似&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在有了大概思路以后，我们开始阅读源代码。经过简单寻找，我们发现本次实验涉及的代码大多集中在Purse.java中。&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;基本元素&#34;
      
        class=&#34;image_figure image_external image_processed&#34;
        width=&#34;372&#34;
        height=&#34;127&#34;
        src=&#34;//images/e80949d0-258b-11e7-96e2-89b3087741fc_7787092408133580828.png&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;上面四个元素指明了我们将要操作的几个对象。&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;process&#34;
      
        class=&#34;image_figure image_external image_processed&#34;
        width=&#34;509&#34;
        height=&#34;159&#34;
        src=&#34;//images/e7b2830c-258b-11e7-8911-d2b7e7fc9d0d_12307540848290659802.png&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;这个部分似乎用处不明。但是根据让我们填写的部分，可以看出这一块是卡片读取指令的地方，将其缓冲到papdu中，让我们得以进行后续分析。&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;handleEvent&#34;
      
        class=&#34;image_figure image_external image_processed&#34;
        width=&#34;481&#34;
        height=&#34;210&#34;
        src=&#34;//images/e78315e0-258b-11e7-8c78-08555ef584ec_12537409608955670593.png&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;注释已经说明了，在《01 Java智能卡之概述》P30也有讲到该部分的作用，这里就是我们分析指令的地方，通过这个地方我们可以知道卡片当前接收的指令目的是什么。&lt;/p&gt;
&lt;p&gt;将PPT上的操作内容先填进去，具体实现我们待会再说。&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;handleEventv1&#34;
      
        class=&#34;image_figure image_external image_processed&#34;
        width=&#34;723&#34;
        height=&#34;295&#34;
        src=&#34;//images/e78578a8-258b-11e7-803f-d095709449d4_3479832271068198507.png&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;添加INS_READ_BIN&#34;
      
        class=&#34;image_figure image_external image_processed&#34;
        width=&#34;790&#34;
        height=&#34;367&#34;
        src=&#34;//images/a3f1f2b4-258c-11e7-8164-5433dd00f23e_2002550957571907844.png&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;我们发现这里还需要添加读二进制的常量。&lt;/p&gt;
&lt;p&gt;再往下读，就是创建文件部分。&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;create_file&#34;
      
        class=&#34;image_figure image_external image_processed&#34;
        width=&#34;472&#34;
        height=&#34;439&#34;
        src=&#34;//images/e8051338-258b-11e7-8a65-057b6f6674bf_12972044147358193561.png&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;注释和代码里已经说明，将会有4种文件可以被创建&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电子钱包文件(EP_file，这个部分已经给出)&lt;/li&gt;
&lt;li&gt;秘钥文件&lt;/li&gt;
&lt;li&gt;持卡人基本文件&lt;/li&gt;
&lt;li&gt;应用基本文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;剩下的就是圈存指令获取，初始化，以及一些其他操作，不是本次试验需要关心的部分。&lt;/p&gt;
&lt;h2 id=&#34;开始打码&#34;&gt;开始打码&lt;/h2&gt;
&lt;p&gt;前面的分析中，我们已经对本次实验有了大致的了解，接下来就是开始打码的过程了。&lt;/p&gt;
&lt;p&gt;我们在PPT《01 Java智能卡之概述》中已经知道了cAPDU的结构。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
